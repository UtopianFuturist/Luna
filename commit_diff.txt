commit 7d8197fc9a9978ff9b7743c2d36a07f311806144
Author:     UtopianFuturist <Hergie76@yahoo.com>
AuthorDate: Fri Jun 6 17:22:20 2025 -0400
Commit:     GitHub <noreply@github.com>
CommitDate: Fri Jun 6 17:22:20 2025 -0400

    Manus sign-in updates

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..67885cb
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,7 @@
+node_modules
+pnpm-lock.yaml
+/.next
+.next/trace
+/out
+.next/trace
+.DS_Store
diff --git a/.next/trace b/.next/trace
new file mode 100644
index 0000000..8c5cb68
--- /dev/null
+++ b/.next/trace
@@ -0,0 +1,3 @@
+[{"name":"generate-buildid","duration":79,"timestamp":41209437547,"id":4,"parentId":1,"tags":{},"startTime":1749162606220,"traceId":"0fb0394223458a33"},{"name":"load-custom-routes","duration":122,"timestamp":41209437655,"id":5,"parentId":1,"tags":{},"startTime":1749162606220,"traceId":"0fb0394223458a33"},{"name":"create-dist-dir","duration":83,"timestamp":41209457213,"id":6,"parentId":1,"tags":{},"startTime":1749162606240,"traceId":"0fb0394223458a33"},{"name":"create-pages-mapping","duration":66,"timestamp":41209475217,"id":7,"parentId":1,"tags":{},"startTime":1749162606258,"traceId":"0fb0394223458a33"},{"name":"collect-app-paths","duration":1110,"timestamp":41209475295,"id":8,"parentId":1,"tags":{},"startTime":1749162606258,"traceId":"0fb0394223458a33"},{"name":"create-app-mapping","duration":359,"timestamp":41209476414,"id":9,"parentId":1,"tags":{},"startTime":1749162606259,"traceId":"0fb0394223458a33"},{"name":"public-dir-conflict-check","duration":219,"timestamp":41209476948,"id":10,"parentId":1,"tags":{},"startTime":1749162606260,"traceId":"0fb0394223458a33"},{"name":"generate-routes-manifest","duration":972,"timestamp":41209477261,"id":11,"parentId":1,"tags":{},"startTime":1749162606260,"traceId":"0fb0394223458a33"},{"name":"create-entrypoints","duration":6052,"timestamp":41209480482,"id":14,"parentId":1,"tags":{},"startTime":1749162606263,"traceId":"0fb0394223458a33"},{"name":"generate-webpack-config","duration":118690,"timestamp":41209486586,"id":15,"parentId":13,"tags":{},"startTime":1749162606269,"traceId":"0fb0394223458a33"},{"name":"next-trace-entrypoint-plugin","duration":756,"timestamp":41209644173,"id":17,"parentId":16,"tags":{},"startTime":1749162606427,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":125918,"timestamp":41209647316,"id":20,"parentId":18,"tags":{"request":"next/dist/pages/_app"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":135969,"timestamp":41209647325,"id":21,"parentId":18,"tags":{"request":"next-route-loader?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=next%2Fdist%2Fpages%2F_error&absoluteAppPath=next%2Fdist%2Fpages%2F_app&absoluteDocumentPath=next%2Fdist%2Fpages%2F_document&middlewareConfigBase64=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":145311,"timestamp":41209647473,"id":33,"parentId":18,"tags":{"request":"next/dist/pages/_document"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":177802,"timestamp":41209647174,"id":19,"parentId":18,"tags":{"request":"next-app-loader?page=%2F_not-found%2Fpage&name=app%2F_not-found%2Fpage&pagePath=next%2Fdist%2Fclient%2Fcomponents%2Fnot-found-error&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=next%2Fdist%2Fclient%2Fcomponents%2Fnot-found-error&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":177536,"timestamp":41209647450,"id":28,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fpage&name=app%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":177660,"timestamp":41209647330,"id":22,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fbrowser%2Fpage&name=app%2Fbrowser%2Fpage&pagePath=private-next-app-dir%2Fbrowser%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fbrowser%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":177657,"timestamp":41209647334,"id":23,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fbsky-settings%2Fpage&name=app%2Fbsky-settings%2Fpage&pagePath=private-next-app-dir%2Fbsky-settings%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fbsky-settings%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":177649,"timestamp":41209647343,"id":25,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fchat%2Fpage&name=app%2Fchat%2Fpage&pagePath=private-next-app-dir%2Fchat%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fchat%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":177655,"timestamp":41209647338,"id":24,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fchat%2F%5BchatId%5D%2Fpage&name=app%2Fchat%2F%5BchatId%5D%2Fpage&pagePath=private-next-app-dir%2Fchat%2F%5BchatId%5D%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fchat%2F%5BchatId%5D%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":177956,"timestamp":41209647347,"id":26,"parentId":18,"tags":{"request":"next-app-loader?page=%2Ffeeds%2Fpage&name=app%2Ffeeds%2Fpage&pagePath=private-next-app-dir%2Ffeeds%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Ffeeds%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":178058,"timestamp":41209647469,"id":30,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fprofile%2Fpage&name=app%2Fprofile%2Fpage&pagePath=private-next-app-dir%2Fprofile%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fprofile%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":178379,"timestamp":41209647352,"id":27,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fnotifications%2Fpage&name=app%2Fnotifications%2Fpage&pagePath=private-next-app-dir%2Fnotifications%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fnotifications%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":178480,"timestamp":41209647466,"id":29,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fprofile%2F%5Bactor%5D%2Fpage&name=app%2Fprofile%2F%5Bactor%5D%2Fpage&pagePath=private-next-app-dir%2Fprofile%2F%5Bactor%5D%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fprofile%2F%5Bactor%5D%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":178714,"timestamp":41209647471,"id":31,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fsettings%2Fprofile%2Fpage&name=app%2Fsettings%2Fprofile%2Fpage&pagePath=private-next-app-dir%2Fsettings%2Fprofile%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fsettings%2Fprofile%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":178913,"timestamp":41209647472,"id":32,"parentId":18,"tags":{"request":"next-app-loader?page=%2Fwidget-board-settings%2Fpage&name=app%2Fwidget-board-settings%2Fpage&pagePath=private-next-app-dir%2Fwidget-board-settings%2Fpage.tsx&appDir=%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp&appPaths=%2Fwidget-board-settings%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&nextConfigExperimentalUseEarlyImport=&preferredRegion=&middlewareConfig=e30%3D!"},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"build-module-ts","duration":13953,"timestamp":41209995845,"id":104,"parentId":16,"tags":{"name":"/Users/gwyn/projects/OmniSky/src/lib/bskyService.ts","layer":"ssr"},"startTime":1749162606779,"traceId":"0fb0394223458a33"},{"name":"make","duration":421625,"timestamp":41209647092,"id":18,"parentId":16,"tags":{},"startTime":1749162606430,"traceId":"0fb0394223458a33"},{"name":"get-entries","duration":427,"timestamp":41210069380,"id":106,"parentId":105,"tags":{},"startTime":1749162606852,"traceId":"0fb0394223458a33"},{"name":"node-file-trace-plugin","duration":24706,"timestamp":41210071492,"id":107,"parentId":105,"tags":{"traceEntryCount":"26"},"startTime":1749162606854,"traceId":"0fb0394223458a33"},{"name":"collect-traced-files","duration":270,"timestamp":41210096205,"id":108,"parentId":105,"tags":{},"startTime":1749162606879,"traceId":"0fb0394223458a33"},{"name":"finish-modules","duration":27187,"timestamp":41210069290,"id":105,"parentId":17,"tags":{},"startTime":1749162606852,"traceId":"0fb0394223458a33"},{"name":"chunk-graph","duration":13106,"timestamp":41210122572,"id":110,"parentId":109,"tags":{},"startTime":1749162606905,"traceId":"0fb0394223458a33"},{"name":"optimize-modules","duration":11,"timestamp":41210135733,"id":112,"parentId":109,"tags":{},"startTime":1749162606918,"traceId":"0fb0394223458a33"},{"name":"optimize-chunks","duration":16544,"timestamp":41210135775,"id":113,"parentId":109,"tags":{},"startTime":1749162606918,"traceId":"0fb0394223458a33"},{"name":"optimize-tree","duration":57,"timestamp":41210152358,"id":114,"parentId":109,"tags":{},"startTime":1749162606935,"traceId":"0fb0394223458a33"},{"name":"optimize-chunk-modules","duration":4912,"timestamp":41210152449,"id":115,"parentId":109,"tags":{},"startTime":1749162606935,"traceId":"0fb0394223458a33"},{"name":"optimize","duration":21685,"timestamp":41210135712,"id":111,"parentId":109,"tags":{},"startTime":1749162606918,"traceId":"0fb0394223458a33"},{"name":"module-hash","duration":10088,"timestamp":41210168459,"id":116,"parentId":109,"tags":{},"startTime":1749162606951,"traceId":"0fb0394223458a33"},{"name":"code-generation","duration":24111,"timestamp":41210178573,"id":117,"parentId":109,"tags":{},"startTime":1749162606961,"traceId":"0fb0394223458a33"},{"name":"hash","duration":4134,"timestamp":41210205756,"id":118,"parentId":109,"tags":{},"startTime":1749162606988,"traceId":"0fb0394223458a33"},{"name":"code-generation-jobs","duration":143,"timestamp":41210209888,"id":119,"parentId":109,"tags":{},"startTime":1749162606993,"traceId":"0fb0394223458a33"},{"name":"module-assets","duration":228,"timestamp":41210209980,"id":120,"parentId":109,"tags":{},"startTime":1749162606993,"traceId":"0fb0394223458a33"},{"name":"create-chunk-assets","duration":2134,"timestamp":41210210212,"id":121,"parentId":109,"tags":{},"startTime":1749162606993,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":2489,"timestamp":41210217845,"id":123,"parentId":122,"tags":{"name":"../app/_not-found/page.js","cache":"HIT"},"startTime":1749162607001,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":2435,"timestamp":41210217903,"id":124,"parentId":122,"tags":{"name":"../pages/_app.js","cache":"HIT"},"startTime":1749162607001,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":2432,"timestamp":41210217907,"id":125,"parentId":122,"tags":{"name":"../pages/_error.js","cache":"HIT"},"startTime":1749162607001,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":2430,"timestamp":41210217910,"id":126,"parentId":122,"tags":{"name":"../app/browser/page.js","cache":"HIT"},"startTime":1749162607001,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":2429,"timestamp":41210217912,"id":127,"parentId":122,"tags":{"name":"../app/bsky-settings/page.js","cache":"HIT"},"startTime":1749162607001,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":476,"timestamp":41210219865,"id":130,"parentId":122,"tags":{"name":"../app/feeds/page.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":471,"timestamp":41210219870,"id":131,"parentId":122,"tags":{"name":"../app/notifications/page.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":469,"timestamp":41210219873,"id":132,"parentId":122,"tags":{"name":"../app/page.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":427,"timestamp":41210219915,"id":133,"parentId":122,"tags":{"name":"../app/profile/[actor]/page.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":397,"timestamp":41210219946,"id":134,"parentId":122,"tags":{"name":"../app/profile/page.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":392,"timestamp":41210219951,"id":135,"parentId":122,"tags":{"name":"../app/settings/profile/page.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":390,"timestamp":41210219954,"id":136,"parentId":122,"tags":{"name":"../app/widget-board-settings/page.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":388,"timestamp":41210219955,"id":137,"parentId":122,"tags":{"name":"../pages/_document.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":387,"timestamp":41210219957,"id":138,"parentId":122,"tags":{"name":"../webpack-runtime.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":386,"timestamp":41210219959,"id":139,"parentId":122,"tags":{"name":"427.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":384,"timestamp":41210219961,"id":140,"parentId":122,"tags":{"name":"927.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":383,"timestamp":41210219962,"id":141,"parentId":122,"tags":{"name":"627.js","cache":"HIT"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":4243,"timestamp":41210219375,"id":129,"parentId":122,"tags":{"name":"../app/chat/page.js","cache":"MISS"},"startTime":1749162607002,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":6205,"timestamp":41210217920,"id":128,"parentId":122,"tags":{"name":"../app/chat/[chatId]/page.js","cache":"MISS"},"startTime":1749162607001,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":6025,"timestamp":41210219963,"id":142,"parentId":122,"tags":{"name":"475.js","cache":"MISS"},"startTime":1749162607003,"traceId":"0fb0394223458a33"},{"name":"minify-webpack-plugin-optimize","duration":12359,"timestamp":41210213634,"id":122,"parentId":16,"tags":{"compilationName":"server"},"startTime":1749162606996,"traceId":"0fb0394223458a33"},{"name":"css-minimizer-plugin","duration":73,"timestamp":41210226054,"id":143,"parentId":16,"tags":{},"startTime":1749162607009,"traceId":"0fb0394223458a33"},{"name":"create-trace-assets","duration":613,"timestamp":41210226208,"id":144,"parentId":17,"tags":{},"startTime":1749162607009,"traceId":"0fb0394223458a33"},{"name":"seal","duration":122084,"timestamp":41210110764,"id":109,"parentId":16,"tags":{},"startTime":1749162606893,"traceId":"0fb0394223458a33"},{"name":"webpack-compilation","duration":603211,"timestamp":41209643415,"id":16,"parentId":13,"tags":{"name":"server"},"startTime":1749162606426,"traceId":"0fb0394223458a33"},{"name":"emit","duration":2912,"timestamp":41210246850,"id":145,"parentId":13,"tags":{},"startTime":1749162607030,"traceId":"0fb0394223458a33"},{"name":"webpack-close","duration":129529,"timestamp":41210250436,"id":146,"parentId":13,"tags":{"name":"server"},"startTime":1749162607033,"traceId":"0fb0394223458a33"},{"name":"webpack-generate-error-stats","duration":1040,"timestamp":41210379994,"id":147,"parentId":146,"tags":{},"startTime":1749162607163,"traceId":"0fb0394223458a33"},{"name":"make","duration":73,"timestamp":41210384551,"id":149,"parentId":148,"tags":{},"startTime":1749162607167,"traceId":"0fb0394223458a33"},{"name":"chunk-graph","duration":186,"timestamp":41210384863,"id":151,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"optimize-modules","duration":2,"timestamp":41210385066,"id":153,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"optimize-chunks","duration":23,"timestamp":41210385092,"id":154,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"optimize-tree","duration":2,"timestamp":41210385128,"id":155,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"optimize-chunk-modules","duration":16,"timestamp":41210385152,"id":156,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"optimize","duration":123,"timestamp":41210385056,"id":152,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"module-hash","duration":4,"timestamp":41210385240,"id":157,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"code-generation","duration":4,"timestamp":41210385248,"id":158,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"hash","duration":17,"timestamp":41210385266,"id":159,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"code-generation-jobs","duration":12,"timestamp":41210385283,"id":160,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"module-assets","duration":5,"timestamp":41210385292,"id":161,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"create-chunk-assets","duration":5,"timestamp":41210385300,"id":162,"parentId":150,"tags":{},"startTime":1749162607168,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":24,"timestamp":41210386432,"id":164,"parentId":163,"tags":{"name":"interception-route-rewrite-manifest.js","cache":"HIT"},"startTime":1749162607169,"traceId":"0fb0394223458a33"},{"name":"minify-webpack-plugin-optimize","duration":233,"timestamp":41210386225,"id":163,"parentId":148,"tags":{"compilationName":"edge-server"},"startTime":1749162607169,"traceId":"0fb0394223458a33"},{"name":"css-minimizer-plugin","duration":2,"timestamp":41210386471,"id":165,"parentId":148,"tags":{},"startTime":1749162607169,"traceId":"0fb0394223458a33"},{"name":"seal","duration":2289,"timestamp":41210384813,"id":150,"parentId":148,"tags":{},"startTime":1749162607167,"traceId":"0fb0394223458a33"},{"name":"webpack-compilation","duration":3248,"timestamp":41210383885,"id":148,"parentId":13,"tags":{"name":"edge-server"},"startTime":1749162607167,"traceId":"0fb0394223458a33"},{"name":"emit","duration":248,"timestamp":41210387150,"id":166,"parentId":13,"tags":{},"startTime":1749162607170,"traceId":"0fb0394223458a33"},{"name":"webpack-close","duration":60,"timestamp":41210387480,"id":167,"parentId":13,"tags":{"name":"edge-server"},"startTime":1749162607170,"traceId":"0fb0394223458a33"},{"name":"webpack-generate-error-stats","duration":206,"timestamp":41210387542,"id":168,"parentId":167,"tags":{},"startTime":1749162607170,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":128327,"timestamp":41210390666,"id":174,"parentId":170,"tags":{"request":"next-client-pages-loader?absolutePagePath=next%2Fdist%2Fclient%2Fcomponents%2Fnot-found-error&page=%2F_not-found%2Fpage!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":153096,"timestamp":41210390668,"id":175,"parentId":170,"tags":{"request":"next-client-pages-loader?absolutePagePath=next%2Fdist%2Fpages%2F_app&page=%2F_app!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":153100,"timestamp":41210390671,"id":177,"parentId":170,"tags":{"request":"next-client-pages-loader?absolutePagePath=next%2Fdist%2Fpages%2F_error&page=%2F_error!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":153103,"timestamp":41210390670,"id":176,"parentId":170,"tags":{"request":"/Users/gwyn/projects/OmniSky/node_modules/next/dist/client/router.js"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"build-module-ts","duration":6270,"timestamp":41210543397,"id":190,"parentId":169,"tags":{"name":"/Users/gwyn/projects/OmniSky/src/lib/bskyService.ts","layer":"app-pages-browser"},"startTime":1749162607326,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":165497,"timestamp":41210390664,"id":173,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":167958,"timestamp":41210390658,"id":172,"parentId":170,"tags":{"request":"./node_modules/next/dist/client/app-next.js"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":189133,"timestamp":41210390646,"id":171,"parentId":170,"tags":{"request":"./node_modules/next/dist/client/next.js"},"startTime":1749162607173,"traceId":"0fb0394223458a33"}]
+[{"name":"add-entry","duration":265752,"timestamp":41210390672,"id":178,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Flayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":265751,"timestamp":41210390682,"id":185,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268114,"timestamp":41210390686,"id":189,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fwidget-board-settings%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268131,"timestamp":41210390673,"id":179,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fbrowser%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268130,"timestamp":41210390676,"id":180,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fbsky-settings%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268130,"timestamp":41210390678,"id":181,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fchat%2F%5BchatId%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268130,"timestamp":41210390679,"id":182,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fchat%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268129,"timestamp":41210390683,"id":186,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fprofile%2F%5Bactor%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268128,"timestamp":41210390685,"id":188,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fsettings%2Fprofile%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268134,"timestamp":41210390680,"id":183,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Ffeeds%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268134,"timestamp":41210390681,"id":184,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fnotifications%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"add-entry","duration":268133,"timestamp":41210390684,"id":187,"parentId":170,"tags":{"request":"next-flight-client-entry-loader?modules=%7B%22request%22%3A%22%2FUsers%2Fgwyn%2Fprojects%2FOmniSky%2Fsrc%2Fapp%2Fprofile%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"make","duration":268310,"timestamp":41210390547,"id":170,"parentId":169,"tags":{},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"chunk-graph","duration":9775,"timestamp":41210674639,"id":192,"parentId":191,"tags":{},"startTime":1749162607457,"traceId":"0fb0394223458a33"},{"name":"optimize-modules","duration":3,"timestamp":41210684441,"id":194,"parentId":191,"tags":{},"startTime":1749162607467,"traceId":"0fb0394223458a33"},{"name":"optimize-chunks","duration":11061,"timestamp":41210685372,"id":196,"parentId":191,"tags":{},"startTime":1749162607468,"traceId":"0fb0394223458a33"},{"name":"optimize-tree","duration":4,"timestamp":41210696451,"id":197,"parentId":191,"tags":{},"startTime":1749162607479,"traceId":"0fb0394223458a33"},{"name":"optimize-chunk-modules","duration":3810,"timestamp":41210696467,"id":198,"parentId":191,"tags":{},"startTime":1749162607479,"traceId":"0fb0394223458a33"},{"name":"optimize","duration":15858,"timestamp":41210684432,"id":193,"parentId":191,"tags":{},"startTime":1749162607467,"traceId":"0fb0394223458a33"},{"name":"module-hash","duration":6275,"timestamp":41210708066,"id":199,"parentId":191,"tags":{},"startTime":1749162607491,"traceId":"0fb0394223458a33"},{"name":"code-generation","duration":16647,"timestamp":41210714352,"id":200,"parentId":191,"tags":{},"startTime":1749162607497,"traceId":"0fb0394223458a33"},{"name":"hash","duration":2210,"timestamp":41210732735,"id":201,"parentId":191,"tags":{},"startTime":1749162607515,"traceId":"0fb0394223458a33"},{"name":"code-generation-jobs","duration":60,"timestamp":41210734945,"id":202,"parentId":191,"tags":{},"startTime":1749162607518,"traceId":"0fb0394223458a33"},{"name":"module-assets","duration":175,"timestamp":41210734995,"id":203,"parentId":191,"tags":{},"startTime":1749162607518,"traceId":"0fb0394223458a33"},{"name":"create-chunk-assets","duration":3527,"timestamp":41210735174,"id":204,"parentId":191,"tags":{},"startTime":1749162607518,"traceId":"0fb0394223458a33"},{"name":"NextJsBuildManifest-generateClientManifest","duration":614,"timestamp":41210739813,"id":206,"parentId":169,"tags":{},"startTime":1749162607522,"traceId":"0fb0394223458a33"},{"name":"NextJsBuildManifest-createassets","duration":897,"timestamp":41210739534,"id":205,"parentId":169,"tags":{},"startTime":1749162607522,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":1896,"timestamp":41210744374,"id":208,"parentId":207,"tags":{"name":"static/chunks/main-f798af326f8040e8.js","cache":"HIT"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":1886,"timestamp":41210744387,"id":209,"parentId":207,"tags":{"name":"static/chunks/main-app-7f6978a919b73ef7.js","cache":"HIT"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":1884,"timestamp":41210744389,"id":210,"parentId":207,"tags":{"name":"static/chunks/app/_not-found/page-7a1975904ceafd50.js","cache":"HIT"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":1882,"timestamp":41210744391,"id":211,"parentId":207,"tags":{"name":"static/chunks/pages/_app-44e5d7e52411c6a5.js","cache":"HIT"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":1881,"timestamp":41210744393,"id":212,"parentId":207,"tags":{"name":"static/chunks/pages/_error-4a2fb0735435b993.js","cache":"HIT"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":1880,"timestamp":41210744395,"id":213,"parentId":207,"tags":{"name":"static/chunks/app/layout-db3e6c51a5e18172.js","cache":"HIT"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":1879,"timestamp":41210744397,"id":214,"parentId":207,"tags":{"name":"static/chunks/app/browser/page-79f87943eb73309f.js","cache":"HIT"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":748,"timestamp":41210745528,"id":220,"parentId":207,"tags":{"name":"static/chunks/app/page-bd8738abc82995d8.js","cache":"HIT"},"startTime":1749162607528,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":371,"timestamp":41210745905,"id":222,"parentId":207,"tags":{"name":"static/chunks/app/profile/page-fd764449cd49fd02.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":295,"timestamp":41210745982,"id":224,"parentId":207,"tags":{"name":"static/chunks/app/widget-board-settings/page-37dac0a46f073c65.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":293,"timestamp":41210745985,"id":225,"parentId":207,"tags":{"name":"static/chunks/webpack-5301057e06e5673a.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":291,"timestamp":41210745986,"id":226,"parentId":207,"tags":{"name":"static/chunks/framework-895c1583be5f925a.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":289,"timestamp":41210745989,"id":227,"parentId":207,"tags":{"name":"static/chunks/64c9ffd2-c448b6c279aaae45.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":288,"timestamp":41210745990,"id":228,"parentId":207,"tags":{"name":"static/chunks/5eb2fc6e-7d4eb5e0f322dbae.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":287,"timestamp":41210745992,"id":229,"parentId":207,"tags":{"name":"static/chunks/4bd1b696-38b7b43aaacd0fd5.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":286,"timestamp":41210745994,"id":230,"parentId":207,"tags":{"name":"static/chunks/706-61d0246f86d99a1c.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":284,"timestamp":41210745995,"id":231,"parentId":207,"tags":{"name":"static/chunks/651-7d07206b8a8ed566.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":283,"timestamp":41210745997,"id":232,"parentId":207,"tags":{"name":"static/chunks/852-48d66518dc55b9d5.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":282,"timestamp":41210745998,"id":233,"parentId":207,"tags":{"name":"static/chunks/517-4a208ac96c5c946e.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":42,"timestamp":41210746238,"id":235,"parentId":207,"tags":{"name":"server/middleware-react-loadable-manifest.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":26,"timestamp":41210746255,"id":237,"parentId":207,"tags":{"name":"server/middleware-build-manifest.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":13,"timestamp":41210746269,"id":239,"parentId":207,"tags":{"name":"server/next-font-manifest.js","cache":"HIT"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":4636,"timestamp":41210745047,"id":217,"parentId":207,"tags":{"name":"static/chunks/app/chat/page-08e6a877cd1d5da6.js","cache":"MISS"},"startTime":1749162607528,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":4851,"timestamp":41210744860,"id":216,"parentId":207,"tags":{"name":"static/chunks/app/chat/[chatId]/page-012572b71b9b3d60.js","cache":"MISS"},"startTime":1749162607528,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":5568,"timestamp":41210745187,"id":218,"parentId":207,"tags":{"name":"static/chunks/app/feeds/page-cb5a47320dbba96c.js","cache":"MISS"},"startTime":1749162607528,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":6944,"timestamp":41210744398,"id":215,"parentId":207,"tags":{"name":"static/chunks/app/bsky-settings/page-96a5e0edad1e4549.js","cache":"MISS"},"startTime":1749162607527,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":6097,"timestamp":41210745333,"id":219,"parentId":207,"tags":{"name":"static/chunks/app/notifications/page-ade5dc7106bcc0f3.js","cache":"MISS"},"startTime":1749162607528,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":5284,"timestamp":41210746242,"id":236,"parentId":207,"tags":{"name":"static/XczzwJjQ_tI61Qo1-Sr_a/_ssgManifest.js","cache":"MISS"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":5899,"timestamp":41210745908,"id":223,"parentId":207,"tags":{"name":"static/chunks/app/settings/profile/page-357820e34b352d4a.js","cache":"MISS"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":5997,"timestamp":41210746257,"id":238,"parentId":207,"tags":{"name":"static/XczzwJjQ_tI61Qo1-Sr_a/_buildManifest.js","cache":"MISS"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":8436,"timestamp":41210745533,"id":221,"parentId":207,"tags":{"name":"static/chunks/app/profile/[actor]/page-5420a75fa0a85b20.js","cache":"MISS"},"startTime":1749162607528,"traceId":"0fb0394223458a33"},{"name":"minify-js","duration":8429,"timestamp":41210746000,"id":234,"parentId":207,"tags":{"name":"static/chunks/594-1d036ec7b444451b.js","cache":"MISS"},"startTime":1749162607529,"traceId":"0fb0394223458a33"},{"name":"minify-webpack-plugin-optimize","duration":12301,"timestamp":41210742132,"id":207,"parentId":169,"tags":{"compilationName":"client"},"startTime":1749162607525,"traceId":"0fb0394223458a33"},{"name":"minify-css","duration":39,"timestamp":41210754498,"id":241,"parentId":240,"tags":{"file":"static/css/01f7751109a350db.css","cache":"HIT"},"startTime":1749162607537,"traceId":"0fb0394223458a33"},{"name":"css-minimizer-plugin","duration":70,"timestamp":41210754468,"id":240,"parentId":169,"tags":{},"startTime":1749162607537,"traceId":"0fb0394223458a33"},{"name":"seal","duration":93742,"timestamp":41210665212,"id":191,"parentId":169,"tags":{},"startTime":1749162607448,"traceId":"0fb0394223458a33"},{"name":"webpack-compilation","duration":368980,"timestamp":41210390003,"id":169,"parentId":13,"tags":{"name":"client"},"startTime":1749162607173,"traceId":"0fb0394223458a33"},{"name":"emit","duration":5066,"timestamp":41210759001,"id":242,"parentId":13,"tags":{},"startTime":1749162607542,"traceId":"0fb0394223458a33"},{"name":"webpack-close","duration":76263,"timestamp":41210764436,"id":243,"parentId":13,"tags":{"name":"client"},"startTime":1749162607547,"traceId":"0fb0394223458a33"},{"name":"webpack-generate-error-stats","duration":380,"timestamp":41210840708,"id":244,"parentId":243,"tags":{},"startTime":1749162607623,"traceId":"0fb0394223458a33"},{"name":"run-webpack-compiler","duration":1360724,"timestamp":41209480481,"id":13,"parentId":1,"tags":{},"startTime":1749162606263,"traceId":"0fb0394223458a33"},{"name":"format-webpack-messages","duration":43,"timestamp":41210841207,"id":245,"parentId":1,"tags":{},"startTime":1749162607624,"traceId":"0fb0394223458a33"},{"name":"verify-typescript-setup","duration":121644,"timestamp":41210843388,"id":247,"parentId":1,"tags":{},"startTime":1749162607626,"traceId":"0fb0394223458a33"},{"name":"check-static-error-page","duration":1249,"timestamp":41210969258,"id":250,"parentId":249,"tags":{},"startTime":1749162607752,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":1922,"timestamp":41211002390,"id":251,"parentId":249,"tags":{"page":"/_app"},"startTime":1749162607785,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":1100,"timestamp":41211003237,"id":253,"parentId":249,"tags":{"page":"/_document"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":1583,"timestamp":41211003147,"id":252,"parentId":249,"tags":{"page":"/_error"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":172468,"timestamp":41211005602,"id":268,"parentId":257,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":174468,"timestamp":41211003649,"id":257,"parentId":249,"tags":{"page":"/chat/[chatId]"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":174127,"timestamp":41211005780,"id":272,"parentId":261,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":176169,"timestamp":41211003779,"id":261,"parentId":249,"tags":{"page":"/"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":174919,"timestamp":41211005882,"id":275,"parentId":258,"tags":{},"startTime":1749162607789,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":177170,"timestamp":41211003691,"id":258,"parentId":249,"tags":{"page":"/chat"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":175326,"timestamp":41211005689,"id":270,"parentId":259,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":177305,"timestamp":41211003717,"id":259,"parentId":249,"tags":{"page":"/feeds"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":177778,"timestamp":41211005913,"id":277,"parentId":265,"tags":{},"startTime":1749162607789,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":179794,"timestamp":41211003925,"id":265,"parentId":249,"tags":{"page":"/widget-board-settings"},"startTime":1749162607787,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":181703,"timestamp":41211005896,"id":276,"parentId":264,"tags":{},"startTime":1749162607789,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":183717,"timestamp":41211003900,"id":264,"parentId":249,"tags":{"page":"/settings/profile"},"startTime":1749162607787,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":183000,"timestamp":41211005384,"id":266,"parentId":254,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":185055,"timestamp":41211003346,"id":254,"parentId":249,"tags":{"page":"/_not-found"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":186605,"timestamp":41211005818,"id":274,"parentId":262,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":188633,"timestamp":41211003804,"id":262,"parentId":249,"tags":{"page":"/profile/[actor]"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":186885,"timestamp":41211005711,"id":271,"parentId":260,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":188855,"timestamp":41211003750,"id":260,"parentId":249,"tags":{"page":"/notifications"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":188208,"timestamp":41211005807,"id":273,"parentId":263,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":190155,"timestamp":41211003865,"id":263,"parentId":249,"tags":{"page":"/profile"},"startTime":1749162607787,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":191535,"timestamp":41211005569,"id":267,"parentId":255,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":193574,"timestamp":41211003534,"id":255,"parentId":249,"tags":{"page":"/browser"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"is-page-static","duration":197118,"timestamp":41211005622,"id":269,"parentId":256,"tags":{},"startTime":1749162607788,"traceId":"0fb0394223458a33"},{"name":"check-page","duration":199171,"timestamp":41211003573,"id":256,"parentId":249,"tags":{"page":"/bsky-settings"},"startTime":1749162607786,"traceId":"0fb0394223458a33"},{"name":"static-check","duration":233754,"timestamp":41210969016,"id":249,"parentId":1,"tags":{},"startTime":1749162607752,"traceId":"0fb0394223458a33"},{"name":"generate-required-server-files","duration":130,"timestamp":41211202815,"id":279,"parentId":1,"tags":{},"startTime":1749162607985,"traceId":"0fb0394223458a33"},{"name":"write-routes-manifest","duration":809,"timestamp":41211204917,"id":281,"parentId":1,"tags":{},"startTime":1749162607988,"traceId":"0fb0394223458a33"}]
+[{"name":"load-dotenv","duration":10,"timestamp":41211510917,"id":284,"parentId":283,"tags":{},"startTime":1749162608294,"traceId":"0fb0394223458a33"},{"name":"run-export-path-map","duration":199,"timestamp":41212039380,"id":285,"parentId":283,"tags":{},"startTime":1749162608822,"traceId":"0fb0394223458a33"},{"name":"next-export","duration":938713,"timestamp":41211510529,"id":283,"parentId":1,"tags":{},"startTime":1749162608293,"traceId":"0fb0394223458a33"},{"name":"move-exported-app-not-found-","duration":1662,"timestamp":41212449929,"id":286,"parentId":282,"tags":{},"startTime":1749162609233,"traceId":"0fb0394223458a33"},{"name":"move-exported-page","duration":12256,"timestamp":41212451648,"id":287,"parentId":282,"tags":{},"startTime":1749162609234,"traceId":"0fb0394223458a33"},{"name":"static-generation","duration":975523,"timestamp":41211509321,"id":282,"parentId":1,"tags":{},"startTime":1749162608292,"traceId":"0fb0394223458a33"},{"name":"node-file-trace-build","duration":3076371,"timestamp":41211203609,"id":280,"parentId":1,"tags":{"isTurbotrace":"false"},"startTime":1749162607986,"traceId":"0fb0394223458a33"},{"name":"apply-include-excludes","duration":349,"timestamp":41214279991,"id":288,"parentId":1,"tags":{},"startTime":1749162611063,"traceId":"0fb0394223458a33"},{"name":"print-tree-view","duration":1207,"timestamp":41214280394,"id":289,"parentId":1,"tags":{},"startTime":1749162611063,"traceId":"0fb0394223458a33"},{"name":"telemetry-flush","duration":13,"timestamp":41214281604,"id":290,"parentId":1,"tags":{},"startTime":1749162611064,"traceId":"0fb0394223458a33"},{"name":"next-build","duration":4891617,"timestamp":41209390002,"id":1,"tags":{"buildMode":"default","isTurboBuild":"false","version":"15.1.4","has-custom-webpack-config":"true","use-build-worker":"false"},"startTime":1749162606173,"traceId":"0fb0394223458a33"}]
diff --git a/App.native.tsx b/App.native.tsx
new file mode 100644
index 0000000..ac985e5
--- /dev/null
+++ b/App.native.tsx
@@ -0,0 +1,243 @@
+import 'react-native-url-polyfill/auto'
+import '#/logger/sentry/setup'
+import '#/logger/bitdrift/setup'
+import '#/view/icons'
+
+import React, {useEffect, useState} from 'react'
+import {GestureHandlerRootView} from 'react-native-gesture-handler'
+import {RootSiblingParent} from 'react-native-root-siblings'
+import {
+  initialWindowMetrics,
+  SafeAreaProvider,
+} from 'react-native-safe-area-context'
+import * as ScreenOrientation from 'expo-screen-orientation'
+import * as SplashScreen from 'expo-splash-screen'
+import * as SystemUI from 'expo-system-ui'
+import {msg} from '@lingui/macro'
+import {useLingui} from '@lingui/react'
+import * as Sentry from '@sentry/react-native'
+
+import {KeyboardControllerProvider} from '#/lib/hooks/useEnableKeyboardController'
+import {QueryProvider} from '#/lib/react-query'
+import {Provider as StatsigProvider, tryFetchGates} from '#/lib/statsig/statsig'
+import {s} from '#/lib/styles'
+import {ThemeProvider} from '#/lib/ThemeContext'
+import I18nProvider from '#/locale/i18nProvider'
+import {logger} from '#/logger'
+import {isAndroid, isIOS} from '#/platform/detection'
+import {Provider as A11yProvider} from '#/state/a11y'
+import {Provider as MutedThreadsProvider} from '#/state/cache/thread-mutes'
+import {Provider as DialogStateProvider} from '#/state/dialogs'
+import {listenSessionDropped} from '#/state/events'
+import {
+  beginResolveGeolocation,
+  ensureGeolocationResolved,
+  Provider as GeolocationProvider,
+} from '#/state/geolocation'
+import {Provider as HomeBadgeProvider} from '#/state/home-badge'
+import {Provider as InvitesStateProvider} from '#/state/invites'
+import {Provider as LightboxStateProvider} from '#/state/lightbox'
+import {MessagesProvider} from '#/state/messages'
+import {Provider as ModalStateProvider} from '#/state/modals'
+import {init as initPersistedState} from '#/state/persisted'
+import {Provider as PrefsStateProvider} from '#/state/preferences'
+import {Provider as LabelDefsProvider} from '#/state/preferences/label-defs'
+import {Provider as ModerationOptsProvider} from '#/state/preferences/moderation-opts'
+import {Provider as UnreadNotifsProvider} from '#/state/queries/notifications/unread'
+import {
+  Provider as SessionProvider,
+  SessionAccount,
+  useSession,
+  useSessionApi,
+} from '#/state/session'
+import {readLastActiveAccount} from '#/state/session/util'
+import {Provider as ShellStateProvider} from '#/state/shell'
+import {Provider as ComposerProvider} from '#/state/shell/composer'
+import {Provider as LightStatusBarProvider} from '#/state/shell/light-status-bar'
+import {Provider as LoggedOutViewProvider} from '#/state/shell/logged-out'
+import {Provider as ProgressGuideProvider} from '#/state/shell/progress-guide'
+import {Provider as SelectedFeedProvider} from '#/state/shell/selected-feed'
+import {Provider as StarterPackProvider} from '#/state/shell/starter-pack'
+import {Provider as HiddenRepliesProvider} from '#/state/threadgate-hidden-replies'
+import {Provider as TrendingConfigProvider} from '#/state/trending-config'
+import {TestCtrls} from '#/view/com/testing/TestCtrls'
+import {Provider as VideoVolumeProvider} from '#/view/com/util/post-embeds/VideoVolumeContext'
+import * as Toast from '#/view/com/util/Toast'
+import {Shell} from '#/view/shell'
+import {ThemeProvider as Alf} from '#/alf'
+import {useColorModeTheme} from '#/alf/util/useColorModeTheme'
+import {Provider as ContextMenuProvider} from '#/components/ContextMenu'
+import {NuxDialogs} from '#/components/dialogs/nuxs'
+import {useStarterPackEntry} from '#/components/hooks/useStarterPackEntry'
+import {Provider as IntentDialogProvider} from '#/components/intents/IntentDialogs'
+import {Provider as PortalProvider} from '#/components/Portal'
+import {Splash} from '#/Splash'
+import {BottomSheetProvider} from '../modules/bottom-sheet'
+import {BackgroundNotificationPreferencesProvider} from '../modules/expo-background-notification-handler/src/BackgroundNotificationHandlerProvider'
+
+SplashScreen.preventAutoHideAsync()
+if (isIOS) {
+  SystemUI.setBackgroundColorAsync('black')
+}
+if (isAndroid) {
+  // iOS is handled by the config plugin -sfn
+  ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT_UP)
+}
+
+/**
+ * Begin geolocation ASAP
+ */
+beginResolveGeolocation()
+
+function InnerApp() {
+  const [isReady, setIsReady] = React.useState(false)
+  const {currentAccount} = useSession()
+  const {resumeSession} = useSessionApi()
+  const theme = useColorModeTheme()
+  const {_} = useLingui()
+
+  const hasCheckedReferrer = useStarterPackEntry()
+
+  // init
+  useEffect(() => {
+    async function onLaunch(account?: SessionAccount) {
+      try {
+        if (account) {
+          await resumeSession(account)
+        } else {
+          await tryFetchGates(undefined, 'prefer-fresh-gates')
+        }
+      } catch (e) {
+        logger.error(`session: resume failed`, {message: e})
+      } finally {
+        setIsReady(true)
+      }
+    }
+    const account = readLastActiveAccount()
+    onLaunch(account)
+  }, [resumeSession])
+
+  useEffect(() => {
+    return listenSessionDropped(() => {
+      Toast.show(
+        _(msg`Sorry! Your session expired. Please sign in again.`),
+        'info',
+      )
+    })
+  }, [_])
+
+  return (
+    <Alf theme={theme}>
+      <ThemeProvider theme={theme}>
+        <ContextMenuProvider>
+          <Splash isReady={isReady && hasCheckedReferrer}>
+            <RootSiblingParent>
+              <VideoVolumeProvider>
+                <React.Fragment
+                  // Resets the entire tree below when it changes:
+                  key={currentAccount?.did}>
+                  <QueryProvider currentDid={currentAccount?.did}>
+                    <ComposerProvider>
+                      <StatsigProvider>
+                        <MessagesProvider>
+                          {/* LabelDefsProvider MUST come before ModerationOptsProvider */}
+                          <LabelDefsProvider>
+                            <ModerationOptsProvider>
+                              <LoggedOutViewProvider>
+                                <SelectedFeedProvider>
+                                  <HiddenRepliesProvider>
+                                    <HomeBadgeProvider>
+                                      <UnreadNotifsProvider>
+                                        <BackgroundNotificationPreferencesProvider>
+                                          <MutedThreadsProvider>
+                                            <ProgressGuideProvider>
+                                              <TrendingConfigProvider>
+                                                <GestureHandlerRootView
+                                                  style={s.h100pct}>
+                                                  <IntentDialogProvider>
+                                                    <TestCtrls />
+                                                    <Shell />
+                                                    <NuxDialogs />
+                                                  </IntentDialogProvider>
+                                                </GestureHandlerRootView>
+                                              </TrendingConfigProvider>
+                                            </ProgressGuideProvider>
+                                          </MutedThreadsProvider>
+                                        </BackgroundNotificationPreferencesProvider>
+                                      </UnreadNotifsProvider>
+                                    </HomeBadgeProvider>
+                                  </HiddenRepliesProvider>
+                                </SelectedFeedProvider>
+                              </LoggedOutViewProvider>
+                            </ModerationOptsProvider>
+                          </LabelDefsProvider>
+                        </MessagesProvider>
+                      </StatsigProvider>
+                    </ComposerProvider>
+                  </QueryProvider>
+                </React.Fragment>
+              </VideoVolumeProvider>
+            </RootSiblingParent>
+          </Splash>
+        </ContextMenuProvider>
+      </ThemeProvider>
+    </Alf>
+  )
+}
+
+function App() {
+  const [isReady, setReady] = useState(false)
+
+  React.useEffect(() => {
+    Promise.all([initPersistedState(), ensureGeolocationResolved()]).then(() =>
+      setReady(true),
+    )
+  }, [])
+
+  if (!isReady) {
+    return null
+  }
+
+  /*
+   * NOTE: only nothing here can depend on other data or session state, since
+   * that is set up in the InnerApp component above.
+   */
+  return (
+    <GeolocationProvider>
+      <A11yProvider>
+        <KeyboardControllerProvider>
+          <SessionProvider>
+            <PrefsStateProvider>
+              <I18nProvider>
+                <ShellStateProvider>
+                  <InvitesStateProvider>
+                    <ModalStateProvider>
+                      <DialogStateProvider>
+                        <LightboxStateProvider>
+                          <PortalProvider>
+                            <BottomSheetProvider>
+                              <StarterPackProvider>
+                                <SafeAreaProvider
+                                  initialMetrics={initialWindowMetrics}>
+                                  <LightStatusBarProvider>
+                                    <InnerApp />
+                                  </LightStatusBarProvider>
+                                </SafeAreaProvider>
+                              </StarterPackProvider>
+                            </BottomSheetProvider>
+                          </PortalProvider>
+                        </LightboxStateProvider>
+                      </DialogStateProvider>
+                    </ModalStateProvider>
+                  </InvitesStateProvider>
+                </ShellStateProvider>
+              </I18nProvider>
+            </PrefsStateProvider>
+          </SessionProvider>
+        </KeyboardControllerProvider>
+      </A11yProvider>
+    </GeolocationProvider>
+  )
+}
+
+export default Sentry.wrap(App)
diff --git a/AuthContext.tsx b/AuthContext.tsx
new file mode 100644
index 0000000..213a9fe
--- /dev/null
+++ b/AuthContext.tsx
@@ -0,0 +1,221 @@
+"use client";
+
+import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
+import { BskyAgent } from '@atproto/api';
+import { parseSubject, SubjectType, isValidSubject, formatSubjectForDisplay } from './subjectResolver'; // Assuming subjectResolver.ts is at the root
+
+interface AuthContextType {
+  isAuthenticated: boolean;
+  isLoading: boolean;
+  agent: BskyAgent | null;
+  emailLinkLogin: (identifier: string, password: string, authToken?: string) => Promise<{
+    success: boolean;
+    needsEmailToken: boolean;
+    error?: string;
+  }>;
+  signOut: () => Promise<void>;
+  error: string | null;
+}
+
+const AuthContext = createContext<AuthContextType | undefined>(undefined);
+
+export const useAuth = () => {
+  const context = useContext(AuthContext);
+  if (context === undefined) {
+    throw new Error('useAuth must be used within an AuthProvider');
+  }
+  return context;
+};
+
+interface AuthProviderProps {
+  children: ReactNode;
+}
+
+export const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {
+  const [isAuthenticated, setIsAuthenticated] = useState(false);
+  const [isLoading, setIsLoading] = useState(true); // Default to true
+  const [agent, setAgent] = useState<BskyAgent | null>(null);
+  const [error, setError] = useState<string | null>(null);
+
+  // Initialize and check for existing session
+  useEffect(() => {
+    const initSession = async () => {
+      setIsLoading(true); // Ensure loading is true at the start of the process
+      try {
+        const storedSession = localStorage.getItem('blueshapes_session');
+
+        if (storedSession) {
+          const sessionData = JSON.parse(storedSession);
+
+          // Add detailed checks for essential session data properties
+          if (
+            sessionData &&
+            typeof sessionData.did === 'string' && sessionData.did.trim() !== '' &&
+            typeof sessionData.handle === 'string' && sessionData.handle.trim() !== '' &&
+            typeof sessionData.accessJwt === 'string' && sessionData.accessJwt.trim() !== '' &&
+            typeof sessionData.refreshJwt === 'string' && sessionData.refreshJwt.trim() !== ''
+          ) {
+            const newAgent = new BskyAgent({
+              service: 'https://bsky.social',
+            });
+
+            await newAgent.resumeSession({
+              did: sessionData.did,
+              handle: sessionData.handle,
+              accessJwt: sessionData.accessJwt,
+              refreshJwt: sessionData.refreshJwt,
+            });
+
+            // Verify agent.session is populated after resume
+            if (newAgent.session?.did) {
+              setAgent(newAgent);
+              setIsAuthenticated(true);
+              setError(null);
+              console.log('Successfully restored existing session for DID:', newAgent.session.did);
+            } else {
+              // resumeSession didn't populate agent.session as expected
+              console.error('Failed to restore session: agent.session not populated after resumeSession.');
+              localStorage.removeItem('blueshapes_session');
+              setIsAuthenticated(false);
+              setAgent(null);
+              setError('Failed to restore session data. Please log in again.');
+            }
+          } else {
+            // Essential data missing from stored session
+            console.error('Failed to restore session: essential data missing from localStorage.', sessionData);
+            localStorage.removeItem('blueshapes_session');
+            setIsAuthenticated(false);
+            setAgent(null);
+            // setError('Invalid session data found. Please log in again.'); // Optional: set error for user
+          }
+        } else {
+          // No stored session
+          setIsAuthenticated(false);
+          setAgent(null);
+        }
+      } catch (err) {
+        console.error('Failed to restore session (exception):', err);
+        localStorage.removeItem('blueshapes_session');
+        setIsAuthenticated(false);
+        setAgent(null);
+        setError('Failed to restore session due to an error. Please log in again.');
+      } finally {
+        setIsLoading(false);
+      }
+    };
+
+    initSession();
+  }, []); // Empty dependency array ensures this runs once on mount
+
+  const emailLinkLogin = async (identifier: string, password: string, authToken?: string): Promise<{
+    success: boolean;
+    needsEmailToken: boolean;
+    error?: string;
+  }> => {
+    setIsLoading(true);
+    setError(null);
+
+    try {
+      if (!isValidSubject(identifier)) {
+        throw new Error('Invalid BlueSky handle or DID format');
+      }
+
+      const newAgent = new BskyAgent({
+        service: 'https://bsky.social',
+      });
+
+      try {
+        const result = await newAgent.login({
+          identifier,
+          password,
+          ...(authToken ? { authFactorToken: authToken } : {}),
+        });
+
+        // Ensure all necessary data is present before storing
+        if (result.data.did && result.data.handle && result.data.accessJwt && result.data.refreshJwt) {
+            localStorage.setItem('blueshapes_session', JSON.stringify({
+            did: result.data.did,
+            handle: result.data.handle,
+            accessJwt: result.data.accessJwt,
+            refreshJwt: result.data.refreshJwt,
+            }));
+            setAgent(newAgent); // agent.session should be populated by BskyAgent after login
+            setIsAuthenticated(true);
+            console.log('Successfully logged in');
+            setIsLoading(false);
+            return {
+                success: true,
+                needsEmailToken: false
+            };
+        } else {
+            // Login succeeded but response data is incomplete
+            console.error('Login error: Incomplete session data from server.', result.data);
+            setError('Login succeeded but received incomplete session data.');
+            setIsLoading(false);
+            return {
+                success: false,
+                needsEmailToken: false,
+                error: 'Login succeeded but received incomplete session data.'
+            };
+        }
+      } catch (err: any) {
+        console.log('Login error from agent.login:', err);
+        if (
+          err.error === 'AuthFactorTokenRequired' ||
+          (err.message && err.message.includes('auth factor token')) ||
+          (err.status === 401 && err.error === 'InvalidToken') ||
+          (err.status === 401 && err.message && err.message.includes('token'))
+        ) {
+          setIsLoading(false);
+          return {
+            success: false,
+            needsEmailToken: true,
+            error: 'A confirmation code has been sent to your email. Please enter it to continue.'
+          };
+        }
+        throw err;
+      }
+    } catch (err: any) {
+      console.error('Failed to login (outer catch):', err);
+      const errorMessage = err instanceof Error ? err.message : 'Failed to authenticate';
+      setError(errorMessage);
+      setIsLoading(false);
+      return {
+        success: false,
+        needsEmailToken: false,
+        error: errorMessage
+      };
+    }
+  };
+
+  const signOut = async () => {
+    setIsLoading(true);
+    setError(null);
+    try {
+      localStorage.removeItem('blueshapes_session');
+      setAgent(null);
+      setIsAuthenticated(false);
+      console.log('Successfully signed out');
+    } catch (err) {
+      console.error('Failed to sign out:', err);
+      setError('Failed to sign out. Please try again.');
+    } finally {
+      setIsLoading(false);
+    }
+  };
+
+  return (
+    <AuthContext.Provider
+      value={{
+        isAuthenticated,
+        isLoading,
+        agent,
+        emailLinkLogin,
+        signOut,
+        error
+      }}
+    >
+      {children}
+    </AuthContext.Provider>
+  );
+};
diff --git a/ComposePost.tsx b/ComposePost.tsx
new file mode 100644
index 0000000..53112cd
--- /dev/null
+++ b/ComposePost.tsx
@@ -0,0 +1,146 @@
+"use client";
+
+import React, { useState, useRef, useEffect } from 'react';
+import { X, Image as ImageIcon, Link as LinkIcon, Smile, Globe, Users, Lock, ArrowRight } from 'lucide-react';
+import { useAuth } from '@/contexts/AuthContext';
+
+interface ComposePostProps {
+  isOpen: boolean;
+  onClose: () => void;
+  onPostCreated: () => void;
+}
+
+const ComposePost: React.FC<ComposePostProps> = ({ isOpen, onClose, onPostCreated }) => {
+  const { agent, isAuthenticated } = useAuth();
+  const [postText, setPostText] = useState('');
+  const [isPosting, setIsPosting] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+  const [privacy, setPrivacy] = useState<'public' | 'followers' | 'private'>('public');
+  const textareaRef = useRef<HTMLTextAreaElement>(null);
+
+  // Focus the textarea when the modal opens
+  useEffect(() => {
+    if (isOpen && textareaRef.current) {
+      textareaRef.current.focus();
+    }
+  }, [isOpen]);
+
+  // Handle character count and limit
+  const maxCharCount = 300;
+  const charCount = postText.length;
+  const charCountColor = charCount > maxCharCount * 0.9
+    ? (charCount > maxCharCount ? 'text-red-500' : 'text-yellow-500')
+    : 'text-gray-400';
+
+  const handleSubmitPost = async () => {
+    if (!isAuthenticated || !agent) {
+      setError('You must be signed in to post');
+      return;
+    }
+
+    if (postText.trim() === '') {
+      setError('Post cannot be empty');
+      return;
+    }
+
+    if (postText.length > maxCharCount) {
+      setError(`Post exceeds maximum character limit of ${maxCharCount}`);
+      return;
+    }
+
+    setIsPosting(true);
+    setError(null);
+
+    try {
+      // Create the post using the BlueSky API
+      await agent.post({
+        text: postText,
+        // You can add more options here like images, links, etc.
+      });
+
+      // Clear the form and close the modal
+      setPostText('');
+      onPostCreated();
+      onClose();
+    } catch (err) {
+      console.error('Failed to create post:', err);
+      setError('Failed to create post. Please try again.');
+    } finally {
+      setIsPosting(false);
+    }
+  };
+
+  if (!isOpen) return null;
+
+  return (
+    <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4">
+      <div className="bg-gray-900 rounded-xl w-full max-w-lg">
+        <div className="flex justify-between items-center p-4 border-b border-gray-800">
+          <button onClick={onClose} className="text-gray-400 hover:text-white">
+            <X size={24} />
+          </button>
+          <h2 className="text-white font-semibold">New Post</h2>
+          <div className="w-6"></div> {/* Spacer for alignment */}
+        </div>
+
+        <div className="p-4">
+          <textarea
+            ref={textareaRef}
+            value={postText}
+            onChange={(e) => setPostText(e.target.value)}
+            placeholder="What's happening?"
+            className="w-full bg-transparent text-white border-none focus:ring-0 resize-none h-32"
+            maxLength={maxCharCount + 10} // Allow a bit over to show the error state
+          />
+
+          {error && (
+            <div className="text-red-500 text-sm mb-2">{error}</div>
+          )}
+
+          <div className="flex justify-between items-center mt-2 border-t border-gray-800 pt-3">
+            <div className="flex space-x-3">
+              <button className="text-blue-400 hover:text-blue-300">
+                <ImageIcon size={20} />
+              </button>
+              <button className="text-blue-400 hover:text-blue-300">
+                <LinkIcon size={20} />
+              </button>
+              <button className="text-blue-400 hover:text-blue-300">
+                <Smile size={20} />
+              </button>
+
+              {/* Privacy selector */}
+              <div className="relative">
+                <button className="text-blue-400 hover:text-blue-300">
+                  {privacy === 'public' && <Globe size={20} />}
+                  {privacy === 'followers' && <Users size={20} />}
+                  {privacy === 'private' && <Lock size={20} />}
+                </button>
+              </div>
+            </div>
+
+            <div className="flex items-center space-x-3">
+              <span className={`text-xs ${charCountColor}`}>
+                {charCount}/{maxCharCount}
+              </span>
+              <button
+                onClick={handleSubmitPost}
+                disabled={isPosting || postText.trim() === '' || postText.length > maxCharCount}
+                className={`px-4 py-1.5 rounded-full font-medium flex items-center ${
+                  isPosting || postText.trim() === '' || postText.length > maxCharCount
+                    ? 'bg-blue-500/50 text-white/50 cursor-not-allowed'
+                    : 'bg-blue-500 text-white hover:bg-blue-600'
+                }`}
+              >
+                {isPosting ? 'Posting...' : 'Post'}
+                {!isPosting && <ArrowRight size={16} className="ml-1" />}
+              </button>
+            </div>
+          </div>
+        </div>
+      </div>
+    </div>
+  );
+};
+
+export default ComposePost;
diff --git a/CredentialsScreen.tsx b/CredentialsScreen.tsx
new file mode 100644
index 0000000..2899ca2
--- /dev/null
+++ b/CredentialsScreen.tsx
@@ -0,0 +1,198 @@
+"use client";
+
+import React, { useState } from 'react';
+import { colors } from '../../utils/colors';
+
+interface CredentialsScreenProps {
+  onBackClick: () => void;
+  onNextClick: (identifier: string, password: string) => void;
+}
+
+const CredentialsScreen: React.FC<CredentialsScreenProps> = ({
+  onBackClick,
+  onNextClick
+}) => {
+  const [identifier, setIdentifier] = useState('');
+  const [password, setPassword] = useState('');
+  const [isLoading, setIsLoading] = useState(false);
+
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault();
+    setIsLoading(true);
+    onNextClick(identifier, password);
+  };
+
+  return (
+    <div className="flex flex-col min-h-screen bg-black text-white p-4">
+      <div className="flex flex-col w-full max-w-md mx-auto">
+        {/* Header */}
+        <h1 className="text-4xl font-bold mb-8">Sign in</h1>
+
+        <form onSubmit={handleSubmit} className="space-y-6">
+          {/* Hosting Provider Section */}
+          <div className="mb-6">
+            <label className="block text-gray-400 mb-2 text-lg">
+              Hosting provider
+            </label>
+            <div
+              className="flex items-center justify-between p-4 rounded-lg"
+              style={{ backgroundColor: colors.darkInputBackground }}
+            >
+              <div className="flex items-center">
+                <svg
+                  xmlns="http://www.w3.org/2000/svg"
+                  width="24"
+                  height="24"
+                  viewBox="0 0 24 24"
+                  fill="none"
+                  stroke="currentColor"
+                  strokeWidth="2"
+                  strokeLinecap="round"
+                  strokeLinejoin="round"
+                  className="mr-3 text-gray-400"
+                >
+                  <circle cx="12" cy="12" r="10"/>
+                  <path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"/>
+                  <path d="M2 12h20"/>
+                </svg>
+                <span className="text-lg">Bluesky Social</span>
+              </div>
+              <button type="button">
+                <svg
+                  xmlns="http://www.w3.org/2000/svg"
+                  width="24"
+                  height="24"
+                  viewBox="0 0 24 24"
+                  fill="none"
+                  stroke="currentColor"
+                  strokeWidth="2"
+                  strokeLinecap="round"
+                  strokeLinejoin="round"
+                  className="text-gray-400"
+                >
+                  <path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"/>
+                </svg>
+              </button>
+            </div>
+          </div>
+
+          {/* Account Section */}
+          <div className="mb-6">
+            <label className="block text-gray-400 mb-2 text-lg">
+              Account
+            </label>
+            <div
+              className="flex items-center p-4 rounded-lg mb-4"
+              style={{ backgroundColor: colors.darkInputBackground }}
+            >
+              <svg
+                xmlns="http://www.w3.org/2000/svg"
+                width="24"
+                height="24"
+                viewBox="0 0 24 24"
+                fill="none"
+                stroke="currentColor"
+                strokeWidth="2"
+                strokeLinecap="round"
+                strokeLinejoin="round"
+                className="mr-3 text-gray-400"
+              >
+                <circle cx="12" cy="8" r="5"/>
+                <path d="M20 21a8 8 0 0 0-16 0"/>
+              </svg>
+              <input
+                type="text"
+                placeholder="Username or email address"
+                value={identifier}
+                onChange={(e) => setIdentifier(e.target.value)}
+                className="bg-transparent border-none outline-none w-full text-lg"
+              />
+            </div>
+
+            <div
+              className="flex items-center justify-between p-4 rounded-lg"
+              style={{ backgroundColor: colors.darkInputBackground }}
+            >
+              <div className="flex items-center w-full">
+                <svg
+                  xmlns="http://www.w3.org/2000/svg"
+                  width="24"
+                  height="24"
+                  viewBox="0 0 24 24"
+                  fill="none"
+                  stroke="currentColor"
+                  strokeWidth="2"
+                  strokeLinecap="round"
+                  strokeLinejoin="round"
+                  className="mr-3 text-gray-400"
+                >
+                  <rect width="18" height="11" x="3" y="11" rx="2" ry="2"/>
+                  <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
+                </svg>
+                <input
+                  type="password"
+                  placeholder="Password"
+                  value={password}
+                  onChange={(e) => setPassword(e.target.value)}
+                  className="bg-transparent border-none outline-none w-full text-lg"
+                />
+              </div>
+              <button type="button" className="text-gray-400">
+                Forgot?
+              </button>
+            </div>
+          </div>
+
+          {/* Buttons */}
+          <div className="flex justify-between mt-8">
+            <button
+              type="button"
+              onClick={onBackClick}
+              className="px-8 py-3 rounded-lg text-lg font-medium"
+              style={{ backgroundColor: colors.darkGray }}
+            >
+              Back
+            </button>
+
+            <button
+              type="submit"
+              disabled={isLoading}
+              className="px-8 py-3 rounded-lg text-lg font-medium"
+              style={{ backgroundColor: colors.vibrantBlue }}
+            >
+              Next
+            </button>
+          </div>
+        </form>
+      </div>
+
+      {/* Made with Manus */}
+      <div
+        className="fixed bottom-20 right-8 bg-gray-800 rounded-full px-4 py-2 flex items-center"
+      >
+        <span className="mr-2">Made with Manus</span>
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          width="20"
+          height="20"
+          viewBox="0 0 24 24"
+          fill="none"
+          stroke="currentColor"
+          strokeWidth="2"
+          strokeLinecap="round"
+          strokeLinejoin="round"
+        >
+          <path d="M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5"/>
+          <path d="M8.5 8.5v.01"/>
+          <path d="M16 15.5v.01"/>
+          <path d="M12 12v.01"/>
+          <path d="M11 17v.01"/>
+          <path d="M7 14v.01"/>
+        </svg>
+      </div>
+    </div>
+  );
+};
+
+export default CredentialsScreen;
+
diff --git a/LoginForm.tsx b/LoginForm.tsx
new file mode 100644
index 0000000..6c3d763
--- /dev/null
+++ b/LoginForm.tsx
@@ -0,0 +1,358 @@
+import React, {useRef, useState} from 'react'
+import {
+  ActivityIndicator,
+  Keyboard,
+  LayoutAnimation,
+  TextInput,
+  View,
+} from 'react-native'
+import {
+  ComAtprotoServerCreateSession,
+  ComAtprotoServerDescribeServer,
+} from '@atproto/api'
+import {msg, Trans} from '@lingui/macro'
+import {useLingui} from '@lingui/react'
+
+import {useRequestNotificationsPermission} from '#/lib/notifications/notifications'
+import {isNetworkError} from '#/lib/strings/errors'
+import {cleanError} from '#/lib/strings/errors'
+import {createFullHandle} from '#/lib/strings/handles'
+import {logger} from '#/logger'
+import {useSetHasCheckedForStarterPack} from '#/state/preferences/used-starter-packs'
+import {useSessionApi} from '#/state/session'
+import {useLoggedOutViewControls} from '#/state/shell/logged-out'
+import {atoms as a, useTheme} from '#/alf'
+import {Button, ButtonIcon, ButtonText} from '#/components/Button'
+import {FormError} from '#/components/forms/FormError'
+import {HostingProvider} from '#/components/forms/HostingProvider'
+import * as TextField from '#/components/forms/TextField'
+import {At_Stroke2_Corner0_Rounded as At} from '#/components/icons/At'
+import {Lock_Stroke2_Corner0_Rounded as Lock} from '#/components/icons/Lock'
+import {Ticket_Stroke2_Corner0_Rounded as Ticket} from '#/components/icons/Ticket'
+import {Loader} from '#/components/Loader'
+import {Text} from '#/components/Typography'
+import {FormContainer} from './FormContainer'
+
+type ServiceDescription = ComAtprotoServerDescribeServer.OutputSchema
+
+export const LoginForm = ({
+  error,
+  serviceUrl,
+  serviceDescription,
+  initialHandle,
+  setError,
+  setServiceUrl,
+  onPressRetryConnect,
+  onPressBack,
+  onPressForgotPassword,
+  onAttemptSuccess,
+  onAttemptFailed,
+}: {
+  error: string
+  serviceUrl: string
+  serviceDescription: ServiceDescription | undefined
+  initialHandle: string
+  setError: (v: string) => void
+  setServiceUrl: (v: string) => void
+  onPressRetryConnect: () => void
+  onPressBack: () => void
+  onPressForgotPassword: () => void
+  onAttemptSuccess: () => void
+  onAttemptFailed: () => void
+}) => {
+  const t = useTheme()
+  const [isProcessing, setIsProcessing] = useState<boolean>(false)
+  const [isAuthFactorTokenNeeded, setIsAuthFactorTokenNeeded] =
+    useState<boolean>(false)
+  const [isAuthFactorTokenValueEmpty, setIsAuthFactorTokenValueEmpty] =
+    useState<boolean>(true)
+  const identifierValueRef = useRef<string>(initialHandle || '')
+  const passwordValueRef = useRef<string>('')
+  const authFactorTokenValueRef = useRef<string>('')
+  const passwordRef = useRef<TextInput>(null)
+  const {_} = useLingui()
+  const {login} = useSessionApi()
+  const requestNotificationsPermission = useRequestNotificationsPermission()
+  const {setShowLoggedOut} = useLoggedOutViewControls()
+  const setHasCheckedForStarterPack = useSetHasCheckedForStarterPack()
+
+  const onPressSelectService = React.useCallback(() => {
+    Keyboard.dismiss()
+  }, [])
+
+  const onPressNext = async () => {
+    if (isProcessing) return
+    Keyboard.dismiss()
+    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)
+    setError('')
+
+    const identifier = identifierValueRef.current.toLowerCase().trim()
+    const password = passwordValueRef.current
+    const authFactorToken = authFactorTokenValueRef.current
+
+    if (!identifier) {
+      setError(_(msg`Please enter your username`))
+      return
+    }
+
+    if (!password) {
+      setError(_(msg`Please enter your password`))
+      return
+    }
+
+    setIsProcessing(true)
+
+    try {
+      // try to guess the handle if the user just gave their own username
+      let fullIdent = identifier
+      if (
+        !identifier.includes('@') && // not an email
+        !identifier.includes('.') && // not a domain
+        serviceDescription &&
+        serviceDescription.availableUserDomains.length > 0
+      ) {
+        let matched = false
+        for (const domain of serviceDescription.availableUserDomains) {
+          if (fullIdent.endsWith(domain)) {
+            matched = true
+          }
+        }
+        if (!matched) {
+          fullIdent = createFullHandle(
+            identifier,
+            serviceDescription.availableUserDomains[0],
+          )
+        }
+      }
+
+      // TODO remove double login
+      await login(
+        {
+          service: serviceUrl,
+          identifier: fullIdent,
+          password,
+          authFactorToken: authFactorToken.trim(),
+        },
+        'LoginForm',
+      )
+      onAttemptSuccess()
+      setShowLoggedOut(false)
+      setHasCheckedForStarterPack(true)
+      requestNotificationsPermission('Login')
+    } catch (e: any) {
+      const errMsg = e.toString()
+      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)
+      setIsProcessing(false)
+      if (
+        e instanceof ComAtprotoServerCreateSession.AuthFactorTokenRequiredError
+      ) {
+        setIsAuthFactorTokenNeeded(true)
+      } else {
+        onAttemptFailed()
+        if (errMsg.includes('Token is invalid')) {
+          logger.debug('Failed to login due to invalid 2fa token', {
+            error: errMsg,
+          })
+          setError(_(msg`Invalid 2FA confirmation code.`))
+        } else if (
+          errMsg.includes('Authentication Required') ||
+          errMsg.includes('Invalid identifier or password')
+        ) {
+          logger.debug('Failed to login due to invalid credentials', {
+            error: errMsg,
+          })
+          setError(_(msg`Incorrect username or password`))
+        } else if (isNetworkError(e)) {
+          logger.warn('Failed to login due to network error', {error: errMsg})
+          setError(
+            _(
+              msg`Unable to contact your service. Please check your Internet connection.`,
+            ),
+          )
+        } else {
+          logger.warn('Failed to login', {error: errMsg})
+          setError(cleanError(errMsg))
+        }
+      }
+    }
+  }
+
+  return (
+    <FormContainer testID="loginForm" titleText={<Trans>Sign in</Trans>}>
+      <View>
+        <TextField.LabelText>
+          <Trans>Hosting provider</Trans>
+        </TextField.LabelText>
+        <HostingProvider
+          serviceUrl={serviceUrl}
+          onSelectServiceUrl={setServiceUrl}
+          onOpenDialog={onPressSelectService}
+        />
+      </View>
+      <View>
+        <TextField.LabelText>
+          <Trans>Account</Trans>
+        </TextField.LabelText>
+        <View style={[a.gap_sm]}>
+          <TextField.Root>
+            <TextField.Icon icon={At} />
+            <TextField.Input
+              testID="loginUsernameInput"
+              label={_(msg`Username or email address`)}
+              autoCapitalize="none"
+              autoFocus
+              autoCorrect={false}
+              autoComplete="username"
+              returnKeyType="next"
+              textContentType="username"
+              defaultValue={initialHandle || ''}
+              onChangeText={v => {
+                identifierValueRef.current = v
+              }}
+              onSubmitEditing={() => {
+                passwordRef.current?.focus()
+              }}
+              blurOnSubmit={false} // prevents flickering due to onSubmitEditing going to next field
+              editable={!isProcessing}
+              accessibilityHint={_(
+                msg`Enter the username or email address you used when you created your account`,
+              )}
+            />
+          </TextField.Root>
+
+          <TextField.Root>
+            <TextField.Icon icon={Lock} />
+            <TextField.Input
+              testID="loginPasswordInput"
+              inputRef={passwordRef}
+              label={_(msg`Password`)}
+              autoCapitalize="none"
+              autoCorrect={false}
+              autoComplete="password"
+              returnKeyType="done"
+              enablesReturnKeyAutomatically={true}
+              secureTextEntry={true}
+              textContentType="password"
+              clearButtonMode="while-editing"
+              onChangeText={v => {
+                passwordValueRef.current = v
+              }}
+              onSubmitEditing={onPressNext}
+              blurOnSubmit={false} // HACK: https://github.com/facebook/react-native/issues/21911#issuecomment-558343069 Keyboard blur behavior is now handled in onSubmitEditing
+              editable={!isProcessing}
+              accessibilityHint={_(msg`Enter your password`)}
+            />
+            <Button
+              testID="forgotPasswordButton"
+              onPress={onPressForgotPassword}
+              label={_(msg`Forgot password?`)}
+              accessibilityHint={_(msg`Opens password reset form`)}
+              variant="solid"
+              color="secondary"
+              style={[
+                a.rounded_sm,
+                // t.atoms.bg_contrast_100,
+                {marginLeft: 'auto', left: 6, padding: 6},
+                a.z_10,
+              ]}>
+              <ButtonText>
+                <Trans>Forgot?</Trans>
+              </ButtonText>
+            </Button>
+          </TextField.Root>
+        </View>
+      </View>
+      {isAuthFactorTokenNeeded && (
+        <View>
+          <TextField.LabelText>
+            <Trans>2FA Confirmation</Trans>
+          </TextField.LabelText>
+          <TextField.Root>
+            <TextField.Icon icon={Ticket} />
+            <TextField.Input
+              testID="loginAuthFactorTokenInput"
+              label={_(msg`Confirmation code`)}
+              autoCapitalize="none"
+              autoFocus
+              autoCorrect={false}
+              autoComplete="one-time-code"
+              returnKeyType="done"
+              textContentType="username"
+              blurOnSubmit={false} // prevents flickering due to onSubmitEditing going to next field
+              onChangeText={v => {
+                setIsAuthFactorTokenValueEmpty(v === '')
+                authFactorTokenValueRef.current = v
+              }}
+              onSubmitEditing={onPressNext}
+              editable={!isProcessing}
+              accessibilityHint={_(
+                msg`Input the code which has been emailed to you`,
+              )}
+              style={[
+                {
+                  textTransform: isAuthFactorTokenValueEmpty
+                    ? 'none'
+                    : 'uppercase',
+                },
+              ]}
+            />
+          </TextField.Root>
+          <Text style={[a.text_sm, t.atoms.text_contrast_medium, a.mt_sm]}>
+            <Trans>
+              Check your email for a sign in code and enter it here.
+            </Trans>
+          </Text>
+        </View>
+      )}
+      <FormError error={error} />
+      <View style={[a.flex_row, a.align_center, a.pt_md]}>
+        <Button
+          label={_(msg`Back`)}
+          variant="solid"
+          color="secondary"
+          size="large"
+          onPress={onPressBack}>
+          <ButtonText>
+            <Trans>Back</Trans>
+          </ButtonText>
+        </Button>
+        <View style={a.flex_1} />
+        {!serviceDescription && error ? (
+          <Button
+            testID="loginRetryButton"
+            label={_(msg`Retry`)}
+            accessibilityHint={_(msg`Retries signing in`)}
+            variant="solid"
+            color="secondary"
+            size="large"
+            onPress={onPressRetryConnect}>
+            <ButtonText>
+              <Trans>Retry</Trans>
+            </ButtonText>
+          </Button>
+        ) : !serviceDescription ? (
+          <>
+            <ActivityIndicator />
+            <Text style={[t.atoms.text_contrast_high, a.pl_md]}>
+              <Trans>Connecting...</Trans>
+            </Text>
+          </>
+        ) : (
+          <Button
+            testID="loginNextButton"
+            label={_(msg`Next`)}
+            accessibilityHint={_(msg`Navigates to the next screen`)}
+            variant="solid"
+            color="primary"
+            size="large"
+            onPress={onPressNext}>
+            <ButtonText>
+              <Trans>Next</Trans>
+            </ButtonText>
+            {isProcessing && <ButtonIcon icon={Loader} />}
+          </Button>
+        )}
+      </View>
+    </FormContainer>
+  )
+}
diff --git a/ProtectedRoute.tsx b/ProtectedRoute.tsx
new file mode 100644
index 0000000..32bbab6
--- /dev/null
+++ b/ProtectedRoute.tsx
@@ -0,0 +1,54 @@
+"use client";
+
+import React from 'react';
+import { useRouter, usePathname } from 'next/navigation';
+import { useAuth } from '@/AuthContext';
+import { Loader2 } from 'lucide-react';
+
+interface ProtectedRouteProps {
+  children: React.ReactNode;
+}
+
+const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {
+  const { isAuthenticated, isLoading } = useAuth();
+  const router = useRouter();
+  const pathname = usePathname();
+
+  React.useEffect(() => {
+    // Skip redirect for signin and callback pages
+    const isAuthPage = pathname === '/signin' || pathname === '/callback' || pathname === '/create-account';
+
+    if (!isLoading) {
+      if (!isAuthenticated && !isAuthPage) {
+        // Redirect to signin if not authenticated and not on an auth page
+        router.push('/signin');
+      } else if (isAuthenticated && isAuthPage) {
+        // Redirect to home if authenticated and on an auth page
+        router.push('/');
+      }
+    }
+  }, [isAuthenticated, isLoading, router, pathname]);
+
+  // Show loading spinner while checking authentication
+  if (isLoading) {
+    return (
+      <div className="flex flex-col min-h-screen bg-black text-white">
+        <div className="flex-grow flex flex-col items-center justify-center p-6">
+          <Loader2 className="animate-spin h-10 w-10 mb-4 text-blue-500" />
+          <p className="text-gray-400">Loading...</p>
+        </div>
+      </div>
+    );
+  }
+
+  // For auth pages, render children regardless of auth state
+  const isAuthPage = pathname === '/signin' || pathname === '/callback' || pathname === '/create-account';
+  if (isAuthPage) {
+    return <>{children}</>;
+  }
+
+  // For protected pages, only render if authenticated
+  return isAuthenticated ? <>{children}</> : null;
+};
+
+export default ProtectedRoute;
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..f143936
--- /dev/null
+++ b/README.md
@@ -0,0 +1,8 @@
+# Luna
+BlueSky client
+
+## Deployment
+
+This application is configured for deployment on [Render](https://render.com/) as a Web Service.
+You can deploy your own instance by connecting your Git repository to Render and following the on-screen instructions.
+The `render.yaml` file in this repository provides the necessary configuration for Render.
diff --git a/Sidebar.tsx b/Sidebar.tsx
new file mode 100644
index 0000000..9a50189
--- /dev/null
+++ b/Sidebar.tsx
@@ -0,0 +1,188 @@
+"use client";
+
+import React, { useRef, useEffect } from 'react';
+import Link from 'next/link';
+import Image from 'next/image';
+import { useAuth } from '@/contexts/AuthContext';
+import { Home, Search, Bell, MessageCircle, User, Settings, Globe, X, LayoutGrid } from 'lucide-react';
+
+interface SidebarProps {
+  isOpen: boolean;
+  onClose: () => void;
+}
+
+const Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose }) => {
+  const { isAuthenticated, agent, signOut } = useAuth();
+  const sidebarRef = useRef<HTMLDivElement>(null);
+
+  // Handle clicks outside the sidebar to close it
+  useEffect(() => {
+    const handleClickOutside = (event: MouseEvent) => {
+      if (sidebarRef.current && !sidebarRef.current.contains(event.target as Node)) {
+        onClose();
+      }
+    };
+
+    if (isOpen) {
+      document.addEventListener('mousedown', handleClickOutside);
+    }
+
+    return () => {
+      document.removeEventListener('mousedown', handleClickOutside);
+    };
+  }, [isOpen, onClose]);
+
+  // Handle escape key to close sidebar
+  useEffect(() => {
+    const handleEscKey = (event: KeyboardEvent) => {
+      if (event.key === 'Escape') {
+        onClose();
+      }
+    };
+
+    if (isOpen) {
+      document.addEventListener('keydown', handleEscKey);
+    }
+
+    return () => {
+      document.removeEventListener('keydown', handleEscKey);
+    };
+  }, [isOpen, onClose]);
+
+  if (!isOpen) return null;
+
+  return (
+    <div className="fixed inset-0 z-50 bg-black bg-opacity-50">
+      <div
+        ref={sidebarRef}
+        className="fixed top-0 left-0 h-full w-72 bg-black border-r border-gray-800 shadow-lg transform transition-transform duration-300 ease-in-out"
+        style={{ transform: isOpen ? 'translateX(0)' : 'translateX(-100%)' }}
+      >
+        <div className="flex flex-col h-full">
+          {/* Header */}
+          <div className="flex items-center justify-between p-4 border-b border-gray-800">
+            <div className="flex items-center">
+              <Image
+                src="/shapes_logo.jpeg"
+                alt="BlueShapes"
+                width={40}
+                height={40}
+                className="rounded-full"
+              />
+              <h1 className="text-xl font-bold ml-3">BlueShapes</h1>
+            </div>
+            <button
+              onClick={onClose}
+              className="p-2 rounded-full hover:bg-gray-800"
+            >
+              <X size={20} />
+            </button>
+          </div>
+
+          {/* Navigation Links */}
+          <nav className="flex-grow py-4">
+            <ul className="space-y-1">
+              <li>
+                <Link
+                  href="/"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <Home size={20} className="mr-4" />
+                  <span>Home</span>
+                </Link>
+              </li>
+              <li>
+                <Link
+                  href="/explore"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <Search size={20} className="mr-4" />
+                  <span>Explore</span>
+                </Link>
+              </li>
+              <li>
+                <Link
+                  href="/notifications"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <Bell size={20} className="mr-4" />
+                  <span>Notifications</span>
+                </Link>
+              </li>
+              <li>
+                <Link
+                  href="/chat"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <MessageCircle size={20} className="mr-4" />
+                  <span>Messages</span>
+                </Link>
+              </li>
+              <li>
+                <Link
+                  href="/profile"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <User size={20} className="mr-4" />
+                  <span>Profile</span>
+                </Link>
+              </li>
+              <li>
+                <Link
+                  href="/browser"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <Globe size={20} className="mr-4" />
+                  <span>Browser</span>
+                </Link>
+              </li>
+              <li>
+                <Link
+                  href="/widget-board-settings"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <LayoutGrid size={20} className="mr-4" />
+                  <span>Widget Board</span>
+                </Link>
+              </li>
+              <li>
+                <Link
+                  href="/create-account"
+                  className="flex items-center px-4 py-3 text-white hover:bg-gray-800"
+                  onClick={onClose}
+                >
+                  <Settings size={20} className="mr-4" />
+                  <span>Create Shapes Account</span>
+                </Link>
+              </li>
+            </ul>
+          </nav>
+
+          {/* Footer */}
+          <div className="p-4 border-t border-gray-800">
+            {isAuthenticated && (
+              <button
+                onClick={() => {
+                  signOut();
+                  onClose();
+                }}
+                className="w-full py-2 px-4 bg-red-600 hover:bg-red-700 text-white rounded-md"
+              >
+                Sign Out
+              </button>
+            )}
+          </div>
+        </div>
+      </div>
+    </div>
+  );
+};
+
+export default Sidebar;
diff --git a/SignInFlow.tsx b/SignInFlow.tsx
new file mode 100644
index 0000000..5fce229
--- /dev/null
+++ b/SignInFlow.tsx
@@ -0,0 +1,110 @@
+"use client";
+
+import React, { useState } from 'react';
+import { useRouter } from 'next/navigation';
+import { useAuth } from '../../../AuthContext';
+import WelcomeScreen from './WelcomeScreen';
+import CredentialsScreen from './CredentialsScreen';
+import TwoFactorScreen from './TwoFactorScreen';
+
+enum SignInStep {
+  WELCOME = 'welcome',
+  CREDENTIALS = 'credentials',
+  TWO_FACTOR = 'two_factor',
+}
+
+const SignInFlow: React.FC = () => {
+  const router = useRouter();
+  const { emailLinkLogin } = useAuth();
+  const [currentStep, setCurrentStep] = useState<SignInStep>(SignInStep.WELCOME);
+  const [identifier, setIdentifier] = useState('');
+  const [password, setPassword] = useState('');
+  const [error, setError] = useState<string | null>(null);
+
+  const handleSignInClick = () => {
+    setCurrentStep(SignInStep.CREDENTIALS);
+  };
+
+  const handleCreateAccountClick = () => {
+    // This would navigate to a registration page
+    // For now, just show the sign-in flow
+    setCurrentStep(SignInStep.CREDENTIALS);
+  };
+
+  const handleCredentialsBack = () => {
+    setCurrentStep(SignInStep.WELCOME);
+  };
+
+  const handleCredentialsNext = async (identifier: string, password: string) => {
+    setIdentifier(identifier);
+    setPassword(password);
+
+    try {
+      const result = await emailLinkLogin(identifier, password);
+
+      if (result.success) {
+        // Login successful, redirect to home
+        router.push('/');
+      } else if (result.needsEmailToken) {
+        // 2FA required
+        setCurrentStep(SignInStep.TWO_FACTOR);
+      } else {
+        // Login failed
+        setError(result.error || 'Login failed. Please check your credentials.');
+      }
+    } catch (err) {
+      setError(err instanceof Error ? err.message : 'An unexpected error occurred.');
+    }
+  };
+
+  const handleTwoFactorBack = () => {
+    setCurrentStep(SignInStep.CREDENTIALS);
+  };
+
+  const handleTwoFactorNext = async (code: string) => {
+    try {
+      const result = await emailLinkLogin(identifier, password, code);
+
+      if (result.success) {
+        // Login successful, redirect to home
+        router.push('/');
+      } else {
+        // Login failed
+        setError(result.error || 'Invalid confirmation code. Please try again.');
+      }
+    } catch (err) {
+      setError(err instanceof Error ? err.message : 'An unexpected error occurred.');
+    }
+  };
+
+  // Render the appropriate step
+  switch (currentStep) {
+    case SignInStep.WELCOME:
+      return (
+        <WelcomeScreen
+          onSignInClick={handleSignInClick}
+          onCreateAccountClick={handleCreateAccountClick}
+        />
+      );
+    case SignInStep.CREDENTIALS:
+      return (
+        <CredentialsScreen
+          onBackClick={handleCredentialsBack}
+          onNextClick={handleCredentialsNext}
+        />
+      );
+    case SignInStep.TWO_FACTOR:
+      return (
+        <TwoFactorScreen
+          onBackClick={handleTwoFactorBack}
+          onNextClick={handleTwoFactorNext}
+          identifier={identifier}
+        />
+      );
+    default:
+      return null;
+  }
+};
+
+export default SignInFlow;
+
diff --git a/TwoFactorScreen.tsx b/TwoFactorScreen.tsx
new file mode 100644
index 0000000..2ae200f
--- /dev/null
+++ b/TwoFactorScreen.tsx
@@ -0,0 +1,226 @@
+"use client";
+
+import React, { useState } from 'react';
+import { colors } from '../../utils/colors';
+
+interface TwoFactorScreenProps {
+  onBackClick: () => void;
+  onNextClick: (code: string) => void;
+  identifier: string;
+}
+
+const TwoFactorScreen: React.FC<TwoFactorScreenProps> = ({
+  onBackClick,
+  onNextClick,
+  identifier
+}) => {
+  const [confirmationCode, setConfirmationCode] = useState('');
+  const [isLoading, setIsLoading] = useState(false);
+
+  const handleSubmit = (e: React.FormEvent) => {
+    e.preventDefault();
+    setIsLoading(true);
+    onNextClick(confirmationCode);
+  };
+
+  return (
+    <div className="flex flex-col min-h-screen bg-black text-white p-4">
+      <div className="flex flex-col w-full max-w-md mx-auto">
+        {/* Header */}
+        <h1 className="text-4xl font-bold mb-8">Sign in</h1>
+
+        <form onSubmit={handleSubmit} className="space-y-6">
+          {/* Hosting Provider Section */}
+          <div className="mb-6">
+            <label className="block text-gray-400 mb-2 text-lg">
+              Hosting provider
+            </label>
+            <div
+              className="flex items-center justify-between p-4 rounded-lg"
+              style={{ backgroundColor: colors.darkInputBackground }}
+            >
+              <div className="flex items-center">
+                <svg
+                  xmlns="http://www.w3.org/2000/svg"
+                  width="24"
+                  height="24"
+                  viewBox="0 0 24 24"
+                  fill="none"
+                  stroke="currentColor"
+                  strokeWidth="2"
+                  strokeLinecap="round"
+                  strokeLinejoin="round"
+                  className="mr-3 text-gray-400"
+                >
+                  <circle cx="12" cy="12" r="10"/>
+                  <path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"/>
+                  <path d="M2 12h20"/>
+                </svg>
+                <span className="text-lg">Bluesky Social</span>
+              </div>
+              <button type="button">
+                <svg
+                  xmlns="http://www.w3.org/2000/svg"
+                  width="24"
+                  height="24"
+                  viewBox="0 0 24 24"
+                  fill="none"
+                  stroke="currentColor"
+                  strokeWidth="2"
+                  strokeLinecap="round"
+                  strokeLinejoin="round"
+                  className="text-gray-400"
+                >
+                  <path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"/>
+                </svg>
+              </button>
+            </div>
+          </div>
+
+          {/* Account Section */}
+          <div className="mb-6">
+            <label className="block text-gray-400 mb-2 text-lg">
+              Account
+            </label>
+            <div
+              className="flex items-center p-4 rounded-lg mb-4"
+              style={{ backgroundColor: colors.darkInputBackground }}
+            >
+              <svg
+                xmlns="http://www.w3.org/2000/svg"
+                width="24"
+                height="24"
+                viewBox="0 0 24 24"
+                fill="none"
+                stroke="currentColor"
+                strokeWidth="2"
+                strokeLinecap="round"
+                strokeLinejoin="round"
+                className="mr-3 text-gray-400"
+              >
+                <circle cx="12" cy="8" r="5"/>
+                <path d="M20 21a8 8 0 0 0-16 0"/>
+              </svg>
+              <span className="text-gray-400 text-lg">Account information hidden</span>
+            </div>
+
+            <div
+              className="flex items-center justify-between p-4 rounded-lg"
+              style={{ backgroundColor: colors.darkInputBackground }}
+            >
+              <div className="flex items-center w-full">
+                <svg
+                  xmlns="http://www.w3.org/2000/svg"
+                  width="24"
+                  height="24"
+                  viewBox="0 0 24 24"
+                  fill="none"
+                  stroke="currentColor"
+                  strokeWidth="2"
+                  strokeLinecap="round"
+                  strokeLinejoin="round"
+                  className="mr-3 text-gray-400"
+                >
+                  <rect width="18" height="11" x="3" y="11" rx="2" ry="2"/>
+                  <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
+                </svg>
+                <span className="text-gray-400 text-lg">••••••••</span>
+              </div>
+              <button type="button" className="text-gray-400">
+                Forgot?
+              </button>
+            </div>
+          </div>
+
+          {/* 2FA Section */}
+          <div className="mb-6">
+            <label className="block text-gray-400 mb-2 text-lg">
+              2FA Confirmation
+            </label>
+            <div
+              className="flex items-center p-4 rounded-lg"
+              style={{ backgroundColor: colors.darkInputBackground }}
+            >
+              <svg
+                xmlns="http://www.w3.org/2000/svg"
+                width="24"
+                height="24"
+                viewBox="0 0 24 24"
+                fill="none"
+                stroke="currentColor"
+                strokeWidth="2"
+                strokeLinecap="round"
+                strokeLinejoin="round"
+                className="mr-3 text-gray-400"
+              >
+                <rect x="3" y="11" width="18" height="10" rx="2"/>
+                <circle cx="12" cy="5" r="2"/>
+                <path d="M12 7v4"/>
+                <line x1="8" y1="16" x2="16" y2="16"/>
+              </svg>
+              <input
+                type="text"
+                placeholder="Confirmation code"
+                value={confirmationCode}
+                onChange={(e) => setConfirmationCode(e.target.value)}
+                className="bg-transparent border-none outline-none w-full text-lg"
+              />
+            </div>
+            <p className="text-gray-400 mt-3">
+              Check your email for a sign in code and enter it here.
+            </p>
+          </div>
+
+          {/* Buttons */}
+          <div className="flex justify-between mt-8">
+            <button
+              type="button"
+              onClick={onBackClick}
+              className="px-8 py-3 rounded-lg text-lg font-medium"
+              style={{ backgroundColor: colors.darkGray }}
+            >
+              Back
+            </button>
+
+            <button
+              type="submit"
+              disabled={isLoading}
+              className="px-8 py-3 rounded-lg text-lg font-medium"
+              style={{ backgroundColor: colors.vibrantBlue }}
+            >
+              Next
+            </button>
+          </div>
+        </form>
+      </div>
+
+      {/* Made with Manus */}
+      <div
+        className="fixed bottom-20 right-8 bg-gray-800 rounded-full px-4 py-2 flex items-center"
+      >
+        <span className="mr-2">Made with Manus</span>
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          width="20"
+          height="20"
+          viewBox="0 0 24 24"
+          fill="none"
+          stroke="currentColor"
+          strokeWidth="2"
+          strokeLinecap="round"
+          strokeLinejoin="round"
+        >
+          <path d="M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5"/>
+          <path d="M8.5 8.5v.01"/>
+          <path d="M16 15.5v.01"/>
+          <path d="M12 12v.01"/>
+          <path d="M11 17v.01"/>
+          <path d="M7 14v.01"/>
+        </svg>
+      </div>
+    </div>
+  );
+};
+
+export default TwoFactorScreen;
+
diff --git a/WelcomeScreen.tsx b/WelcomeScreen.tsx
new file mode 100644
index 0000000..de0f33b
--- /dev/null
+++ b/WelcomeScreen.tsx
@@ -0,0 +1,104 @@
+"use client";
+
+import React from 'react';
+import Image from 'next/image';
+import { useRouter } from 'next/navigation';
+import { colors } from '../../utils/colors';
+
+interface WelcomeScreenProps {
+  onSignInClick: () => void;
+  onCreateAccountClick: () => void;
+}
+
+const WelcomeScreen: React.FC<WelcomeScreenProps> = ({
+  onSignInClick,
+  onCreateAccountClick
+}) => {
+  return (
+    <div className="flex flex-col items-center justify-center min-h-screen bg-black text-white p-4">
+      <div className="flex flex-col items-center w-full max-w-md">
+        {/* Logo */}
+        <div className="mb-4 relative w-32 h-32">
+          <Image
+            src="/logo.png"
+            alt="OmniSky Logo"
+            fill
+            style={{ objectFit: 'contain' }}
+            priority
+          />
+        </div>
+
+        {/* App Name */}
+        <h1 className="text-5xl font-bold mb-2 text-white">OmniSky</h1>
+
+        {/* Tagline */}
+        <p className="text-xl text-gray-400 mb-12">The Everything Client!</p>
+
+        {/* Sign In Button */}
+        <button
+          onClick={onSignInClick}
+          className="w-full py-4 mb-4 text-white font-semibold rounded-lg text-lg"
+          style={{ backgroundColor: colors.vibrantBlue }}
+        >
+          Sign in
+        </button>
+
+        {/* Create Account Button */}
+        <button
+          onClick={onCreateAccountClick}
+          className="w-full py-4 mb-12 text-white font-semibold rounded-lg text-lg"
+          style={{ backgroundColor: colors.vibrantBlue }}
+        >
+          Create account
+        </button>
+
+        {/* Language Selector */}
+        <div className="flex items-center text-gray-400">
+          <span>English</span>
+          <svg
+            xmlns="http://www.w3.org/2000/svg"
+            width="24"
+            height="24"
+            viewBox="0 0 24 24"
+            fill="none"
+            stroke="currentColor"
+            strokeWidth="2"
+            strokeLinecap="round"
+            strokeLinejoin="round"
+            className="ml-1"
+          >
+            <path d="m6 9 6 6 6-6"/>
+          </svg>
+        </div>
+      </div>
+
+      {/* Made with Manus */}
+      <div
+        className="fixed bottom-20 right-8 bg-gray-800 rounded-full px-4 py-2 flex items-center"
+      >
+        <span className="mr-2">Made with Manus</span>
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          width="20"
+          height="20"
+          viewBox="0 0 24 24"
+          fill="none"
+          stroke="currentColor"
+          strokeWidth="2"
+          strokeLinecap="round"
+          strokeLinejoin="round"
+        >
+          <path d="M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5"/>
+          <path d="M8.5 8.5v.01"/>
+          <path d="M16 15.5v.01"/>
+          <path d="M12 12v.01"/>
+          <path d="M11 17v.01"/>
+          <path d="M7 14v.01"/>
+        </svg>
+      </div>
+    </div>
+  );
+};
+
+export default WelcomeScreen;
+
diff --git a/_routes.json b/_routes.json
new file mode 100644
index 0000000..5dcb575
--- /dev/null
+++ b/_routes.json
@@ -0,0 +1,5 @@
+{
+  "version": 1,
+  "include": ["/*"],
+  "exclude": ["/_next/static/*"]
+}
diff --git a/agent.ts b/agent.ts
new file mode 100644
index 0000000..531e285
--- /dev/null
+++ b/agent.ts
@@ -0,0 +1,309 @@
+import {AtpSessionData, AtpSessionEvent, BskyAgent} from '@atproto/api'
+import {TID} from '@atproto/common-web'
+
+import {networkRetry} from '#/lib/async/retry'
+import {
+  BSKY_SERVICE,
+  DISCOVER_SAVED_FEED,
+  IS_PROD_SERVICE,
+  PUBLIC_BSKY_SERVICE,
+  TIMELINE_SAVED_FEED,
+} from '#/lib/constants'
+import {tryFetchGates} from '#/lib/statsig/statsig'
+import {getAge} from '#/lib/strings/time'
+import {logger} from '#/logger'
+import {snoozeEmailConfirmationPrompt} from '#/state/shell/reminders'
+import {emitNetworkConfirmed, emitNetworkLost} from '../events'
+import {addSessionErrorLog} from './logging'
+import {
+  configureModerationForAccount,
+  configureModerationForGuest,
+} from './moderation'
+import {SessionAccount} from './types'
+import {isSessionExpired, isSignupQueued} from './util'
+
+export function createPublicAgent() {
+  configureModerationForGuest() // Side effect but only relevant for tests
+  return new BskyAppAgent({service: PUBLIC_BSKY_SERVICE})
+}
+
+export async function createAgentAndResume(
+  storedAccount: SessionAccount,
+  onSessionChange: (
+    agent: BskyAgent,
+    did: string,
+    event: AtpSessionEvent,
+  ) => void,
+) {
+  const agent = new BskyAppAgent({service: storedAccount.service})
+  if (storedAccount.pdsUrl) {
+    agent.sessionManager.pdsUrl = new URL(storedAccount.pdsUrl)
+  }
+  const gates = tryFetchGates(storedAccount.did, 'prefer-low-latency')
+  const moderation = configureModerationForAccount(agent, storedAccount)
+  const prevSession: AtpSessionData = sessionAccountToSession(storedAccount)
+  if (isSessionExpired(storedAccount)) {
+    await networkRetry(1, () => agent.resumeSession(prevSession))
+  } else {
+    agent.sessionManager.session = prevSession
+    if (!storedAccount.signupQueued) {
+      networkRetry(3, () => agent.resumeSession(prevSession)).catch(
+        (e: any) => {
+          logger.error(`networkRetry failed to resume session`, {
+            status: e?.status || 'unknown',
+            // this field name is ignored by Sentry scrubbers
+            safeMessage: e?.message || 'unknown',
+          })
+
+          throw e
+        },
+      )
+    }
+  }
+
+  return agent.prepare(gates, moderation, onSessionChange)
+}
+
+export async function createAgentAndLogin(
+  {
+    service,
+    identifier,
+    password,
+    authFactorToken,
+  }: {
+    service: string
+    identifier: string
+    password: string
+    authFactorToken?: string
+  },
+  onSessionChange: (
+    agent: BskyAgent,
+    did: string,
+    event: AtpSessionEvent,
+  ) => void,
+) {
+  const agent = new BskyAppAgent({service})
+  await agent.login({
+    identifier,
+    password,
+    authFactorToken,
+    allowTakendown: true,
+  })
+
+  const account = agentToSessionAccountOrThrow(agent)
+  const gates = tryFetchGates(account.did, 'prefer-fresh-gates')
+  const moderation = configureModerationForAccount(agent, account)
+  return agent.prepare(gates, moderation, onSessionChange)
+}
+
+export async function createAgentAndCreateAccount(
+  {
+    service,
+    email,
+    password,
+    handle,
+    birthDate,
+    inviteCode,
+    verificationPhone,
+    verificationCode,
+  }: {
+    service: string
+    email: string
+    password: string
+    handle: string
+    birthDate: Date
+    inviteCode?: string
+    verificationPhone?: string
+    verificationCode?: string
+  },
+  onSessionChange: (
+    agent: BskyAgent,
+    did: string,
+    event: AtpSessionEvent,
+  ) => void,
+) {
+  const agent = new BskyAppAgent({service})
+  await agent.createAccount({
+    email,
+    password,
+    handle,
+    inviteCode,
+    verificationPhone,
+    verificationCode,
+  })
+  const account = agentToSessionAccountOrThrow(agent)
+  const gates = tryFetchGates(account.did, 'prefer-fresh-gates')
+  const moderation = configureModerationForAccount(agent, account)
+
+  // Not awaited so that we can still get into onboarding.
+  // This is OK because we won't let you toggle adult stuff until you set the date.
+  if (IS_PROD_SERVICE(service)) {
+    try {
+      networkRetry(1, async () => {
+        await agent.setPersonalDetails({birthDate: birthDate.toISOString()})
+        await agent.overwriteSavedFeeds([
+          {
+            ...DISCOVER_SAVED_FEED,
+            id: TID.nextStr(),
+          },
+          {
+            ...TIMELINE_SAVED_FEED,
+            id: TID.nextStr(),
+          },
+        ])
+
+        if (getAge(birthDate) < 18) {
+          await agent.api.com.atproto.repo.putRecord({
+            repo: account.did,
+            collection: 'chat.bsky.actor.declaration',
+            rkey: 'self',
+            record: {
+              $type: 'chat.bsky.actor.declaration',
+              allowIncoming: 'none',
+            },
+          })
+        }
+      })
+    } catch (e: any) {
+      logger.error(e, {
+        message: `session: createAgentAndCreateAccount failed to save personal details and feeds`,
+      })
+    }
+  } else {
+    agent.setPersonalDetails({birthDate: birthDate.toISOString()})
+  }
+
+  try {
+    // snooze first prompt after signup, defer to next prompt
+    snoozeEmailConfirmationPrompt()
+  } catch (e: any) {
+    logger.error(e, {message: `session: failed snoozeEmailConfirmationPrompt`})
+  }
+
+  return agent.prepare(gates, moderation, onSessionChange)
+}
+
+export function agentToSessionAccountOrThrow(agent: BskyAgent): SessionAccount {
+  const account = agentToSessionAccount(agent)
+  if (!account) {
+    throw Error('Expected an active session')
+  }
+  return account
+}
+
+export function agentToSessionAccount(
+  agent: BskyAgent,
+): SessionAccount | undefined {
+  if (!agent.session) {
+    return undefined
+  }
+  return {
+    service: agent.service.toString(),
+    did: agent.session.did,
+    handle: agent.session.handle,
+    email: agent.session.email,
+    emailConfirmed: agent.session.emailConfirmed || false,
+    emailAuthFactor: agent.session.emailAuthFactor || false,
+    refreshJwt: agent.session.refreshJwt,
+    accessJwt: agent.session.accessJwt,
+    signupQueued: isSignupQueued(agent.session.accessJwt),
+    active: agent.session.active,
+    status: agent.session.status as SessionAccount['status'],
+    pdsUrl: agent.pdsUrl?.toString(),
+    isSelfHosted: !agent.serviceUrl.toString().startsWith(BSKY_SERVICE),
+  }
+}
+
+export function sessionAccountToSession(
+  account: SessionAccount,
+): AtpSessionData {
+  return {
+    // Sorted in the same property order as when returned by BskyAgent (alphabetical).
+    accessJwt: account.accessJwt ?? '',
+    did: account.did,
+    email: account.email,
+    emailAuthFactor: account.emailAuthFactor,
+    emailConfirmed: account.emailConfirmed,
+    handle: account.handle,
+    refreshJwt: account.refreshJwt ?? '',
+    /**
+     * @see https://github.com/bluesky-social/atproto/blob/c5d36d5ba2a2c2a5c4f366a5621c06a5608e361e/packages/api/src/agent.ts#L188
+     */
+    active: account.active ?? true,
+    status: account.status,
+  }
+}
+
+// Not exported. Use factories above to create it.
+let realFetch = globalThis.fetch
+class BskyAppAgent extends BskyAgent {
+  persistSessionHandler: ((event: AtpSessionEvent) => void) | undefined =
+    undefined
+
+  constructor({service}: {service: string}) {
+    super({
+      service,
+      async fetch(...args) {
+        let success = false
+        try {
+          const result = await realFetch(...args)
+          success = true
+          return result
+        } catch (e) {
+          success = false
+          throw e
+        } finally {
+          if (success) {
+            emitNetworkConfirmed()
+          } else {
+            emitNetworkLost()
+          }
+        }
+      },
+      persistSession: (event: AtpSessionEvent) => {
+        if (this.persistSessionHandler) {
+          this.persistSessionHandler(event)
+        }
+      },
+    })
+  }
+
+  async prepare(
+    // Not awaited in the calling code so we can delay blocking on them.
+    gates: Promise<void>,
+    moderation: Promise<void>,
+    onSessionChange: (
+      agent: BskyAgent,
+      did: string,
+      event: AtpSessionEvent,
+    ) => void,
+  ) {
+    // There's nothing else left to do, so block on them here.
+    await Promise.all([gates, moderation])
+
+    // Now the agent is ready.
+    const account = agentToSessionAccountOrThrow(this)
+    let lastSession = this.sessionManager.session
+    this.persistSessionHandler = event => {
+      if (this.sessionManager.session) {
+        lastSession = this.sessionManager.session
+      } else if (event === 'network-error') {
+        // Put it back, we'll try again later.
+        this.sessionManager.session = lastSession
+      }
+
+      onSessionChange(this, account.did, event)
+      if (event !== 'create' && event !== 'update') {
+        addSessionErrorLog(account.did, event)
+      }
+    }
+    return {account, agent: this}
+  }
+
+  dispose() {
+    this.sessionManager.session = undefined
+    this.persistSessionHandler = undefined
+  }
+}
+
+export type {BskyAppAgent}
diff --git a/client-metadata.json b/client-metadata.json
new file mode 100644
index 0000000..180825f
--- /dev/null
+++ b/client-metadata.json
@@ -0,0 +1,17 @@
+{
+  "client_id": "https://nsicaeop.manus.space/client-metadata.json",
+  "client_name": "BlueShapes",
+  "client_uri": "https://nsicaeop.manus.space",
+  "logo_uri": "https://nsicaeop.manus.space/shapes_logo.jpeg",
+  "redirect_uris": ["https://nsicaeop.manus.space/callback"],
+  "scope": "atproto transition:generic",
+  "grant_types": ["authorization_code", "refresh_token"],
+  "response_types": ["code"],
+  "token_endpoint_auth_method": "none",
+  "application_type": "web",
+  "dpop_bound_access_tokens": true,
+  "subject_type": "public",
+  "tos_uri": "https://nsicaeop.manus.space/terms",
+  "policy_uri": "https://nsicaeop.manus.space/privacy",
+  "jwks_uri": "https://nsicaeop.manus.space/.well-known/jwks.json"
+}
diff --git a/client.tsx b/client.tsx
new file mode 100644
index 0000000..13d0e9e
--- /dev/null
+++ b/client.tsx
@@ -0,0 +1,155 @@
+"use client";
+
+import React, { useState, useEffect, useRef } from 'react';
+import AppLayout from '@/components/AppLayout';
+import { ArrowLeft, Send, Paperclip, Mic } from 'lucide-react';
+import Link from 'next/link';
+import Image from 'next/image';
+
+// Placeholder data for a specific chat
+const initialMessages = [
+  {
+    id: 'm1',
+    sender: 'other',
+    avatar: '/shapes_logo.jpeg', // Using available logo as placeholder
+    text: 'Hello! How are you today?',
+    timestamp: '10:00 AM'
+  },
+  {
+    id: 'm2',
+    sender: 'me',
+    text: 'I\'m doing well, thank you. How about yourself?',
+    timestamp: '10:01 AM'
+  },
+  {
+    id: 'm3',
+    sender: 'other',
+    avatar: '/shapes_logo.jpeg',
+    text: 'Great! Just working on some new projects.',
+    timestamp: '10:02 AM'
+  },
+  {
+    id: 'm4',
+    sender: 'me',
+    text: 'That sounds interesting. What kind of projects?',
+    timestamp: '10:03 AM'
+  },
+  {
+    id: 'm5',
+    sender: 'other',
+    avatar: '/shapes_logo.jpeg',
+    text: 'Just some design work. This is a placeholder message to demonstrate how longer messages appear in the chat interface. The bubble should expand properly to accommodate multiple lines of text while maintaining readability and visual consistency across different screen sizes.',
+    timestamp: '10:05 AM'
+  },
+  {
+    id: 'm6',
+    sender: 'me',
+    text: 'That looks great! The design is coming along nicely.',
+    timestamp: '10:07 AM'
+  },
+];
+
+interface ChatViewClientProps {
+  chatId: string;
+}
+
+const ChatViewClient: React.FC<ChatViewClientProps> = ({ chatId }) => {
+  const [messages, setMessages] = useState(initialMessages);
+  const [newMessage, setNewMessage] = useState('');
+  const messagesEndRef = useRef<null | HTMLDivElement>(null);
+
+  // Placeholder: Fetch chat partner details based on chatId
+  const chatPartner = {
+    name: 'User123',
+    avatar: '/shapes_logo.jpeg',
+    handle: '@user123.bsky.social'
+  };
+
+  const scrollToBottom = () => {
+    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
+  }
+
+  useEffect(() => {
+    scrollToBottom();
+  }, [messages]);
+
+  const handleSendMessage = (e: React.FormEvent) => {
+    e.preventDefault();
+    if (newMessage.trim() === '') return;
+
+    const newMsg = {
+      id: `m${messages.length + 1}`,
+      sender: 'me',
+      text: newMessage,
+      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })
+    };
+    setMessages([...messages, newMsg]);
+    setNewMessage('');
+  };
+
+  return (
+    <AppLayout currentPage={`chat/${chatId}`} showHeader={false} showSidebarButton={false}>
+      <div className="bg-black text-white flex flex-col h-screen">
+        {/* Custom Header for Chat View */}
+        <header className="h-14 flex items-center px-4 border-b border-gray-800 sticky top-0 bg-black z-30">
+          <Link href="/chat" legacyBehavior>
+            <a className="p-2 -ml-2 mr-2 text-blue-400">
+              <ArrowLeft size={24} />
+            </a>
+          </Link>
+          <Image src={chatPartner.avatar} alt={chatPartner.name} width={32} height={32} className="rounded-full mr-3" />
+          <div>
+            <h1 className="text-base font-semibold leading-tight">{chatPartner.name}</h1>
+            <p className="text-xs text-gray-500 leading-tight">{chatPartner.handle}</p>
+          </div>
+          {/* Potentially a MoreHorizontal or Call icon on the right */}
+        </header>
+
+        {/* Messages Area */}
+        <div className="flex-grow overflow-y-auto p-4 space-y-4">
+          {messages.map((msg) => (
+            <div key={msg.id} className={`flex ${msg.sender === 'me' ? 'justify-end' : 'justify-start'}`}>
+              {msg.sender === 'other' && (
+                <Image src={msg.avatar || '/shapes_logo.jpeg'} alt="Sender Avatar" width={32} height={32} className="rounded-full mr-2 self-end mb-1" />
+              )}
+              <div
+                className={`max-w-xs lg:max-w-md px-3 py-2 rounded-2xl ${msg.sender === 'me' ? 'bg-blue-600 text-white rounded-br-none' : 'bg-gray-700 text-gray-200 rounded-bl-none'}`}
+              >
+                <p className="text-sm whitespace-pre-wrap">{msg.text}</p>
+                <p className={`text-xs mt-1 ${msg.sender === 'me' ? 'text-blue-200' : 'text-gray-400'} text-right`}>{msg.timestamp}</p>
+              </div>
+            </div>
+          ))}
+          <div ref={messagesEndRef} />
+        </div>
+
+        {/* Message Input Area */}
+        <div className="bg-black border-t border-gray-800 p-3 sticky bottom-0 z-10">
+          <form onSubmit={handleSendMessage} className="flex items-center space-x-2">
+            <button type="button" className="p-2 text-gray-400 hover:text-gray-200">
+              <Paperclip size={22} />
+            </button>
+            <input
+              type="text"
+              value={newMessage}
+              onChange={(e) => setNewMessage(e.target.value)}
+              placeholder="Message..."
+              className="flex-grow bg-gray-800 border border-gray-700 rounded-full py-2.5 px-4 text-sm text-white placeholder-gray-500 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
+            />
+            {newMessage ? (
+                <button type="submit" className="p-2 text-blue-500 hover:text-blue-400">
+                    <Send size={22} />
+                </button>
+            ) : (
+                <button type="button" className="p-2 text-gray-400 hover:text-gray-200">
+                    <Mic size={22} />
+                </button>
+            )}
+          </form>
+        </div>
+      </div>
+    </AppLayout>
+  );
+};
+
+export default ChatViewClient;
diff --git a/colors.ts b/colors.ts
new file mode 100644
index 0000000..ee98f7c
--- /dev/null
+++ b/colors.ts
@@ -0,0 +1,20 @@
+// Color palette extracted from OmniSky logo
+export const colors = {
+  // Button colors
+  lightBlue: '#85c5e7',
+  darkBlue: '#097ecd',
+  vibrantBlue: '#1a89d1',
+
+  // Text colors
+  white: '#FFFFFF',
+
+  // Background colors
+  darkBackground: '#121212',
+  darkInputBackground: '#1e2130',
+
+  // Additional UI colors
+  darkGray: '#2a2f45',
+  mediumGray: '#4a4f65',
+  lightGray: '#9095a0',
+};
+
diff --git a/extract_colors.py b/extract_colors.py
new file mode 100644
index 0000000..cf5afa9
--- /dev/null
+++ b/extract_colors.py
@@ -0,0 +1,77 @@
+from PIL import Image
+import numpy as np
+from collections import Counter
+
+# Load the image
+image_path = '/home/ubuntu/upload/IMG_6035.jpeg'
+img = Image.open(image_path)
+
+# Convert image to RGB if it's not already
+img = img.convert('RGB')
+
+# Resize for faster processing
+img = img.resize((100, 100))
+
+# Get image data as numpy array
+img_array = np.array(img)
+
+# Reshape the array to a list of pixels
+pixels = img_array.reshape(-1, 3)
+
+# Filter out white/very light colors (cloud) and very dark colors
+filtered_pixels = []
+for pixel in pixels:
+    r, g, b = pixel
+    # Skip white/very light colors (cloud part)
+    if r > 200 and g > 200 and b > 200:
+        continue
+    # Skip very dark colors (background)
+    if r < 20 and g < 20 and b < 20:
+        continue
+    # We're interested in blue colors
+    if b > max(r, g):
+        filtered_pixels.append((r, g, b))
+
+# Count occurrences of each color
+color_counter = Counter(map(tuple, filtered_pixels))
+
+# Get the most common colors
+most_common_colors = color_counter.most_common(5)
+
+print("Most common blue colors in the logo:")
+for color, count in most_common_colors:
+    r, g, b = color
+    hex_color = f'#{r:02x}{g:02x}{b:02x}'
+    print(f"RGB: {color}, Hex: {hex_color}, Count: {count}")
+
+# Extract light and dark blue for button styling
+light_blues = []
+dark_blues = []
+
+for pixel in filtered_pixels:
+    r, g, b = pixel
+    brightness = (r + g + b) / 3
+    if brightness > 100:  # Adjust threshold as needed
+        light_blues.append((r, g, b))
+    else:
+        dark_blues.append((r, g, b))
+
+# Get average light and dark blue
+if light_blues:
+    avg_light_blue = tuple(map(int, np.mean(light_blues, axis=0)))
+    light_blue_hex = f'#{avg_light_blue[0]:02x}{avg_light_blue[1]:02x}{avg_light_blue[2]:02x}'
+    print(f"\nAverage Light Blue: RGB {avg_light_blue}, Hex: {light_blue_hex}")
+
+if dark_blues:
+    avg_dark_blue = tuple(map(int, np.mean(dark_blues, axis=0)))
+    dark_blue_hex = f'#{avg_dark_blue[0]:02x}{avg_dark_blue[1]:02x}{avg_dark_blue[2]:02x}'
+    print(f"Average Dark Blue: RGB {avg_dark_blue}, Hex: {dark_blue_hex}")
+
+# Suggest button colors based on the logo
+print("\nSuggested Button Colors:")
+if light_blues:
+    print(f"Primary Button: {light_blue_hex}")
+if dark_blues:
+    print(f"Secondary Button: {dark_blue_hex}")
+print("Text on Buttons: #FFFFFF (White)")
+
diff --git a/extract_colors_improved.py b/extract_colors_improved.py
new file mode 100644
index 0000000..22c671d
--- /dev/null
+++ b/extract_colors_improved.py
@@ -0,0 +1,84 @@
+from PIL import Image
+import numpy as np
+from collections import Counter
+
+# Load the image
+image_path = '/home/ubuntu/upload/IMG_6035.jpeg'
+img = Image.open(image_path)
+
+# Convert image to RGB if it's not already
+img = img.convert('RGB')
+
+# Get image data as numpy array
+img_array = np.array(img)
+
+# Reshape the array to a list of pixels
+pixels = img_array.reshape(-1, 3)
+
+# Filter out white/very light colors (cloud) and very dark colors
+blue_pixels = []
+for pixel in pixels:
+    r, g, b = pixel
+    # Skip white/very light colors (cloud part)
+    if r > 200 and g > 200 and b > 200:
+        continue
+    # Skip very dark colors (background)
+    if r < 20 and g < 20 and b < 20:
+        continue
+    # We're interested in blue colors
+    if b > max(r, g) and b > 100:
+        blue_pixels.append((int(r), int(g), int(b)))
+
+# Separate into light and dark blues
+light_blues = []
+dark_blues = []
+
+for r, g, b in blue_pixels:
+    brightness = (r + g + b) / 3
+    if brightness > 150:  # Adjust threshold as needed
+        light_blues.append((r, g, b))
+    else:
+        dark_blues.append((r, g, b))
+
+# Get average light and dark blue
+if light_blues:
+    avg_light_blue = tuple(map(int, np.mean(light_blues, axis=0)))
+    light_blue_hex = f'#{avg_light_blue[0]:02x}{avg_light_blue[1]:02x}{avg_light_blue[2]:02x}'
+    print(f"Average Light Blue: RGB {avg_light_blue}, Hex: {light_blue_hex}")
+
+if dark_blues:
+    avg_dark_blue = tuple(map(int, np.mean(dark_blues, axis=0)))
+    dark_blue_hex = f'#{avg_dark_blue[0]:02x}{avg_dark_blue[1]:02x}{avg_dark_blue[2]:02x}'
+    print(f"Average Dark Blue: RGB {avg_dark_blue}, Hex: {dark_blue_hex}")
+
+# Get the most common blue colors
+color_counter = Counter(blue_pixels)
+most_common_blues = color_counter.most_common(5)
+
+print("\nMost common blue colors in the logo:")
+for color, count in most_common_blues:
+    r, g, b = color
+    hex_color = f'#{r:02x}{g:02x}{b:02x}'
+    print(f"RGB: {color}, Hex: {hex_color}, Count: {count}")
+
+# Suggest button colors based on the logo
+print("\nSuggested Button Colors:")
+if light_blues:
+    print(f"Primary Button (Light Blue): {light_blue_hex}")
+if dark_blues:
+    print(f"Secondary Button (Dark Blue): {dark_blue_hex}")
+
+# Get the most vibrant blue for primary action buttons
+vibrant_blues = []
+for r, g, b in blue_pixels:
+    saturation = (max(r, g, b) - min(r, g, b)) / max(r, g, b) if max(r, g, b) > 0 else 0
+    if saturation > 0.5 and b > 150:  # High saturation and reasonably bright blue
+        vibrant_blues.append((r, g, b))
+
+if vibrant_blues:
+    avg_vibrant_blue = tuple(map(int, np.mean(vibrant_blues, axis=0)))
+    vibrant_blue_hex = f'#{avg_vibrant_blue[0]:02x}{avg_vibrant_blue[1]:02x}{avg_vibrant_blue[2]:02x}'
+    print(f"Action Button (Vibrant Blue): {vibrant_blue_hex}")
+
+print("Text on Buttons: #FFFFFF (White)")
+
diff --git a/extract_logo.py b/extract_logo.py
new file mode 100644
index 0000000..9414e10
--- /dev/null
+++ b/extract_logo.py
@@ -0,0 +1,12 @@
+from PIL import Image
+
+# Load the image
+image_path = '/home/ubuntu/upload/IMG_6035.jpeg'
+img = Image.open(image_path)
+
+# Save the logo to the public directory
+output_path = '/home/ubuntu/omnisky/public/logo.png'
+img.save(output_path, 'PNG')
+
+print(f"Logo saved to {output_path}")
+
diff --git a/globals.css b/globals.css
new file mode 100644
index 0000000..3162668
--- /dev/null
+++ b/globals.css
@@ -0,0 +1,41 @@
+/* Global CSS variables and base styles */
+:root {
+  --foreground-rgb: 0, 0, 0;
+  --background-start-rgb: 214, 219, 220;
+  --background-end-rgb: 255, 255, 255;
+}
+
+@media (prefers-color-scheme: dark) {
+  :root {
+    --foreground-rgb: 255, 255, 255;
+    --background-start-rgb: 0, 0, 0;
+    --background-end-rgb: 0, 0, 0;
+  }
+}
+
+* {
+  box-sizing: border-box;
+  padding: 0;
+  margin: 0;
+}
+
+html,
+body {
+  max-width: 100vw;
+  overflow-x: hidden;
+}
+
+body {
+  color: rgb(var(--foreground-rgb));
+  background: linear-gradient(
+      to bottom,
+      transparent,
+      rgb(var(--background-end-rgb))
+    )
+    rgb(var(--background-start-rgb));
+}
+
+a {
+  color: inherit;
+  text-decoration: none;
+}
diff --git a/handle.py b/handle.py
new file mode 100644
index 0000000..f4a7f9e
--- /dev/null
+++ b/handle.py
@@ -0,0 +1,185 @@
+from enum import IntEnum
+from aiohttp import ClientSession
+from pydantic import BaseModel
+from aiodns import DNSResolver
+from typing import Optional, Any, Dict
+import sentry_sdk
+
+
+class SubjectType(IntEnum):
+    did_method_plc = 1
+    did_method_web = 2
+    hostname = 3
+
+
+class ParsedSubject(BaseModel):
+    subject_type: SubjectType
+    subject: str
+
+
+class ResolvedSubject(BaseModel):
+    did: str
+    handle: str
+    pds: str
+
+    # @model_validator(mode='after')
+    # def validate_also_known_as(self) -> 'ResolvedSubject':
+    #     for value in self.also_known_as:
+    #         if subject.startswith("at://did:")
+    #             continue
+    #         if subject.startswith("at://")
+    #             return value
+    #         elif subject.startswith("https://")
+    #             continue
+    #     raise ValueError("No handles returned")
+
+
+async def resolve_handle_dns(handle: str) -> Optional[str]:
+    # TODO: Wrap hickory-dns and use that
+    resolver = DNSResolver()
+    try:
+        results = await resolver.query(f"_atproto.{handle}", "TXT")
+    except Exception as e:
+        sentry_sdk.capture_exception(e)
+        return None
+    first_result = next(iter(results or []), None)
+    if first_result is not None:
+        return first_result.text.removeprefix("did=")
+    return None
+
+
+async def resolve_handle_http(session: ClientSession, handle: str) -> Optional[str]:
+    async with session.get(f"https://{handle}/.well-known/atproto-did") as resp:
+        if resp.status != 200:
+            return None
+        body = await resp.text()
+        if body is not None:
+            return body
+        return None
+
+
+async def resolve_handle(session: ClientSession, handle: str) -> Optional[str]:
+    did: Optional[str] = None
+
+    did = await resolve_handle_dns(handle)
+    if did is not None:
+        return did
+
+    return await resolve_handle_http(session, handle)
+
+    # Nick: Alternatively, we could use an async task group to do these in parallel.
+    #
+    # async with asyncio.TaskGroup() as tg:
+    #     dns_result = tg.create_task(resolve_handle_dns(handle))
+    #     http_result = tg.create_task(resolve_handle_http(session, handle))
+    # dns_result = dns_result.result()
+    # http_result = http_result.result()
+    # if dns_result is not None:
+    #     return dns_result
+    # return http_result
+
+
+def handle_predicate(value: str) -> bool:
+    return value.startswith("at://")
+
+
+def pds_predicate(value: Dict[str, Any]) -> bool:
+    return (
+        value.get("type", None) == "AtprotoPersonalDataServer"
+        and "serviceEndpoint" in value
+    )
+
+
+async def resolve_did_method_plc(
+    plc_directory: str, session: ClientSession, did: str
+) -> Optional[ResolvedSubject]:
+    async with session.get(f"https://{plc_directory}/{did}") as resp:
+        if resp.status != 200:
+            return None
+        body = await resp.json()
+        if body is None:
+            return None
+        handle = next(filter(handle_predicate, body.get("alsoKnownAs", [])), None)
+        pds = next(filter(pds_predicate, body.get("service", [])), None)
+        if handle is not None and pds is not None:
+            return ResolvedSubject(
+                did=did,
+                handle=handle.removeprefix("at://"),
+                pds=pds.get("serviceEndpoint"),
+            )
+    return None
+
+
+async def resolve_did_method_web(
+    session: ClientSession, did: str
+) -> Optional[ResolvedSubject]:
+
+    parts = did.removeprefix("did:web:").split(":")
+    if len(parts) == 0:
+        return None
+
+    if len(parts) == 1:
+        parts.append(".well-known")
+
+    url = "https://{inner}/did.json".format(inner="/".join(parts))
+
+    async with session.get(url) as resp:
+        if resp.status != 200:
+            return None
+        body = await resp.json()
+        if body is None:
+            return None
+        handle = next(filter(handle_predicate, body.get("alsoKnownAs", [])), None)
+        pds = next(filter(pds_predicate, body.get("service", [])), None)
+        if handle is not None and pds is not None:
+            return ResolvedSubject(
+                did=did,
+                handle=handle.removeprefix("at://"),
+                pds=pds.get("serviceEndpoint"),
+            )
+    return None
+
+
+async def resolve_did(
+    session: ClientSession, plc_hostname: str, did: str
+) -> Optional[ResolvedSubject]:
+    if did.startswith("did:plc:"):
+        return await resolve_did_method_plc(plc_hostname, session, did)
+    elif did.startswith("did:web:"):
+        return await resolve_did_method_web(session, did)
+    return None
+
+
+async def resolve_subject(
+    session: ClientSession, plc_hostname: str, subject: str
+) -> Optional[ResolvedSubject]:
+    parsed_subject = parse_input(subject)
+    if parsed_subject is None:
+        return None
+
+    did: Optional[str] = None
+    if parsed_subject.subject_type == SubjectType.hostname:
+        did = await resolve_handle(session, parsed_subject.subject)
+    elif parsed_subject.subject_type == SubjectType.did_method_plc:
+        did = parsed_subject.subject
+    elif parsed_subject.subject_type == SubjectType.did_method_web:
+        did = parsed_subject.subject
+
+    if did is None:
+        return None
+
+    return await resolve_did(session, plc_hostname, did)
+
+
+def parse_input(subject: str) -> Optional[ParsedSubject]:
+    subject = subject.strip()
+    subject = subject.removeprefix("at://")
+    subject = subject.removeprefix("@")
+
+    if subject.startswith("did:plc:"):
+        return ParsedSubject(subject_type=SubjectType.did_method_plc, subject=subject)
+    elif subject.startswith("did:web:"):
+        return ParsedSubject(subject_type=SubjectType.did_method_web, subject=subject)
+
+    # TODO: Validate this hostname
+    return ParsedSubject(subject_type=SubjectType.hostname, subject=subject)
diff --git a/index.tsx b/index.tsx
new file mode 100644
index 0000000..45384c4
--- /dev/null
+++ b/index.tsx
@@ -0,0 +1,346 @@
+import React from 'react'
+import {type AtpSessionEvent, type BskyAgent} from '@atproto/api'
+
+import {isWeb} from '#/platform/detection'
+import * as persisted from '#/state/persisted'
+import {useCloseAllActiveElements} from '#/state/util'
+import {useGlobalDialogsControlContext} from '#/components/dialogs/Context'
+import {emitSessionDropped} from '../events'
+import {
+  agentToSessionAccount,
+  type BskyAppAgent,
+  createAgentAndCreateAccount,
+  createAgentAndLogin,
+  createAgentAndResume,
+  sessionAccountToSession,
+} from './agent'
+import {getInitialState, reducer} from './reducer'
+
+export {isSignupQueued} from './util'
+import {addSessionDebugLog} from './logging'
+export type {SessionAccount} from '#/state/session/types'
+import {logger} from '#/logger'
+import {
+  type SessionApiContext,
+  type SessionStateContext,
+} from '#/state/session/types'
+
+const StateContext = React.createContext<SessionStateContext>({
+  accounts: [],
+  currentAccount: undefined,
+  hasSession: false,
+})
+
+const AgentContext = React.createContext<BskyAgent | null>(null)
+
+const ApiContext = React.createContext<SessionApiContext>({
+  createAccount: async () => {},
+  login: async () => {},
+  logoutCurrentAccount: async () => {},
+  logoutEveryAccount: async () => {},
+  resumeSession: async () => {},
+  removeAccount: () => {},
+})
+
+export function Provider({children}: React.PropsWithChildren<{}>) {
+  const cancelPendingTask = useOneTaskAtATime()
+  const [state, dispatch] = React.useReducer(reducer, null, () => {
+    const initialState = getInitialState(persisted.get('session').accounts)
+    addSessionDebugLog({type: 'reducer:init', state: initialState})
+    return initialState
+  })
+
+  const onAgentSessionChange = React.useCallback(
+    (agent: BskyAgent, accountDid: string, sessionEvent: AtpSessionEvent) => {
+      const refreshedAccount = agentToSessionAccount(agent) // Mutable, so snapshot it right away.
+      if (sessionEvent === 'expired' || sessionEvent === 'create-failed') {
+        emitSessionDropped()
+      }
+      dispatch({
+        type: 'received-agent-event',
+        agent,
+        refreshedAccount,
+        accountDid,
+        sessionEvent,
+      })
+    },
+    [],
+  )
+
+  const createAccount = React.useCallback<SessionApiContext['createAccount']>(
+    async (params, metrics) => {
+      addSessionDebugLog({type: 'method:start', method: 'createAccount'})
+      const signal = cancelPendingTask()
+      logger.metric('account:create:begin', {}, {statsig: true})
+      const {agent, account} = await createAgentAndCreateAccount(
+        params,
+        onAgentSessionChange,
+      )
+
+      if (signal.aborted) {
+        return
+      }
+      dispatch({
+        type: 'switched-to-account',
+        newAgent: agent,
+        newAccount: account,
+      })
+      logger.metric('account:create:success', metrics, {statsig: true})
+      addSessionDebugLog({type: 'method:end', method: 'createAccount', account})
+    },
+    [onAgentSessionChange, cancelPendingTask],
+  )
+
+  const login = React.useCallback<SessionApiContext['login']>(
+    async (params, logContext) => {
+      addSessionDebugLog({type: 'method:start', method: 'login'})
+      const signal = cancelPendingTask()
+      const {agent, account} = await createAgentAndLogin(
+        params,
+        onAgentSessionChange,
+      )
+
+      if (signal.aborted) {
+        return
+      }
+      dispatch({
+        type: 'switched-to-account',
+        newAgent: agent,
+        newAccount: account,
+      })
+      logger.metric(
+        'account:loggedIn',
+        {logContext, withPassword: true},
+        {statsig: true},
+      )
+      addSessionDebugLog({type: 'method:end', method: 'login', account})
+    },
+    [onAgentSessionChange, cancelPendingTask],
+  )
+
+  const logoutCurrentAccount = React.useCallback<
+    SessionApiContext['logoutEveryAccount']
+  >(
+    logContext => {
+      addSessionDebugLog({type: 'method:start', method: 'logout'})
+      cancelPendingTask()
+      dispatch({
+        type: 'logged-out-current-account',
+      })
+      logger.metric(
+        'account:loggedOut',
+        {logContext, scope: 'current'},
+        {statsig: true},
+      )
+      addSessionDebugLog({type: 'method:end', method: 'logout'})
+    },
+    [cancelPendingTask],
+  )
+
+  const logoutEveryAccount = React.useCallback<
+    SessionApiContext['logoutEveryAccount']
+  >(
+    logContext => {
+      addSessionDebugLog({type: 'method:start', method: 'logout'})
+      cancelPendingTask()
+      dispatch({
+        type: 'logged-out-every-account',
+      })
+      logger.metric(
+        'account:loggedOut',
+        {logContext, scope: 'every'},
+        {statsig: true},
+      )
+      addSessionDebugLog({type: 'method:end', method: 'logout'})
+    },
+    [cancelPendingTask],
+  )
+
+  const resumeSession = React.useCallback<SessionApiContext['resumeSession']>(
+    async storedAccount => {
+      addSessionDebugLog({
+        type: 'method:start',
+        method: 'resumeSession',
+        account: storedAccount,
+      })
+      const signal = cancelPendingTask()
+      const {agent, account} = await createAgentAndResume(
+        storedAccount,
+        onAgentSessionChange,
+      )
+
+      if (signal.aborted) {
+        return
+      }
+      dispatch({
+        type: 'switched-to-account',
+        newAgent: agent,
+        newAccount: account,
+      })
+      addSessionDebugLog({type: 'method:end', method: 'resumeSession', account})
+    },
+    [onAgentSessionChange, cancelPendingTask],
+  )
+
+  const removeAccount = React.useCallback<SessionApiContext['removeAccount']>(
+    account => {
+      addSessionDebugLog({
+        type: 'method:start',
+        method: 'removeAccount',
+        account,
+      })
+      cancelPendingTask()
+      dispatch({
+        type: 'removed-account',
+        accountDid: account.did,
+      })
+      addSessionDebugLog({type: 'method:end', method: 'removeAccount', account})
+    },
+    [cancelPendingTask],
+  )
+
+  React.useEffect(() => {
+    if (state.needsPersist) {
+      state.needsPersist = false
+      const persistedData = {
+        accounts: state.accounts,
+        currentAccount: state.accounts.find(
+          a => a.did === state.currentAgentState.did,
+        ),
+      }
+      addSessionDebugLog({type: 'persisted:broadcast', data: persistedData})
+      persisted.write('session', persistedData)
+    }
+  }, [state])
+
+  React.useEffect(() => {
+    return persisted.onUpdate('session', nextSession => {
+      const synced = nextSession
+      addSessionDebugLog({type: 'persisted:receive', data: synced})
+      dispatch({
+        type: 'synced-accounts',
+        syncedAccounts: synced.accounts,
+        syncedCurrentDid: synced.currentAccount?.did,
+      })
+      const syncedAccount = synced.accounts.find(
+        a => a.did === synced.currentAccount?.did,
+      )
+      if (syncedAccount && syncedAccount.refreshJwt) {
+        if (syncedAccount.did !== state.currentAgentState.did) {
+          resumeSession(syncedAccount)
+        } else {
+          const agent = state.currentAgentState.agent as BskyAgent
+          const prevSession = agent.session
+          agent.sessionManager.session = sessionAccountToSession(syncedAccount)
+          addSessionDebugLog({
+            type: 'agent:patch',
+            agent,
+            prevSession,
+            nextSession: agent.session,
+          })
+        }
+      }
+    })
+  }, [state, resumeSession])
+
+  const stateContext = React.useMemo(
+    () => ({
+      accounts: state.accounts,
+      currentAccount: state.accounts.find(
+        a => a.did === state.currentAgentState.did,
+      ),
+      hasSession: !!state.currentAgentState.did,
+    }),
+    [state],
+  )
+
+  const api = React.useMemo(
+    () => ({
+      createAccount,
+      login,
+      logoutCurrentAccount,
+      logoutEveryAccount,
+      resumeSession,
+      removeAccount,
+    }),
+    [
+      createAccount,
+      login,
+      logoutCurrentAccount,
+      logoutEveryAccount,
+      resumeSession,
+      removeAccount,
+    ],
+  )
+
+  // @ts-expect-error window type is not declared, debug only
+  if (__DEV__ && isWeb) window.agent = state.currentAgentState.agent
+
+  const agent = state.currentAgentState.agent as BskyAppAgent
+  const currentAgentRef = React.useRef(agent)
+  React.useEffect(() => {
+    if (currentAgentRef.current !== agent) {
+      // Read the previous value and immediately advance the pointer.
+      const prevAgent = currentAgentRef.current
+      currentAgentRef.current = agent
+      addSessionDebugLog({type: 'agent:switch', prevAgent, nextAgent: agent})
+      // We never reuse agents so let's fully neutralize the previous one.
+      // This ensures it won't try to consume any refresh tokens.
+      prevAgent.dispose()
+    }
+  }, [agent])
+
+  return (
+    <AgentContext.Provider value={agent}>
+      <StateContext.Provider value={stateContext}>
+        <ApiContext.Provider value={api}>{children}</ApiContext.Provider>
+      </StateContext.Provider>
+    </AgentContext.Provider>
+  )
+}
+
+function useOneTaskAtATime() {
+  const abortController = React.useRef<AbortController | null>(null)
+  const cancelPendingTask = React.useCallback(() => {
+    if (abortController.current) {
+      abortController.current.abort()
+    }
+    abortController.current = new AbortController()
+    return abortController.current.signal
+  }, [])
+  return cancelPendingTask
+}
+
+export function useSession() {
+  return React.useContext(StateContext)
+}
+
+export function useSessionApi() {
+  return React.useContext(ApiContext)
+}
+
+export function useRequireAuth() {
+  const {hasSession} = useSession()
+  const closeAll = useCloseAllActiveElements()
+  const {signinDialogControl} = useGlobalDialogsControlContext()
+
+  return React.useCallback(
+    (fn: () => void) => {
+      if (hasSession) {
+        fn()
+      } else {
+        closeAll()
+        signinDialogControl.open()
+      }
+    },
+    [hasSession, signinDialogControl, closeAll],
+  )
+}
+
+export function useAgent(): BskyAgent {
+  const agent = React.useContext(AgentContext)
+  if (!agent) {
+    throw Error('useAgent() must be below <SessionProvider>.')
+  }
+  return agent
+}
diff --git a/layout.tsx b/layout.tsx
new file mode 100644
index 0000000..063473c
--- /dev/null
+++ b/layout.tsx
@@ -0,0 +1,30 @@
+"use client";
+
+import React from 'react';
+import { Inter } from 'next/font/google';
+import '../../globals.css';
+import { AuthProvider } from '@/AuthContext';
+import { BrowserAudioProvider } from '../../src/contexts/BrowserAudioContext';
+import ProtectedRoute from '../../ProtectedRoute';
+
+const inter = Inter({ subsets: ['latin'] });
+
+export default function RootLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return (
+    <html lang="en">
+      <body className={inter.className}>
+        <AuthProvider>
+          <BrowserAudioProvider>
+            <ProtectedRoute>
+              {children}
+            </ProtectedRoute>
+          </BrowserAudioProvider>
+        </AuthProvider>
+      </body>
+    </html>
+  );
+}
diff --git a/next-env.d.ts b/next-env.d.ts
new file mode 100644
index 0000000..1b3be08
--- /dev/null
+++ b/next-env.d.ts
@@ -0,0 +1,5 @@
+/// <reference types="next" />
+/// <reference types="next/image-types/global" />
+
+// NOTE: This file should not be edited
+// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.
diff --git a/next.config.ts b/next.config.ts
new file mode 100644
index 0000000..310757d
--- /dev/null
+++ b/next.config.ts
@@ -0,0 +1,32 @@
+// Vercel Deployment Preparation Notes:
+// The following configurations were noted during Vercel deployment preparation:
+// 1. `eslint: { ignoreDuringBuilds: true }`: It's recommended to resolve ESLint issues and remove this option for production.
+// 2. `typescript: { ignoreBuildErrors: true }`: It's recommended to resolve TypeScript errors and remove this option for production.
+// 3. `images: { unoptimized: true }`: Next.js Image Optimization is currently disabled. Vercel provides its own image optimization.
+//    You may want to review this setting to ensure optimal image handling.
+//    Consider removing `unoptimized: true` to leverage Vercel's image optimization,
+//    or confirm if this setting is intentional for your project's needs.
+//
+import { NextConfig } from 'next'
+import path from 'path'
+
+const nextConfig: NextConfig = {
+  /* config options here */
+  eslint: {
+    ignoreDuringBuilds: true,
+  },
+  typescript: {
+    ignoreBuildErrors: true,
+  },
+  // Disabling static export to support dynamic routes
+  // output: "export",
+  images: {
+    unoptimized: true,
+  },
+  webpack: (config) => {
+    config.resolve.alias['@'] = path.resolve(__dirname, './')
+    return config
+  }
+}
+
+export default nextConfig
diff --git a/oauth.py b/oauth.py
new file mode 100644
index 0000000..1dc4ff1
--- /dev/null
+++ b/oauth.py
@@ -0,0 +1,100 @@
+"""
+AT Protocol OAuth Client Implementation
+
+This module implements a full OAuth 2.0 client specifically adapted for AT Protocol authentication.
+It provides the core functionality for initiating OAuth flows, handling callbacks, and refreshing tokens.
+
+The implementation follows these OAuth 2.0 standards and specifications:
+- OAuth 2.0 Authorization Code Grant (RFC 6749)
+- Proof Key for Code Exchange (PKCE) (RFC 7636)
+- OAuth 2.0 DPoP (Demonstrating Proof of Possession) (draft)
+- OAuth 2.0 JWT Client Authentication (RFC 7523)
+- OAuth 2.0 Pushed Authorization Requests (PAR) (RFC 9126)
+
+The OAuth flow is implemented in three stages:
+1. Initialization (`oauth_init`): Resolve user identity, prepare PKCE challenge,
+   create a PAR request, and redirect to authorization server
+2. Completion (`oauth_complete`): Exchange authorization code for tokens,
+   store tokens, and return a signed auth token
+3. Refresh (`oauth_refresh`): Use refresh token to obtain new access token
+   before the current one expires
+
+Each stage involves secure cryptographic operations, endpoint discovery from the AT Protocol
+PDS (Personal Data Server), and proper token storage with automatic refresh scheduling.
+"""
+
+import base64
+from datetime import datetime, timezone, timedelta
+import hashlib
+import secrets
+from typing import Optional, Tuple
+from aio_statsd import TelegrafStatsdClient
+from aiohttp import ClientSession, FormData
+from jwcrypto import jwt, jwk
+from ulid import ULID
+from urllib.parse import urlparse, urlencode, parse_qsl, urlunparse
+import redis.asyncio as redis
+from sqlalchemy import select, update
+from sqlalchemy.ext.asyncio import (
+    async_sessionmaker,
+    AsyncSession,
+)
+from social.graze.aip.app.config import Settings, OAUTH_REFRESH_QUEUE
+from social.graze.aip.atproto.chain import (
+    ChainMiddlewareClient,
+    GenerateClaimAssertionMiddleware,
+    GenerateDpopMiddleware,
+    StatsdMiddleware,
+)
+from social.graze.aip.atproto.pds import (
+    oauth_authorization_server,
+    oauth_protected_resource,
+)
+from social.graze.aip.model.handles import Handle, upsert_handle_stmt
+from social.graze.aip.model.oauth import OAuthRequest, OAuthSession
+from social.graze.aip.resolve.handle import resolve_subject
+
+def generate_pkce_verifier() -> Tuple[str, str]:
+    """
+    Generate PKCE (Proof Key for Code Exchange) verifier and challenge.
+
+    This implements the PKCE extension to OAuth 2.0 (RFC 7636) to prevent
+    authorization code interception attacks. It creates a cryptographically
+    random verifier and its corresponding S256 challenge.
+
+    Returns:
+        Tuple[str, str]: A tuple containing (pkce_verifier, pkce_challenge)
+        - pkce_verifier: The secret verifier that will be sent in the token request
+        - pkce_challenge: The challenge derived from the verifier, sent in the authorization request
+
+    Security considerations:
+        - The verifier uses recommended 80 bytes of entropy (RFC 7636 section 4.1)
+        - The challenge uses SHA-256 for the code challenge method
+    """
+    pkce_token = secrets.token_urlsafe(80)
+
+    hashed = hashlib.sha256(pkce_token.encode("ascii")).digest()
+    encoded = base64.urlsafe_b64encode(hashed)
+    pkce_challenge = encoded.decode("ascii").rstrip("=")
+    return (pkce_token, pkce_challenge)
+
+
+async def oauth_init(
+    settings: Settings,
+    statsd_client: TelegrafStatsdClient,
+    http_session: ClientSession,
+    database_session_maker: async_sessionmaker[AsyncSession],
+    redis_session: redis.Redis,
+    subject: str,
+    destination: Optional[str] = None,
+):
+    """
+    Initialize OAuth flow with AT Protocol.
+
+    This function starts the OAuth authorization code flow:
+    1. Resolves the user's handle or DID to canonical form
+    2. Discovers the PDS (Personal Data Server) and authorization endpoints
+    3. Creates Pushed Authorization Request (PAR)
+    4. Generates PKCE verification codes
+    5. Stores request data for later verification
+    6. Returns a redirect URL to the authorization server
\ No newline at end of file
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..eeb3a8b
--- /dev/null
+++ b/package.json
@@ -0,0 +1,89 @@
+{
+  "name": "custom_bluesky_client",
+  "version": "0.1.0",
+  "private": true,
+  "workspaces": [
+    ".",
+    "worker"
+  ],
+  "scripts": {
+    "dev": "next dev",
+    "build": "next build",
+    "start": "next start",
+    "lint": "next lint"
+  },
+  "dependencies": {
+    "@atproto/api": "^0.15.6",
+    "@atproto/oauth-client-browser": "^0.3.16",
+    "@hookform/resolvers": "^3.10.0",
+    "@radix-ui/react-accordion": "^1.2.2",
+    "@radix-ui/react-alert-dialog": "^1.1.4",
+    "@radix-ui/react-aspect-ratio": "^1.1.1",
+    "@radix-ui/react-avatar": "^1.1.2",
+    "@radix-ui/react-checkbox": "^1.1.3",
+    "@radix-ui/react-collapsible": "^1.1.2",
+    "@radix-ui/react-context-menu": "^2.2.4",
+    "@radix-ui/react-dialog": "^1.1.4",
+    "@radix-ui/react-dropdown-menu": "^2.1.4",
+    "@radix-ui/react-hover-card": "^1.1.4",
+    "@radix-ui/react-label": "^2.1.1",
+    "@radix-ui/react-menubar": "^1.1.4",
+    "@radix-ui/react-navigation-menu": "^1.2.3",
+    "@radix-ui/react-popover": "^1.1.4",
+    "@radix-ui/react-progress": "^1.1.1",
+    "@radix-ui/react-radio-group": "^1.2.2",
+    "@radix-ui/react-scroll-area": "^1.2.2",
+    "@radix-ui/react-select": "^2.1.4",
+    "@radix-ui/react-separator": "^1.1.1",
+    "@radix-ui/react-slider": "^1.2.2",
+    "@radix-ui/react-slot": "^1.1.1",
+    "@radix-ui/react-switch": "^1.1.2",
+    "@radix-ui/react-tabs": "^1.1.2",
+    "@radix-ui/react-toast": "^1.2.4",
+    "@radix-ui/react-toggle": "^1.1.1",
+    "@radix-ui/react-toggle-group": "^1.1.1",
+    "@radix-ui/react-tooltip": "^1.1.6",
+    "caniuse-lite": "1.0.30001281",
+    "class-variance-authority": "^0.7.1",
+    "clsx": "^2.1.1",
+    "cmdk": "1.0.0",
+    "date-fns": "^3.6.0",
+    "embla-carousel-react": "^8.5.2",
+    "input-otp": "^1.4.2",
+    "lucide-react": "^0.364.0",
+    "next": "15.1.4",
+    "next-themes": "^0.4.4",
+    "react": "^19.0.0",
+    "react-day-picker": "8.10.1",
+    "react-dom": "^19.0.0",
+    "react-hook-form": "^7.54.2",
+    "react-resizable-panels": "^2.1.7",
+    "recharts": "^2.12.4",
+    "sonner": "^1.7.2",
+    "tailwind-merge": "^2.6.0",
+    "tailwindcss-animate": "^1.0.7",
+    "vaul": "^1.1.2",
+    "zod": "^3.24.1"
+  },
+  "devDependencies": {
+    "@cloudflare/workers-types": "^4.20250109.0",
+    "@eslint/eslintrc": "^3",
+    "@opennextjs/cloudflare": "^0.3.8",
+    "@types/node": "^20",
+    "@types/react": "^19",
+    "@types/react-dom": "^19",
+    "eslint": "^9",
+    "eslint-config-next": "15.1.4",
+    "postcss": "^8",
+    "tailwindcss": "^3.4.1",
+    "turbo": "^2.3.3",
+    "typescript": "^5",
+    "wrangler": "^3.63.0"
+  },
+  "resolutions": {
+    "**/react": "19.0.0",
+    "**/react-dom": "19.0.0",
+    "rollup-plugin-node-polyfills/rollup-plugin-inject": "npm:@rollup/plugin-inject@5.0.5",
+    "magic-string/sourcemap-codec": "npm:@jridgewell/sourcemap-codec@1.4.15"
+  }
+}
\ No newline at end of file
diff --git a/page.tsx b/page.tsx
new file mode 100644
index 0000000..6fd9d1d
--- /dev/null
+++ b/page.tsx
@@ -0,0 +1,9 @@
+"use client";
+
+import React from 'react';
+import SignInFlow from '../../components/auth/SignInFlow';
+
+export default function SignInPage() {
+  return <SignInFlow />;
+}
+
diff --git a/render.yaml b/render.yaml
new file mode 100644
index 0000000..2f6a90a
--- /dev/null
+++ b/render.yaml
@@ -0,0 +1,12 @@
+services:
+  - type: web
+    name: custom-bluesky-client
+    env: node: "20"
+    region: frankfurt
+    plan: free
+    buildCommand: "yarn install --frozen-lockfile && yarn build"
+    startCommand: "yarn start"
+    healthCheckPath: "/"
+    envVars:
+      - key: NODE_ENV
+        value: production
diff --git a/src/app/App.native.tsx b/src/app/App.native.tsx
new file mode 100644
index 0000000..ac985e5
--- /dev/null
+++ b/src/app/App.native.tsx
@@ -0,0 +1,243 @@
+import 'react-native-url-polyfill/auto'
+import '#/logger/sentry/setup'
+import '#/logger/bitdrift/setup'
+import '#/view/icons'
+
+import React, {useEffect, useState} from 'react'
+import {GestureHandlerRootView} from 'react-native-gesture-handler'
+import {RootSiblingParent} from 'react-native-root-siblings'
+import {
+  initialWindowMetrics,
+  SafeAreaProvider,
+} from 'react-native-safe-area-context'
+import * as ScreenOrientation from 'expo-screen-orientation'
+import * as SplashScreen from 'expo-splash-screen'
+import * as SystemUI from 'expo-system-ui'
+import {msg} from '@lingui/macro'
+import {useLingui} from '@lingui/react'
+import * as Sentry from '@sentry/react-native'
+
+import {KeyboardControllerProvider} from '#/lib/hooks/useEnableKeyboardController'
+import {QueryProvider} from '#/lib/react-query'
+import {Provider as StatsigProvider, tryFetchGates} from '#/lib/statsig/statsig'
+import {s} from '#/lib/styles'
+import {ThemeProvider} from '#/lib/ThemeContext'
+import I18nProvider from '#/locale/i18nProvider'
+import {logger} from '#/logger'
+import {isAndroid, isIOS} from '#/platform/detection'
+import {Provider as A11yProvider} from '#/state/a11y'
+import {Provider as MutedThreadsProvider} from '#/state/cache/thread-mutes'
+import {Provider as DialogStateProvider} from '#/state/dialogs'
+import {listenSessionDropped} from '#/state/events'
+import {
+  beginResolveGeolocation,
+  ensureGeolocationResolved,
+  Provider as GeolocationProvider,
+} from '#/state/geolocation'
+import {Provider as HomeBadgeProvider} from '#/state/home-badge'
+import {Provider as InvitesStateProvider} from '#/state/invites'
+import {Provider as LightboxStateProvider} from '#/state/lightbox'
+import {MessagesProvider} from '#/state/messages'
+import {Provider as ModalStateProvider} from '#/state/modals'
+import {init as initPersistedState} from '#/state/persisted'
+import {Provider as PrefsStateProvider} from '#/state/preferences'
+import {Provider as LabelDefsProvider} from '#/state/preferences/label-defs'
+import {Provider as ModerationOptsProvider} from '#/state/preferences/moderation-opts'
+import {Provider as UnreadNotifsProvider} from '#/state/queries/notifications/unread'
+import {
+  Provider as SessionProvider,
+  SessionAccount,
+  useSession,
+  useSessionApi,
+} from '#/state/session'
+import {readLastActiveAccount} from '#/state/session/util'
+import {Provider as ShellStateProvider} from '#/state/shell'
+import {Provider as ComposerProvider} from '#/state/shell/composer'
+import {Provider as LightStatusBarProvider} from '#/state/shell/light-status-bar'
+import {Provider as LoggedOutViewProvider} from '#/state/shell/logged-out'
+import {Provider as ProgressGuideProvider} from '#/state/shell/progress-guide'
+import {Provider as SelectedFeedProvider} from '#/state/shell/selected-feed'
+import {Provider as StarterPackProvider} from '#/state/shell/starter-pack'
+import {Provider as HiddenRepliesProvider} from '#/state/threadgate-hidden-replies'
+import {Provider as TrendingConfigProvider} from '#/state/trending-config'
+import {TestCtrls} from '#/view/com/testing/TestCtrls'
+import {Provider as VideoVolumeProvider} from '#/view/com/util/post-embeds/VideoVolumeContext'
+import * as Toast from '#/view/com/util/Toast'
+import {Shell} from '#/view/shell'
+import {ThemeProvider as Alf} from '#/alf'
+import {useColorModeTheme} from '#/alf/util/useColorModeTheme'
+import {Provider as ContextMenuProvider} from '#/components/ContextMenu'
+import {NuxDialogs} from '#/components/dialogs/nuxs'
+import {useStarterPackEntry} from '#/components/hooks/useStarterPackEntry'
+import {Provider as IntentDialogProvider} from '#/components/intents/IntentDialogs'
+import {Provider as PortalProvider} from '#/components/Portal'
+import {Splash} from '#/Splash'
+import {BottomSheetProvider} from '../modules/bottom-sheet'
+import {BackgroundNotificationPreferencesProvider} from '../modules/expo-background-notification-handler/src/BackgroundNotificationHandlerProvider'
+
+SplashScreen.preventAutoHideAsync()
+if (isIOS) {
+  SystemUI.setBackgroundColorAsync('black')
+}
+if (isAndroid) {
+  // iOS is handled by the config plugin -sfn
+  ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT_UP)
+}
+
+/**
+ * Begin geolocation ASAP
+ */
+beginResolveGeolocation()
+
+function InnerApp() {
+  const [isReady, setIsReady] = React.useState(false)
+  const {currentAccount} = useSession()
+  const {resumeSession} = useSessionApi()
+  const theme = useColorModeTheme()
+  const {_} = useLingui()
+
+  const hasCheckedReferrer = useStarterPackEntry()
+
+  // init
+  useEffect(() => {
+    async function onLaunch(account?: SessionAccount) {
+      try {
+        if (account) {
+          await resumeSession(account)
+        } else {
+          await tryFetchGates(undefined, 'prefer-fresh-gates')
+        }
+      } catch (e) {
+        logger.error(`session: resume failed`, {message: e})
+      } finally {
+        setIsReady(true)
+      }
+    }
+    const account = readLastActiveAccount()
+    onLaunch(account)
+  }, [resumeSession])
+
+  useEffect(() => {
+    return listenSessionDropped(() => {
+      Toast.show(
+        _(msg`Sorry! Your session expired. Please sign in again.`),
+        'info',
+      )
+    })
+  }, [_])
+
+  return (
+    <Alf theme={theme}>
+      <ThemeProvider theme={theme}>
+        <ContextMenuProvider>
+          <Splash isReady={isReady && hasCheckedReferrer}>
+            <RootSiblingParent>
+              <VideoVolumeProvider>
+                <React.Fragment
+                  // Resets the entire tree below when it changes:
+                  key={currentAccount?.did}>
+                  <QueryProvider currentDid={currentAccount?.did}>
+                    <ComposerProvider>
+                      <StatsigProvider>
+                        <MessagesProvider>
+                          {/* LabelDefsProvider MUST come before ModerationOptsProvider */}
+                          <LabelDefsProvider>
+                            <ModerationOptsProvider>
+                              <LoggedOutViewProvider>
+                                <SelectedFeedProvider>
+                                  <HiddenRepliesProvider>
+                                    <HomeBadgeProvider>
+                                      <UnreadNotifsProvider>
+                                        <BackgroundNotificationPreferencesProvider>
+                                          <MutedThreadsProvider>
+                                            <ProgressGuideProvider>
+                                              <TrendingConfigProvider>
+                                                <GestureHandlerRootView
+                                                  style={s.h100pct}>
+                                                  <IntentDialogProvider>
+                                                    <TestCtrls />
+                                                    <Shell />
+                                                    <NuxDialogs />
+                                                  </IntentDialogProvider>
+                                                </GestureHandlerRootView>
+                                              </TrendingConfigProvider>
+                                            </ProgressGuideProvider>
+                                          </MutedThreadsProvider>
+                                        </BackgroundNotificationPreferencesProvider>
+                                      </UnreadNotifsProvider>
+                                    </HomeBadgeProvider>
+                                  </HiddenRepliesProvider>
+                                </SelectedFeedProvider>
+                              </LoggedOutViewProvider>
+                            </ModerationOptsProvider>
+                          </LabelDefsProvider>
+                        </MessagesProvider>
+                      </StatsigProvider>
+                    </ComposerProvider>
+                  </QueryProvider>
+                </React.Fragment>
+              </VideoVolumeProvider>
+            </RootSiblingParent>
+          </Splash>
+        </ContextMenuProvider>
+      </ThemeProvider>
+    </Alf>
+  )
+}
+
+function App() {
+  const [isReady, setReady] = useState(false)
+
+  React.useEffect(() => {
+    Promise.all([initPersistedState(), ensureGeolocationResolved()]).then(() =>
+      setReady(true),
+    )
+  }, [])
+
+  if (!isReady) {
+    return null
+  }
+
+  /*
+   * NOTE: only nothing here can depend on other data or session state, since
+   * that is set up in the InnerApp component above.
+   */
+  return (
+    <GeolocationProvider>
+      <A11yProvider>
+        <KeyboardControllerProvider>
+          <SessionProvider>
+            <PrefsStateProvider>
+              <I18nProvider>
+                <ShellStateProvider>
+                  <InvitesStateProvider>
+                    <ModalStateProvider>
+                      <DialogStateProvider>
+                        <LightboxStateProvider>
+                          <PortalProvider>
+                            <BottomSheetProvider>
+                              <StarterPackProvider>
+                                <SafeAreaProvider
+                                  initialMetrics={initialWindowMetrics}>
+                                  <LightStatusBarProvider>
+                                    <InnerApp />
+                                  </LightStatusBarProvider>
+                                </SafeAreaProvider>
+                              </StarterPackProvider>
+                            </BottomSheetProvider>
+                          </PortalProvider>
+                        </LightboxStateProvider>
+                      </DialogStateProvider>
+                    </ModalStateProvider>
+                  </InvitesStateProvider>
+                </ShellStateProvider>
+              </I18nProvider>
+            </PrefsStateProvider>
+          </SessionProvider>
+        </KeyboardControllerProvider>
+      </A11yProvider>
+    </GeolocationProvider>
+  )
+}
+
+export default Sentry.wrap(App)
diff --git a/src/app/browser/page.tsx b/src/app/browser/page.tsx
new file mode 100644
index 0000000..be1225d
--- /dev/null
+++ b/src/app/browser/page.tsx
@@ -0,0 +1,168 @@
+"use client";
+
+import React, { useState, useContext } from 'react'; // Added useContext
+import AppLayout from '@/components/AppLayout';
+import { BrowserAudioContext } from '../../contexts/BrowserAudioContext'; // Adjust path
+
+const categorizedLinks = [
+  {
+    category: "AI Tools",
+    links: [
+      { name: "ChatGPT", url: "https://chat.openai.com" },
+      { name: "Google Gemini", url: "https://gemini.google.com" },
+      { name: "Anthropic Claude", url: "https://claude.ai" },
+      { name: "WebSim", url: "https://websim.ai" },
+      { "name": "Google Jules", "url": "https://ai.google/" }
+    ],
+  },
+  {
+    category: "Social",
+    links: [
+      { name: "YouTube", url: "https://youtube.com" },
+      { name: "Soundcloud", url: "https://soundcloud.com" },
+      { name: "BlueSky", url: "https://bsky.app" },
+      { name: "Discord", url: "https://discord.com/login" },
+    ],
+  },
+  {
+    category: "Payment",
+    links: [
+      { name: "CashApp", url: "https://cash.app" },
+      { name: "Venmo", url: "https://venmo.com" },
+      { name: "Zelle", url: "https://zellepay.com" },
+      { name: "Paypal", url: "https://paypal.com" },
+    ],
+  },
+  {
+    category: "BlueSky Tools",
+    links: [
+      { name: "ClearSky", url: "https://clearsky.app.placeholder" },
+      { name: "Graze Feed Builder", url: "https://graze.placeholder.url" }
+    ]
+  },
+  {
+    category: "Games",
+    links: [
+      { name: "Bored Button", url: "https://www.boredbutton.com" },
+      { name: "Button Bass", url: "https://www.buttonbass.com" }
+    ]
+  }
+];
+
+// Helper function to determine embed type and URL for audio/video
+const getEmbedAudioVideoUrl = (url: string): string | null => {
+  if (!url) return null;
+  try {
+    const urlObj = new URL(url);
+    if (urlObj.hostname.includes('youtube.com') || urlObj.hostname.includes('youtu.be')) {
+      let videoId = urlObj.searchParams.get('v');
+      if (urlObj.hostname.includes('youtu.be')) videoId = urlObj.pathname.substring(1);
+      // Add autoplay=1 for immediate play in the persistent iframe
+      return videoId ? `https://www.youtube.com/embed/${videoId}?autoplay=1` : null;
+    }
+    if (urlObj.hostname.includes('soundcloud.com')) {
+      // Add autoplay=true, visual=false for background audio-like experience
+      return `https://w.soundcloud.com/player/?url=${encodeURIComponent(url)}&auto_play=true&visual=false&hide_related=true&show_comments=false&show_user=false&show_reposts=false`;
+    }
+    // Could add more specific audio/video embed handlers here if needed
+  } catch (e) {
+    console.error("Error parsing URL for audio/video embedding:", e);
+    return null;
+  }
+  return null; // Not a special audio/video URL for custom embedding, will use original URL
+};
+
+
+const BrowserPage: React.FC = () => {
+  const browserAudioCtx = useContext(BrowserAudioContext);
+
+  if (!browserAudioCtx) {
+    return <div>Loading audio context...</div>; // Or some other error/loading state
+  }
+  const { audioUrl: currentAudioUrl, setAudioUrl, setIsPlaying, isPlaying } = browserAudioCtx;
+
+  const handleLinkSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {
+    const selectedUrl = event.target.value;
+    if (selectedUrl) {
+      const specialEmbedUrl = getEmbedAudioVideoUrl(selectedUrl);
+      if (specialEmbedUrl) {
+        setAudioUrl(specialEmbedUrl);
+      } else {
+        // For general links, still set them on the audioUrl to be loaded in the persistent iframe
+        // This makes the persistent iframe the main content viewer for this browser page.
+        setAudioUrl(selectedUrl);
+      }
+      setIsPlaying(true);
+    }
+  };
+
+  const handleStopAudio = () => {
+    setAudioUrl(null); // Or set to "about:blank"
+    setIsPlaying(false);
+  };
+
+  return (
+    <AppLayout currentPage="Browser" showSidebarButton={true}>
+      <div className="flex flex-col h-screen">
+        <div className="p-4 bg-gray-900 text-white">
+          <div className="flex flex-wrap gap-4 items-center mb-4">
+            {categorizedLinks.map((categoryGroup) => (
+              <div key={categoryGroup.category} className="flex flex-col">
+                <label htmlFor={`${categoryGroup.category}-select`} className="mb-1 text-sm font-medium text-gray-300">
+                  {categoryGroup.category}:
+                </label>
+                <select
+                  id={`${categoryGroup.category}-select`}
+                  onChange={handleLinkSelection}
+                  className="bg-gray-700 text-white p-2 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
+                  defaultValue=""
+                >
+                  <option value="" disabled>Select a {categoryGroup.category.replace(/s$/, '')} link...</option>
+                  {categoryGroup.links.map((link) => (
+                    <option key={link.name} value={link.url}>
+                      {link.name}
+                    </option>
+                  ))}
+                </select>
+              </div>
+            ))}
+          </div>
+          <div className="flex items-center justify-between_temp mb-2"> {/* temp class */}
+            {currentAudioUrl && isPlaying && (
+              <button
+                onClick={handleStopAudio}
+                className="px-4 py-2 bg-red-600 hover:bg-red-500 text-white rounded-md text-sm"
+              >
+                Stop Audio/Video
+              </button>
+            )}
+          </div>
+          {currentAudioUrl && (
+             <div className="text-xs text-gray-400 truncate p-2 bg-gray-800 rounded-md">
+               Current source: {currentAudioUrl} {isPlaying ? "(Playing)" : "(Paused/Stopped)"}
+             </div>
+          )}
+          {!currentAudioUrl && (
+            <div className="text-center py-10 text-gray-500">
+              <p>Select a link from the dropdowns above to start browsing or listening.</p>
+              <p>The content will appear in a persistent player within the app layout.</p>
+            </div>
+          )}
+        </div>
+        {/* The main iframe for displaying content is now managed by AppLayout */}
+        {/* This area can be used for additional controls or information if needed */}
+        {/* Or it could be intentionally left blank if the AppLayout iframe is fullscreen on this page */}
+         <div className="flex-grow bg-black">
+          {/* This is a placeholder for where the iframe content *would* have been.
+              Since the iframe is now in AppLayout, this page might not need its own large content area
+              if the AppLayout iframe is meant to be the primary view here.
+              If AppLayout iframe is a small mini-player, then this page would need its own iframe.
+              The current setup makes AppLayout's iframe the main viewer on /browser.
+          */}
+        </div>
+      </div>
+    </AppLayout>
+  );
+};
+
+export default BrowserPage;
diff --git a/src/app/bsky-settings/page.tsx b/src/app/bsky-settings/page.tsx
new file mode 100644
index 0000000..51925f4
--- /dev/null
+++ b/src/app/bsky-settings/page.tsx
@@ -0,0 +1,404 @@
+"use client";
+
+import React, { useState, useEffect, useCallback } from 'react';
+import AppLayout from '@/components/AppLayout';
+import { useAuth } from '@/contexts/AuthContext';
+import { getPreferences, setPreferences, getProfile, updateProfileDetails } from '@/lib/bskyService';
+import type { AppBskyActorDefs } from '@atproto/api';
+
+type Preference =
+  | AppBskyActorDefs.AdultContentPref
+  | AppBskyActorDefs.ContentLabelPref
+  | AppBskyActorDefs.SavedFeedsPref
+  | AppBskyActorDefs.PersonalDetailsPref
+  | AppBskyActorDefs.FeedViewPref
+  | AppBskyActorDefs.ThreadViewPref
+  | AppBskyActorDefs.ViewerPref
+  | { $type: string; [k: string]: unknown };
+
+const BlueSkySettingsPage: React.FC = () => {
+  const { agent, isAuthenticated } = useAuth();
+  const [preferences, setPreferencesState] = useState<Preference[] | null>(null);
+  const [isLoading, setIsLoading] = useState<boolean>(true);
+  const [error, setError] = useState<string | null>(null);
+  const [isSaving, setIsSaving] = useState<boolean>(false);
+
+  // --- Synced Preferences State ---
+  const [adultContentEnabled, setAdultContentEnabled] = useState<boolean>(false);
+  const [feedViewHideReplies, setFeedViewHideReplies] = useState<boolean>(false);
+  const [feedViewHideReposts, setFeedViewHideReposts] = useState<boolean>(false);
+  const [feedViewHideQuotePosts, setFeedViewHideQuotePosts] = useState<boolean>(false);
+  const [feedViewLabMergeEnabled, setFeedViewLabMergeEnabled] = useState<boolean>(false);
+  const [feedViewAutoplayAvatars, setFeedViewAutoplayAvatars] = useState<boolean | undefined>(undefined);
+  const [feedViewAutoplayVideos, setFeedViewAutoplayVideos] = useState<boolean | undefined>(undefined);
+  const [threadViewSort, setThreadViewSort] = useState<string>('oldest');
+  const [threadViewPrioritizeFollowed, setThreadViewPrioritizeFollowed] = useState<boolean>(true);
+  const [bskyDarkThemeEnabled, setBskyDarkThemeEnabled] = useState<boolean | undefined>(undefined);
+  const [contentLabelPreferences, setContentLabelPreferences] = useState<AppBskyActorDefs.ContentLabelPref[] | undefined>(undefined);
+  const [bskyReducedMotion, setBskyReducedMotion] = useState<boolean | undefined>(undefined); // Synced Reduced Motion
+
+  // --- Profile-related State (Synced) ---
+  const [contentLanguages, setContentLanguages] = useState<string[]>([]);
+  const [initialContentLanguages, setInitialContentLanguages] = useState<string[]>([]);
+
+  // --- Local App State (Not Synced) ---
+  const LOCAL_THEME_KEY = 'ourApp_bskyDisplayTheme';
+  const LOCAL_BSKY_FONT_SIZE_KEY = 'ourApp_bskyAccessibilitySettings_fontSize';
+  const defaultLocalBackgroundColor = '#1A202C';
+  const defaultLocalTextColor = '#E2E8F0';
+  const [localCustomTheme, setLocalCustomTheme] = useState<{ backgroundColor: string, textColor: string } | null>(null);
+  const [inputBackgroundColor, setInputBackgroundColor] = useState<string>(defaultLocalBackgroundColor);
+  const [inputTextColor, setInputTextColor] = useState<string>(defaultLocalTextColor);
+  const [localBskyFontSize, setLocalBskyFontSize] = useState<'small' | 'medium' | 'large'>('medium');
+  const [initialLocalBskyFontSize, setInitialLocalBskyFontSize] = useState<'small' | 'medium' | 'large'>('medium');
+
+
+  const commonLanguages = [
+    { code: 'en', name: 'English' }, { code: 'es', name: 'Spanish' }, { code: 'fr', name: 'French' },
+    { code: 'de', name: 'German' }, { code: 'ja', name: 'Japanese' }, { code: 'pt', name: 'Portuguese' },
+    { code: 'it', name: 'Italian' }, { code: 'ko', name: 'Korean' }, { code: 'ru', name: 'Russian' },
+    { code: 'zh', name: 'Chinese' },
+  ];
+
+  const findPreference = useCallback(<T extends Preference>(prefs: Preference[] | null, type: T['$type']): T | undefined => {
+    if (!prefs) return undefined;
+    return prefs.find(p => p.$type === type) as T | undefined;
+  }, []);
+
+  useEffect(() => {
+    const savedTheme = localStorage.getItem(LOCAL_THEME_KEY);
+    if (savedTheme) {
+      try {
+        const parsedTheme = JSON.parse(savedTheme);
+        if (parsedTheme.backgroundColor && parsedTheme.textColor) {
+          setLocalCustomTheme(parsedTheme);
+          setInputBackgroundColor(parsedTheme.backgroundColor);
+          setInputTextColor(parsedTheme.textColor);
+        }
+      } catch (e) { console.error("Error parsing saved local theme:", e); }
+    }
+    const savedFontSize = localStorage.getItem(LOCAL_BSKY_FONT_SIZE_KEY) as ('small' | 'medium' | 'large') | null;
+    if (savedFontSize && ['small', 'medium', 'large'].includes(savedFontSize)) {
+      setLocalBskyFontSize(savedFontSize);
+      setInitialLocalBskyFontSize(savedFontSize);
+    }
+
+    const fetchBskyData = async () => {
+      if (!isAuthenticated || !agent) {
+        setPreferencesState(null); setContentLanguages([]); setInitialContentLanguages([]);
+        setAdultContentEnabled(false); setFeedViewHideReplies(false); setFeedViewHideReposts(false);
+        setFeedViewHideQuotePosts(false); setFeedViewLabMergeEnabled(false); setThreadViewSort('oldest');
+        setThreadViewPrioritizeFollowed(true); setBskyDarkThemeEnabled(undefined);
+        setFeedViewAutoplayAvatars(undefined); setFeedViewAutoplayVideos(undefined);
+        setContentLabelPreferences(undefined); setBskyReducedMotion(undefined);
+        setIsLoading(false); return;
+      }
+
+      setIsLoading(true); setError(null);
+      try {
+        const [fetchedPreferences, userProfile] = await Promise.all([ getPreferences(agent), getProfile(agent, agent.session!.handle!) ]);
+        setPreferencesState(fetchedPreferences);
+        setContentLanguages(userProfile.languages || []);
+        setInitialContentLanguages(userProfile.languages || []);
+
+        const adultContentPref = findPreference<AppBskyActorDefs.AdultContentPref>(fetchedPreferences, 'app.bsky.actor.defs#adultContent');
+        setAdultContentEnabled(adultContentPref?.enabled || false);
+
+        const feedViewPref = findPreference<AppBskyActorDefs.FeedViewPref>(fetchedPreferences, 'app.bsky.actor.defs#feedView');
+        setFeedViewHideReplies(feedViewPref?.hideReplies || false);
+        setFeedViewHideReposts(feedViewPref?.hideReposts || false);
+        setFeedViewHideQuotePosts(feedViewPref?.hideQuotePosts || false);
+        setFeedViewLabMergeEnabled((feedViewPref as any)?.lab_mergeFeedEnabled || false);
+        setFeedViewAutoplayAvatars((feedViewPref as any)?.autoplayAvatars === undefined ? false : (feedViewPref as any)?.autoplayAvatars);
+        setFeedViewAutoplayVideos((feedViewPref as any)?.autoplayVideos === undefined ? false : (feedViewPref as any)?.autoplayVideos);
+
+        const threadViewPref = findPreference<AppBskyActorDefs.ThreadViewPref>(fetchedPreferences, 'app.bsky.actor.defs#threadView');
+        setThreadViewSort(threadViewPref?.sort || 'oldest');
+        setThreadViewPrioritizeFollowed(threadViewPref?.prioritizeFollowedUsers !== undefined ? threadViewPref.prioritizeFollowedUsers : true);
+
+        const viewerPref = findPreference<AppBskyActorDefs.ViewerPref>(fetchedPreferences, 'app.bsky.actor.defs#viewer');
+        setBskyDarkThemeEnabled((viewerPref && typeof (viewerPref as any).darkThemeEnabled === 'boolean') ? (viewerPref as any).darkThemeEnabled : false);
+        setBskyReducedMotion((viewerPref && typeof (viewerPref as any).reducedMotion === 'boolean') ? (viewerPref as any).reducedMotion : false); // Initialize reduced motion
+
+        const labelPrefs = fetchedPreferences.filter(p => p.$type === 'app.bsky.actor.defs#contentLabel') as AppBskyActorDefs.ContentLabelPref[];
+        setContentLabelPreferences(labelPrefs.length > 0 ? labelPrefs : undefined);
+      } catch (err) {
+        console.error("Error fetching BlueSky data:", err);
+        setError(err instanceof Error ? err.message : "Unknown error fetching BlueSky data.");
+      } finally {
+        setIsLoading(false);
+      }
+    };
+    fetchBskyData();
+  }, [agent, isAuthenticated, findPreference]);
+
+  const handleContentLanguageChange = (langCode: string, isChecked: boolean) => {
+    setContentLanguages(prev => isChecked ? [...prev, langCode] : prev.filter(l => l !== langCode));
+  };
+
+  const handleSaveChanges = async () => {
+    if (!agent) { alert("Not authenticated."); return; }
+    setIsSaving(true); setError(null);
+    let preferencesChanged = false;
+    let profileLanguagesChanged = false;
+    let localSettingsChanged = false;
+    let currentPrefsArray = preferences ? [...preferences] : [];
+
+    // --- Synced Preferences ---
+    // Adult Content
+    let adultPref = findPreference<AppBskyActorDefs.AdultContentPref>(currentPrefsArray, 'app.bsky.actor.defs#adultContent');
+    if (adultPref) { if (adultPref.enabled !== adultContentEnabled) { adultPref.enabled = adultContentEnabled; preferencesChanged = true; } }
+    else { adultPref = { $type: 'app.bsky.actor.defs#adultContent', enabled: adultContentEnabled }; currentPrefsArray.push(adultPref); preferencesChanged = true; }
+
+    // Feed View
+    let feedViewPref = findPreference<AppBskyActorDefs.FeedViewPref>(currentPrefsArray, 'app.bsky.actor.defs#feedView');
+    const newFeedViewValues: Partial<AppBskyActorDefs.FeedViewPref & { lab_mergeFeedEnabled?: boolean, autoplayAvatars?: boolean, autoplayVideos?: boolean }> = {
+      hideReplies: feedViewHideReplies, hideReposts: feedViewHideReposts, hideQuotePosts: feedViewHideQuotePosts,
+      lab_mergeFeedEnabled: feedViewLabMergeEnabled, autoplayAvatars: feedViewAutoplayAvatars, autoplayVideos: feedViewAutoplayVideos,
+    };
+    if (feedViewPref) {
+      let changed = false;
+      for (const key in newFeedViewValues) { if ((feedViewPref as any)[key] !== (newFeedViewValues as any)[key]) { (feedViewPref as any)[key] = (newFeedViewValues as any)[key]; changed = true; } }
+      if (changed) preferencesChanged = true;
+    } else {
+      feedViewPref = { $type: 'app.bsky.actor.defs#feedView', ...newFeedViewValues } as AppBskyActorDefs.FeedViewPref;
+      currentPrefsArray.push(feedViewPref); preferencesChanged = true;
+    }
+
+    // Thread View
+    let threadViewPref = findPreference<AppBskyActorDefs.ThreadViewPref>(currentPrefsArray, 'app.bsky.actor.defs#threadView');
+    const newThreadViewValues = { sort: threadViewSort, prioritizeFollowedUsers: threadViewPrioritizeFollowed };
+    if (threadViewPref) { if (threadViewPref.sort !== newThreadViewValues.sort || threadViewPref.prioritizeFollowedUsers !== newThreadViewValues.prioritizeFollowedUsers) { Object.assign(threadViewPref, newThreadViewValues); preferencesChanged = true; } }
+    else { threadViewPref = { $type: 'app.bsky.actor.defs#threadView', ...newThreadViewValues }; currentPrefsArray.push(threadViewPref); preferencesChanged = true; }
+
+    // Viewer (Dark Theme & Reduced Motion)
+    if (bskyDarkThemeEnabled !== undefined || bskyReducedMotion !== undefined) {
+      let viewerPref = findPreference<AppBskyActorDefs.ViewerPref>(currentPrefsArray, 'app.bsky.actor.defs#viewer');
+      if (!viewerPref) {
+        viewerPref = { $type: 'app.bsky.actor.defs#viewer' } as AppBskyActorDefs.ViewerPref;
+        currentPrefsArray.push(viewerPref);
+      }
+      if (bskyDarkThemeEnabled !== undefined && (viewerPref as any).darkThemeEnabled !== bskyDarkThemeEnabled) {
+        (viewerPref as any).darkThemeEnabled = bskyDarkThemeEnabled; preferencesChanged = true;
+      }
+      if (bskyReducedMotion !== undefined && (viewerPref as any).reducedMotion !== bskyReducedMotion) {
+        (viewerPref as any).reducedMotion = bskyReducedMotion; preferencesChanged = true;
+      }
+    }
+
+    // --- Profile Content Languages ---
+    if (JSON.stringify(contentLanguages.sort()) !== JSON.stringify(initialContentLanguages.sort())) {
+      profileLanguagesChanged = true;
+    }
+
+    // --- Local Storage Settings ---
+    if (localBskyFontSize !== initialLocalBskyFontSize) {
+      localSettingsChanged = true;
+    }
+
+    try {
+      let settingsSavedMsg = "";
+      if (preferencesChanged) {
+        const finalPreferencesToSave = currentPrefsArray.map(p => {
+          switch (p.$type) {
+            case 'app.bsky.actor.defs#adultContent': return p as AppBskyActorDefs.AdultContentPref;
+            case 'app.bsky.actor.defs#feedView': return p as AppBskyActorDefs.FeedViewPref;
+            case 'app.bsky.actor.defs#threadView': return p as AppBskyActorDefs.ThreadViewPref;
+            case 'app.bsky.actor.defs#viewer': return p as AppBskyActorDefs.ViewerPref;
+            default: return p;
+          }
+        }).filter(p => p.$type);
+        await setPreferences(agent, finalPreferencesToSave);
+        settingsSavedMsg += "Synced preferences saved. ";
+      }
+      if (profileLanguagesChanged) {
+        await updateProfileDetails(agent, { languages: contentLanguages });
+        settingsSavedMsg += "Content languages updated. ";
+      }
+      if (localSettingsChanged) {
+        localStorage.setItem(LOCAL_BSKY_FONT_SIZE_KEY, localBskyFontSize);
+        setInitialLocalBskyFontSize(localBskyFontSize); // Update initial state after save
+        settingsSavedMsg += "Local font size saved. ";
+      }
+
+      if (!settingsSavedMsg) { alert("No changes to save."); } else { alert(settingsSavedMsg.trim()); }
+
+      // Re-fetch synced data if anything was potentially changed on server
+      if (preferencesChanged || profileLanguagesChanged) {
+        const [refreshedPreferences, refreshedProfile] = await Promise.all([ getPreferences(agent), getProfile(agent, agent.session!.handle!) ]);
+        setPreferencesState(refreshedPreferences);
+        setContentLanguages(refreshedProfile.languages || []);
+        setInitialContentLanguages(refreshedProfile.languages || []);
+
+        const adultRef = findPreference<AppBskyActorDefs.AdultContentPref>(refreshedPreferences, 'app.bsky.actor.defs#adultContent');
+        setAdultContentEnabled(adultRef?.enabled || false);
+        const feedViewRef = findPreference<AppBskyActorDefs.FeedViewPref>(refreshedPreferences, 'app.bsky.actor.defs#feedView');
+        setFeedViewHideReplies(feedViewRef?.hideReplies || false); setFeedViewHideReposts(feedViewRef?.hideReposts || false);
+        setFeedViewHideQuotePosts(feedViewRef?.hideQuotePosts || false); setFeedViewLabMergeEnabled((feedViewRef as any)?.lab_mergeFeedEnabled || false);
+        setFeedViewAutoplayAvatars((feedViewRef as any)?.autoplayAvatars === undefined ? false : (feedViewRef as any)?.autoplayAvatars);
+        setFeedViewAutoplayVideos((feedViewRef as any)?.autoplayVideos === undefined ? false : (feedViewRef as any)?.autoplayVideos);
+        const threadViewRef = findPreference<AppBskyActorDefs.ThreadViewPref>(refreshedPreferences, 'app.bsky.actor.defs#threadView');
+        setThreadViewSort(threadViewRef?.sort || 'oldest');
+        setThreadViewPrioritizeFollowed(threadViewRef?.prioritizeFollowedUsers !== undefined ? threadViewRef.prioritizeFollowedUsers : true);
+        const viewerRef = findPreference<AppBskyActorDefs.ViewerPref>(refreshedPreferences, 'app.bsky.actor.defs#viewer');
+        setBskyDarkThemeEnabled( (viewerRef && typeof (viewerRef as any).darkThemeEnabled === 'boolean') ? (viewerRef as any).darkThemeEnabled : false );
+        setBskyReducedMotion((viewerRef && typeof (viewerRef as any).reducedMotion === 'boolean') ? (viewerRef as any).reducedMotion : false);
+        const labelPrefsRefreshed = refreshedPreferences.filter(p => p.$type === 'app.bsky.actor.defs#contentLabel') as AppBskyActorDefs.ContentLabelPref[];
+        setContentLabelPreferences(labelPrefsRefreshed.length > 0 ? labelPrefsRefreshed : undefined);
+      }
+    } catch (err) {
+      const errorMsg = err instanceof Error ? err.message : "Unknown error during save.";
+      setError(errorMsg); alert(`Error saving settings: ${errorMsg}`);
+    } finally {
+      setIsSaving(false);
+    }
+  };
+
+  if (isLoading) return <AppLayout currentPage="BlueSky Settings" showHeader={true} showSidebarButton={true}><div className="p-4 text-white">Loading settings...</div></AppLayout>;
+  if (error && !preferences && !isAuthenticated && !agent?.session) return <AppLayout currentPage="BlueSky Settings" showHeader={true} showSidebarButton={true}><div className="p-4 text-red-400">Error: {error} <p>Please ensure you are logged in.</p></div></AppLayout>;
+  if (!isAuthenticated || !agent) return <AppLayout currentPage="BlueSky Settings" showHeader={true} showSidebarButton={true}><div className="p-4 text-white">Please log in to manage BlueSky settings.</div></AppLayout>;
+
+  return (
+    <AppLayout currentPage="BlueSky Settings" showHeader={true} showSidebarButton={true}>
+      <div className="p-4 md:p-6 text-white space-y-8 max-w-3xl mx-auto">
+        <div>
+          <h1 className="text-2xl font-bold mb-1">BlueSky Settings</h1>
+          <p className="text-sm text-gray-400">Manage your BlueSky content, feed, and app preferences.</p>
+        </div>
+
+        {error && <div className="p-3 bg-red-900/50 border border-red-700 text-red-300 rounded-md text-sm">{error}</div>}
+
+        {/* Account Settings Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Account Information</h2>
+          {isAuthenticated && agent?.session ? (
+            <div className="space-y-2 text-sm">
+              <div><span className="font-semibold text-gray-300">Handle: </span><span className="text-gray-100 break-all">@{agent.session.handle}</span></div>
+              <div><span className="font-semibold text-gray-300">DID: </span><span className="text-gray-100 break-all">{agent.session.did}</span></div>
+              <div><span className="font-semibold text-gray-300">Email: </span><span className="text-gray-100 break-all">{agent.session.email || '(Not available)'}</span></div>
+              <div><span className="font-semibold text-gray-300">PDS Endpoint: </span><span className="text-gray-100 break-all">{agent.service.toString()}</span></div>
+              <div className="pt-2"><p className="text-xs text-gray-400">For critical account settings such as changing your handle, updating your email, managing your password, or deleting your account, please use the <a href="https://bsky.app" target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:underline ml-1">official BlueSky application or website</a>.</p></div>
+            </div>
+          ) : (<p className="text-gray-400">Log in to view account details.</p>)}
+        </div>
+
+        {/* Accessibility Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Accessibility</h2>
+          {/* Synced Reduced Motion Subsection */}
+          {bskyReducedMotion !== undefined ? (
+            <div className="flex items-center justify-between mb-4">
+              <div>
+                <label htmlFor="bskyReducedMotionToggle" className="font-medium text-gray-200">Enable BlueSky Reduced Motion</label>
+                <p className="text-xs text-gray-400">Syncs with BlueSky's setting to reduce animations.</p>
+              </div>
+              <button id="bskyReducedMotionToggle" onClick={() => setBskyReducedMotion(!bskyReducedMotion)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${bskyReducedMotion ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={bskyReducedMotion}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${bskyReducedMotion ? 'translate-x-6' : 'translate-x-1'}`}/></button>
+            </div>
+          ) : (<p className="text-sm text-gray-400 mb-4">Loading synced accessibility settings...</p>)}
+
+          {/* Local Font Size Subsection */}
+          <div>
+            <label htmlFor="localFontSizeSelect" className="font-medium text-gray-200 block mb-1">Font Size for BlueSky Content (Local)</label>
+            <p className="text-xs text-gray-400 mb-2">This setting is saved in your browser and affects this app only.</p>
+            <select
+              id="localFontSizeSelect"
+              value={localBskyFontSize}
+              onChange={(e) => setLocalBskyFontSize(e.target.value as 'small' | 'medium' | 'large')}
+              className="bg-gray-700 text-white p-2 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-sm w-full sm:w-auto"
+            >
+              <option value="small">Small</option>
+              <option value="medium">Medium</option>
+              <option value="large">Large</option>
+            </select>
+          </div>
+        </div>
+
+        {/* Content Filtering Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Content Filtering</h2>
+          <div className="flex items-center justify-between">
+            <div><label htmlFor="adultContentToggle" className="font-medium text-gray-200">Enable Adult Content</label><p className="text-xs text-gray-400">Show content that may be considered adult.</p></div>
+            <button id="adultContentToggle" onClick={() => setAdultContentEnabled(!adultContentEnabled)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${adultContentEnabled ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={adultContentEnabled}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${adultContentEnabled ? 'translate-x-6' : 'translate-x-1'}`}/></button>
+          </div>
+        </div>
+
+        {/* Content & Media Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Content & Media</h2>
+          <div className="mb-6">
+            <h3 className="text-lg font-medium text-gray-300 mb-2">Media Autoplay</h3>
+            <div className="space-y-3">
+              {(feedViewAutoplayAvatars !== undefined) ? (<div className="flex items-center justify-between"><div><label htmlFor="autoplayAvatarsToggle" className="font-medium text-gray-200">Autoplay Animated Avatars</label><p className="text-xs text-gray-400">Play animated avatars automatically.</p></div><button id="autoplayAvatarsToggle" onClick={() => setFeedViewAutoplayAvatars(!feedViewAutoplayAvatars)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${feedViewAutoplayAvatars ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={feedViewAutoplayAvatars}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${feedViewAutoplayAvatars ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>) : (<p className="text-sm text-gray-400">Autoplay Avatars setting not available.</p>)}
+              {(feedViewAutoplayVideos !== undefined) ? (<div className="flex items-center justify-between"><div><label htmlFor="autoplayVideosToggle" className="font-medium text-gray-200">Autoplay Videos</label><p className="text-xs text-gray-400">Play videos automatically when in view.</p></div><button id="autoplayVideosToggle" onClick={() => setFeedViewAutoplayVideos(!feedViewAutoplayVideos)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${feedViewAutoplayVideos ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={feedViewAutoplayVideos}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${feedViewAutoplayVideos ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>) : (<p className="text-sm text-gray-400">Autoplay Videos setting not available.</p>)}
+            </div>
+          </div>
+          <div>
+            <h3 className="text-lg font-medium text-gray-300 mb-2 mt-4">Content Label Preferences</h3>
+            {contentLabelPreferences === undefined && !isLoading && <p className="text-sm text-gray-400">Loading label preferences...</p>}
+            {contentLabelPreferences && contentLabelPreferences.length > 0 ? (
+              <div className="space-y-2 text-xs bg-gray-700/30 p-3 rounded-md">
+                {contentLabelPreferences.map((labelPref, index) => ( <div key={index} className="p-1.5 bg-gray-600/50 rounded"><p className="text-gray-200"><span className="font-semibold">Label:</span> {labelPref.label} {labelPref.labelerDid && <span className="text-gray-400 text-[10px] ml-1">(by {labelPref.labelerDid.substring(0,18)}...)</span>}</p><p className="text-gray-300"><span className="font-semibold">Visibility:</span> {labelPref.visibility}</p></div> ))}
+              </div>
+            ) : (!isLoading && <p className="text-sm text-gray-400">No specific content label preferences are currently set via API.</p>)}
+            <p className="text-xs text-gray-500 mt-2">Note: Modifying these specific label preferences is not yet supported in this app.</p>
+          </div>
+        </div>
+
+        {/* Feed Preferences Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Feed Preferences</h2>
+          <div className="space-y-3">
+            <div className="flex items-center justify-between"><div><label htmlFor="feedViewHideRepliesToggle" className="font-medium text-gray-200">Hide Replies in Feeds</label><p className="text-xs text-gray-400">Reduce clutter by hiding replies in your feeds.</p></div><button id="feedViewHideRepliesToggle" onClick={() => setFeedViewHideReplies(!feedViewHideReplies)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${feedViewHideReplies ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={feedViewHideReplies}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${feedViewHideReplies ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>
+            <div className="flex items-center justify-between"><div><label htmlFor="feedViewHideRepostsToggle" className="font-medium text-gray-200">Hide Reposts in Feeds</label><p className="text-xs text-gray-400">Content warning: this is a commonly requested feature.</p></div><button id="feedViewHideRepostsToggle" onClick={() => setFeedViewHideReposts(!feedViewHideReposts)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${feedViewHideReposts ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={feedViewHideReposts}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${feedViewHideReposts ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>
+            <div className="flex items-center justify-between"><div><label htmlFor="feedViewHideQuotePostsToggle" className="font-medium text-gray-200">Hide Quote Posts in Feeds</label><p className="text-xs text-gray-400">Content warning: this is a commonly requested feature.</p></div><button id="feedViewHideQuotePostsToggle" onClick={() => setFeedViewHideQuotePosts(!feedViewHideQuotePosts)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${feedViewHideQuotePosts ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={feedViewHideQuotePosts}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${feedViewHideQuotePosts ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>
+            <div className="flex items-center justify-between"><div><label htmlFor="feedViewLabMergeEnabledToggle" className="font-medium text-gray-200">Enable Merged Feed (Lab)</label><p className="text-xs text-gray-400">Experimental: Merge different feed sources. May not be standard.</p></div><button id="feedViewLabMergeEnabledToggle" onClick={() => setFeedViewLabMergeEnabled(!feedViewLabMergeEnabled)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${feedViewLabMergeEnabled ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={feedViewLabMergeEnabled}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${feedViewLabMergeEnabled ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>
+          </div>
+        </div>
+
+        {/* Thread View Preferences Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Thread View Preferences</h2>
+          <div className="space-y-4">
+            <div className="flex items-center justify-between"><div><label htmlFor="threadViewSortSelect" className="font-medium text-gray-200">Sort Replies</label><p className="text-xs text-gray-400">Choose how replies in a thread are sorted.</p></div><select id="threadViewSortSelect" value={threadViewSort} onChange={(e) => setThreadViewSort(e.target.value)} className="bg-gray-700 text-white p-2 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-sm"><option value="oldest">Oldest First</option><option value="newest">Newest First</option><option value="most-likes">Most Likes</option></select></div>
+            <div className="flex items-center justify-between"><div><label htmlFor="threadViewPrioritizeFollowedToggle" className="font-medium text-gray-200">Prioritize Followed Users</label><p className="text-xs text-gray-400">Show replies from users you follow first.</p></div><button id="threadViewPrioritizeFollowedToggle" onClick={() => setThreadViewPrioritizeFollowed(!threadViewPrioritizeFollowed)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${threadViewPrioritizeFollowed ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={threadViewPrioritizeFollowed}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${threadViewPrioritizeFollowed ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>
+          </div>
+        </div>
+
+        {/* App Appearance Section (BlueSky Synced) */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">App Appearance (Synced with BlueSky)</h2>
+          {bskyDarkThemeEnabled === undefined ? (<p className="text-sm text-gray-400">Loading theme setting...</p>) : (<div className="flex items-center justify-between"><div><label htmlFor="bskyDarkThemeToggle" className="font-medium text-gray-200">Enable BlueSky Dark Mode</label><p className="text-xs text-gray-400">This setting attempts to sync with a BlueSky preference for dark mode.</p></div><button id="bskyDarkThemeToggle" onClick={() => setBskyDarkThemeEnabled(!bskyDarkThemeEnabled)} className={`relative inline-flex items-center h-6 rounded-full w-11 transition-colors ${bskyDarkThemeEnabled ? 'bg-blue-600' : 'bg-gray-600'}`} aria-checked={bskyDarkThemeEnabled}><span className={`inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${bskyDarkThemeEnabled ? 'translate-x-6' : 'translate-x-1'}`}/></button></div>)}
+        </div>
+
+        {/* Local Custom Theme Settings Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Custom App Theme (Local)</h2>
+          <p className="text-xs text-gray-400 mb-3">Customize the look of content areas. This is saved locally in your browser and does not sync with BlueSky.</p>
+          <div className="space-y-4">
+            <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between"><label htmlFor="inputBackgroundColor" className="font-medium text-gray-200 mb-1 sm:mb-0">Background Color:</label><input type="color" id="inputBackgroundColor" value={inputBackgroundColor} onChange={(e) => setInputBackgroundColor(e.target.value)} className="bg-gray-700 border border-gray-600 rounded-md p-1 h-10 w-full sm:w-24 cursor-pointer"/></div>
+            <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between"><label htmlFor="inputTextColor" className="font-medium text-gray-200 mb-1 sm:mb-0">Text Color:</label><input type="color" id="inputTextColor" value={inputTextColor} onChange={(e) => setInputTextColor(e.target.value)} className="bg-gray-700 border border-gray-600 rounded-md p-1 h-10 w-full sm:w-24 cursor-pointer"/></div>
+            {localCustomTheme && (<div className="p-3 bg-gray-700/50 rounded-md text-xs my-2"><p className="font-semibold mb-1 text-gray-300">Current Saved Custom Theme:</p><div className="flex items-center space-x-2"><span className="w-4 h-4 rounded border border-gray-500 inline-block" style={{ backgroundColor: localCustomTheme.backgroundColor }} title={`Background: ${localCustomTheme.backgroundColor}`}></span><span className="text-gray-400">Background: {localCustomTheme.backgroundColor}</span></div><div className="flex items-center space-x-2 mt-1"><span className="w-4 h-4 rounded border border-gray-500 inline-block" style={{ backgroundColor: localCustomTheme.textColor }} title={`Text: ${localCustomTheme.textColor}`}></span><span className="text-gray-400">Text: {localCustomTheme.textColor}</span></div></div>)}
+            <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 pt-2"><button onClick={() => { const newTheme = { backgroundColor: inputBackgroundColor, textColor: inputTextColor }; localStorage.setItem(LOCAL_THEME_KEY, JSON.stringify(newTheme)); setLocalCustomTheme(newTheme); alert("Custom theme saved locally!"); }} className="px-4 py-2 bg-green-600 hover:bg-green-500 text-white font-semibold rounded-md text-sm w-full sm:w-auto">Save Custom Theme</button><button onClick={() => { localStorage.removeItem(LOCAL_THEME_KEY); setLocalCustomTheme(null); setInputBackgroundColor(defaultLocalBackgroundColor); setInputTextColor(defaultLocalTextColor); alert("Custom theme cleared!"); }} className="px-4 py-2 bg-red-600 hover:bg-red-500 text-white font-semibold rounded-md text-sm w-full sm:w-auto">Clear Custom Theme</button></div>
+          </div>
+        </div>
+
+        {/* Content Languages Section */}
+        <div className="p-4 bg-gray-800 rounded-lg shadow">
+          <h2 className="text-xl font-semibold mb-4 border-b border-gray-700 pb-2">Content Languages</h2>
+          <p className="text-xs text-gray-400 mb-3">Select the languages you want to see content in. This affects posts and other content displayed in the app.</p>
+          <div className="grid grid-cols-2 sm:grid-cols-3 gap-3">
+            {commonLanguages.map(lang => ( <label key={lang.code} className="flex items-center space-x-2 p-2 bg-gray-700 rounded-md hover:bg-gray-600 cursor-pointer"><input type="checkbox" className="form-checkbox h-4 w-4 text-blue-500 bg-gray-800 border-gray-600 rounded focus:ring-blue-500" checked={contentLanguages.includes(lang.code)} onChange={(e) => handleContentLanguageChange(lang.code, e.target.checked)}/><span className="text-sm text-gray-200">{lang.name}</span></label> ))}
+          </div>
+        </div>
+
+        <div className="mt-8 pt-6 border-t border-gray-700 flex justify-end">
+          <button onClick={handleSaveChanges} disabled={isSaving || isLoading} className="px-6 py-2 bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-md shadow focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 disabled:opacity-50 disabled:cursor-not-allowed">
+            {isSaving ? 'Saving...' : 'Save BlueSky Settings'}
+          </button>
+        </div>
+      </div>
+    </AppLayout>
+  );
+};
+
+export default BlueSkySettingsPage;
diff --git a/src/app/callback/page.tsx b/src/app/callback/page.tsx
new file mode 100644
index 0000000..6cece97
--- /dev/null
+++ b/src/app/callback/page.tsx
@@ -0,0 +1,65 @@
+"use client";
+
+import React from 'react'; // useEffect is used implicitly by React for the component lifecycle
+import { useRouter } from 'next/navigation';
+import { Loader2 } from 'lucide-react';
+import { useAuth } from '../../../AuthContext'; // Adjusted path
+
+const CallbackPage = () => {
+  const router = useRouter();
+  // Renaming isLoading from useAuth to authIsLoading for clarity if page had its own loading state
+  const { isLoading: authIsLoading, isAuthenticated, error } = useAuth();
+
+  React.useEffect(() => {
+    if (!authIsLoading) { // Use authIsLoading here
+      if (isAuthenticated) {
+        router.push('/');
+      } else if (error) {
+        router.push('/signin');
+      }
+      // If !isAuthenticated and no error, and auth is not loading,
+      // it implies the callback didn't result in authentication.
+      // Showing the loader might be misleading.
+      // However, often callbacks *do* involve a period where isLoading is true from useAuth
+      // as the session is finalized. The current UI shows "Completing sign-in..."
+      // which is appropriate if isLoading (authIsLoading) is still true or expected to become true.
+      // If authIsLoading is false, and user is not authenticated, and no error,
+      // a redirect to /signin might also be appropriate here, or a message.
+      // For now, keeping existing logic which relies on error to redirect.
+    }
+  }, [authIsLoading, isAuthenticated, error, router]);
+
+  return (
+    <div className="flex flex-col min-h-screen bg-black text-gray-100 items-center justify-center p-4">
+      <div className="text-center p-8 max-w-md w-full">
+        {/* Display loader if auth is still processing, or if no specific error/auth state forces a redirect yet */}
+        {/* This UI is primarily for the case where authIsLoading is true, or just became false but redirect is pending */}
+        <Loader2 className="animate-spin h-12 w-12 mx-auto mb-6 text-blue-500" />
+        <h2 className="text-2xl font-semibold mb-3 text-gray-50">Completing sign-in...</h2>
+        <p className="text-gray-400 mb-8">
+          Please wait while we authenticate your account.
+        </p>
+
+        {error && !authIsLoading && ( // Only show error if auth is not loading (error might be from a previous attempt)
+          <div className="mt-6 p-4 text-sm text-red-300 bg-red-900/40 border border-red-700 rounded-lg">
+            <p className="font-medium">Authentication Failed:</p>
+            <p>{error}</p>
+            <p className="mt-2 text-xs text-gray-400">
+              You will be redirected to the sign-in page. If not, please click <a href="/signin" className="underline hover:text-blue-400">here</a>.
+            </p>
+          </div>
+        )}
+
+        {/* Fallback for unexpected state: auth not loading, not authenticated, and no error */}
+        {/* This might indicate the callback completed without authenticating the user, without an explicit error from useAuth */}
+        {!authIsLoading && !isAuthenticated && !error && (
+            <div className="mt-6 p-4 text-sm text-yellow-300 bg-yellow-900/40 border border-yellow-700 rounded-lg">
+                <p>Could not complete authentication. Please try <a href="/signin" className="underline hover:text-blue-400">signing in</a> again.</p>
+            </div>
+        )}
+      </div>
+    </div>
+  );
+};
+
+export default CallbackPage;
diff --git a/src/app/chat/[chatId]/page.tsx b/src/app/chat/[chatId]/page.tsx
new file mode 100644
index 0000000..cc62928
--- /dev/null
+++ b/src/app/chat/[chatId]/page.tsx
@@ -0,0 +1,264 @@
+"use client";
+
+import React, { useState, useEffect, useCallback, useRef } from 'react';
+import { useParams, useRouter } from 'next/navigation'; // useRouter for back button
+import Link from 'next/link';
+import Image from 'next/image';
+import AppLayout from '@/components/AppLayout';
+import { useAuth } from '@/contexts/AuthContext';
+import {
+  getMessages,
+  sendMessage,
+  getConvo,
+  MessageView,
+  MessagesPage,
+  ConvoView
+} from '@/lib/bskyService';
+import { ArrowLeft, Send, Paperclip, Mic, UserCircle, Users } from 'lucide-react';
+
+const IndividualChatPage: React.FC = () => {
+  const params = useParams();
+  const router = useRouter();
+  const { agent, isAuthenticated, session } = useAuth();
+
+  const chatId = typeof params.chatId === 'string' ? params.chatId : null;
+
+  const [convoDetails, setConvoDetails] = useState<ConvoView | null>(null);
+  const [messages, setMessages] = useState<MessageView[]>([]);
+  const [isLoadingMessages, setIsLoadingMessages] = useState<boolean>(true);
+  const [isLoadingConvo, setIsLoadingConvo] = useState<boolean>(true);
+  const [isLoadingMoreMessages, setIsLoadingMoreMessages] = useState<boolean>(false);
+  const [error, setError] = useState<string | null>(null);
+  const [cursor, setCursor] = useState<string | undefined>(undefined);
+  const [newMessageText, setNewMessageText] = useState<string>('');
+  const [isSending, setIsSending] = useState<boolean>(false);
+
+  const messagesEndRef = useRef<HTMLDivElement | null>(null);
+  const chatContainerRef = useRef<HTMLDivElement | null>(null);
+
+  const scrollToBottom = (behavior: ScrollBehavior = "smooth") => {
+    messagesEndRef.current?.scrollIntoView({ behavior });
+  };
+
+  const getConvoDisplayDetails = useCallback((convo: ConvoView | null, currentUserDid: string | undefined) => {
+    if (!convo) return { name: "Chat", avatar: null, isGroup: false, members: [] };
+    const otherMembers = convo.members.filter(member => member.did !== currentUserDid);
+
+    if (otherMembers.length === 0) {
+      return { name: convo.members[0]?.displayName || convo.members[0]?.handle || "Self Chat", avatar: convo.members[0]?.avatar || null, isGroup: false, members: convo.members };
+    }
+    if (otherMembers.length === 1) {
+      return { name: otherMembers[0].displayName || otherMembers[0].handle, avatar: otherMembers[0].avatar || null, isGroup: false, members: otherMembers };
+    }
+    return {
+      name: otherMembers.map(m => m.displayName || m.handle).slice(0,2).join(', ') + (otherMembers.length > 2 ? ` & ${otherMembers.length-2} more` : ''),
+      avatar: null,
+      isGroup: true,
+      members: otherMembers
+    };
+  }, []);
+
+
+  // Fetch Conversation Details
+  useEffect(() => {
+    if (chatId && agent && isAuthenticated) {
+      setIsLoadingConvo(true);
+      getConvo(agent, chatId)
+        .then(data => {
+          setConvoDetails(data);
+        })
+        .catch(err => {
+          console.error("Error fetching convo details:", err);
+          setError("Failed to load conversation details.");
+        })
+        .finally(() => setIsLoadingConvo(false));
+    }
+  }, [chatId, agent, isAuthenticated]);
+
+  const fetchMessages = useCallback(async (loadMore = false) => {
+    if (!agent || !chatId || !isAuthenticated) return;
+
+    if (!loadMore) setIsLoadingMessages(true);
+    else setIsLoadingMoreMessages(true);
+    setError(null);
+
+    const currentCursor = loadMore ? cursor : undefined;
+
+    try {
+      const data: MessagesPage = await getMessages(agent, chatId, currentCursor, 30); // Fetch 30 messages
+      // Messages from API are typically newest first, so prepend if loading more (older)
+      setMessages(prev => loadMore ? [...data.messages.reverse(), ...prev] : data.messages.reverse());
+      setCursor(data.cursor);
+      if (!loadMore) {
+        setTimeout(() => scrollToBottom("auto"), 100); // Scroll to bottom on initial load
+      } else {
+        // Preserve scroll position when loading older messages
+        if (chatContainerRef.current && data.messages.length > 0) {
+            const firstMessage = chatContainerRef.current.querySelector('[data-msg-id]');
+            const oldScrollHeight = chatContainerRef.current.scrollHeight;
+            // Wait for new messages to render, then adjust scroll
+            requestAnimationFrame(() => {
+                if (firstMessage) {
+                    const newScrollHeight = chatContainerRef.current!.scrollHeight;
+                    chatContainerRef.current!.scrollTop = newScrollHeight - oldScrollHeight + chatContainerRef.current!.scrollTop;
+                }
+            });
+        }
+      }
+    } catch (err) {
+      console.error("Error fetching messages:", err);
+      setError(err instanceof Error ? err.message : "Unknown error fetching messages.");
+    } finally {
+      if (!loadMore) setIsLoadingMessages(false);
+      else setIsLoadingMoreMessages(false);
+    }
+  }, [agent, chatId, cursor, isAuthenticated]);
+
+  useEffect(() => {
+    if (chatId && agent && isAuthenticated) {
+      fetchMessages();
+    }
+    // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, [chatId, agent, isAuthenticated]); // fetchMessages dependency removed to control calls
+
+  const handleSendMessage = async () => {
+    if (!agent || !chatId || newMessageText.trim() === '') return;
+    setIsSending(true);
+    try {
+      const sentMessage = await sendMessage(agent, chatId, newMessageText);
+      // Add the sent message to the local state (optimistic update)
+      // Assuming MessageViewSent is compatible with MessageView structure for display
+      const messageToAdd: MessageView = {
+        $type: "chat.bsky.convo.defs#messageView", // This might need adjustment based on actual returned type if it's just MessageViewSent
+        id: sentMessage.id,
+        rev: sentMessage.rev,
+        text: newMessageText, // Use the text that was sent
+        sentAt: new Date().toISOString(), // Use current time, or better, use sentMessage.sentAt if available
+        sender: { did: session!.did }, // Current user is the sender
+        // embeds: [] // If supporting embeds in future
+      };
+      setMessages(prev => [...prev, messageToAdd]);
+      setNewMessageText('');
+      setTimeout(() => scrollToBottom(), 0); // Scroll after message is added
+    } catch (err) {
+      console.error("Error sending message:", err);
+      setError("Failed to send message.");
+      // Revert optimistic update or show error specifically for the message if needed
+    } finally {
+      setIsSending(false);
+    }
+  };
+
+  const convoDisplay = getConvoDisplayDetails(convoDetails, session?.did);
+
+  return (
+    <AppLayout
+        currentPage={isLoadingConvo ? "Chat" : convoDisplay.name || "Chat"}
+        showHeader={false} // Using custom header for chat
+        showSidebarButton={false}
+    >
+      <div className="flex flex-col h-screen text-white bg-black">
+        {/* Custom Header */}
+        <header className="sticky top-0 z-20 bg-black/80 backdrop-blur-md border-b border-gray-700 flex items-center p-3">
+          <button onClick={() => router.back()} className="p-2 rounded-full hover:bg-gray-700 mr-2">
+            <ArrowLeft size={20} />
+          </button>
+          {isLoadingConvo ? (
+            <div className="w-8 h-8 rounded-full bg-gray-600 animate-pulse mr-2"></div>
+          ) : convoDisplay.avatar ? (
+            <Image src={convoDisplay.avatar} alt="avatar" width={32} height={32} className="rounded-full mr-2" />
+          ) : convoDisplay.isGroup ? (
+            <div className="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center mr-2"><Users size={16}/></div>
+          ) : (
+            <div className="w-8 h-8 rounded-full bg-gray-700 flex items-center justify-center text-gray-400 text-sm font-bold mr-2">
+              {convoDisplay.name?.charAt(0).toUpperCase()}
+            </div>
+          )}
+          <h1 className="text-md font-semibold truncate">{isLoadingConvo ? "Loading Chat..." : convoDisplay.name}</h1>
+        </header>
+
+        {/* Messages Area */}
+        <div ref={chatContainerRef} className="flex-grow overflow-y-auto p-4 space-y-4">
+          {isLoadingMessages && messages.length === 0 && <p className="text-center text-gray-400">Loading messages...</p>}
+          {error && <p className="text-center text-red-400">Error: {error}</p>}
+
+          {cursor && !isLoadingMoreMessages && (
+            <div className="text-center py-2">
+                <button
+                    onClick={() => fetchMessages(true)}
+                    className="text-xs text-blue-400 hover:underline"
+                    disabled={isLoadingMoreMessages}
+                >
+                    {isLoadingMoreMessages ? "Loading older..." : "Load older messages"}
+                </button>
+            </div>
+          )}
+          {isLoadingMoreMessages && <p className="text-center text-xs text-gray-400 py-2">Loading older messages...</p>}
+
+
+          {messages.map((msg) => {
+            // Check if msg is a DeletedMessageView or LogBeginConvo, skip for now or render placeholder
+            if (msg.$type === 'chat.bsky.convo.defs#deletedMessageView' || msg.$type === 'chat.bsky.convo.defs#logView') {
+                return <div key={msg.id || msg.rev} className="text-xs text-center text-gray-500 italic py-1">(Event: {msg.$type.split('#').pop()})</div>;
+            }
+
+            const isMe = msg.sender?.did === session?.did;
+            return (
+              <div key={msg.id} className={`flex ${isMe ? 'justify-end' : 'justify-start'}`} data-msg-id={msg.id}>
+                <div className={`max-w-[70%] p-2.5 rounded-xl ${isMe ? 'bg-blue-600 text-white rounded-br-none' : 'bg-gray-700 text-gray-100 rounded-bl-none'}`}>
+                  {/* For group chats, show sender name if not me */}
+                  {!isMe && convoDetails?.members && convoDetails.members.length > 2 && (
+                    <p className="text-xs font-semibold mb-0.5 text-sky-300">
+                        {convoDetails.members.find(m => m.did === msg.sender?.did)?.displayName || msg.sender?.did.slice(-6)}
+                    </p>
+                  )}
+                  <p className="text-sm whitespace-pre-wrap break-words">{msg.text}</p>
+                  <p className={`text-xs mt-1 ${isMe ? 'text-blue-200/80' : 'text-gray-400/80'} text-right`}>
+                    {new Date(msg.sentAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
+                  </p>
+                </div>
+              </div>
+            );
+          })}
+          <div ref={messagesEndRef} /> {/* For auto-scrolling */}
+        </div>
+        {!chatId && !isLoadingMessages && !error && (
+            <div className="flex-grow flex items-center justify-center text-gray-400">Select a chat to view messages.</div>
+        )}
+         {chatId && messages.length === 0 && !isLoadingMessages && !error && (
+            <div className="flex-grow flex items-center justify-center text-gray-400">No messages in this chat yet.</div>
+        )}
+
+
+        {/* Message Input Area */}
+        {chatId && (
+          <div className="sticky bottom-0 bg-black border-t border-gray-700 p-3 flex items-center space-x-2">
+            <button className="p-2 rounded-full hover:bg-gray-700 text-gray-400"><Paperclip size={20} /></button>
+            <input
+              type="text"
+              value={newMessageText}
+              onChange={(e) => setNewMessageText(e.target.value)}
+              placeholder="Type a message..."
+              className="flex-grow p-2.5 bg-gray-700 rounded-lg text-sm focus:outline-none focus:ring-1 focus:ring-blue-500"
+              onKeyPress={(e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); handleSendMessage(); } }}
+              disabled={isSending}
+            />
+            {newMessageText ? (
+                <button
+                    onClick={handleSendMessage}
+                    disabled={isSending || newMessageText.trim() === ''}
+                    className="p-2.5 bg-blue-600 rounded-lg text-white hover:bg-blue-500 disabled:opacity-50"
+                >
+                    <Send size={20} />
+                </button>
+            ) : (
+                <button className="p-2 rounded-full hover:bg-gray-700 text-gray-400"><Mic size={20} /></button>
+            )}
+          </div>
+        )}
+      </div>
+    </AppLayout>
+  );
+};
+
+export default IndividualChatPage;
diff --git a/src/app/chat/page.tsx b/src/app/chat/page.tsx
new file mode 100644
index 0000000..8d19fa4
--- /dev/null
+++ b/src/app/chat/page.tsx
@@ -0,0 +1,181 @@
+"use client";
+
+import React, { useState, useEffect, useCallback } from 'react';
+import Link from 'next/link';
+import Image from 'next/image';
+import AppLayout from '@/components/AppLayout';
+import { useAuth } from '@/contexts/AuthContext';
+import { listConvos, ConvoView, ConvosPage } from '@/lib/bskyService';
+import { MessageSquarePlus, Users, BellOff, Bell } from 'lucide-react';
+
+const ChatListPage: React.FC = () => {
+  const { agent, isAuthenticated, session } = useAuth();
+  const [convos, setConvos] = useState<ConvoView[]>([]);
+  const [isLoading, setIsLoading] = useState<boolean>(true);
+  const [isLoadingMore, setIsLoadingMore] = useState<boolean>(false);
+  const [error, setError] = useState<string | null>(null);
+  const [cursor, setCursor] = useState<string | undefined>(undefined);
+
+  const fetchConvos = useCallback(async (loadMore = false) => {
+    if (!agent || !isAuthenticated) {
+      if (!isAuthenticated) setError("Please log in to view chats.");
+      setIsLoading(false);
+      setIsLoadingMore(false);
+      return;
+    }
+
+    if (!loadMore) {
+      setIsLoading(true);
+      setConvos([]);
+    } else {
+      setIsLoadingMore(true);
+    }
+    setError(null);
+    const currentCursor = loadMore ? cursor : undefined;
+
+    try {
+      const data: ConvosPage = await listConvos(agent, currentCursor, 30);
+      setConvos(prev => loadMore ? [...prev, ...data.convos] : data.convos);
+      setCursor(data.cursor);
+    } catch (err) {
+      console.error("Error fetching conversations:", err);
+      setError(err instanceof Error ? err.message : "Unknown error fetching conversations.");
+    } finally {
+      if (!loadMore) setIsLoading(false);
+      else setIsLoadingMore(false);
+    }
+  }, [agent, cursor, isAuthenticated]);
+
+  useEffect(() => {
+    if (agent && isAuthenticated) {
+      fetchConvos();
+    } else {
+      setIsLoading(false);
+      setConvos([]);
+      setCursor(undefined);
+    }
+    // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, [agent, isAuthenticated]);
+
+
+  const getConvoDisplayDetails = (convo: ConvoView, currentUserDid: string | undefined) => {
+    const otherMembers = convo.members.filter(member => member.did !== currentUserDid);
+
+    if (otherMembers.length === 0) { // Should not happen in typical DMs, maybe a convo with self?
+      return { name: "Self Chat", avatar: session?.avatar || null, isGroup: false };
+    }
+    if (otherMembers.length === 1) {
+      return {
+        name: otherMembers[0].displayName || otherMembers[0].handle,
+        avatar: otherMembers[0].avatar || null,
+        isGroup: false
+      };
+    }
+    // Group chat
+    return {
+      name: otherMembers.map(m => m.displayName || m.handle).slice(0, 3).join(', ') + (otherMembers.length > 3 ? '...' : ''),
+      avatar: null, // Placeholder for group avatar
+      isGroup: true
+    };
+  };
+
+  const renderConvoItem = (convo: ConvoView) => {
+    const displayDetails = getConvoDisplayDetails(convo, session?.did);
+    let lastMessageText = "No messages yet";
+    let lastMessageDate: Date | null = null;
+
+    if (convo.lastMessage && 'text' in convo.lastMessage && typeof convo.lastMessage.text === 'string') {
+        lastMessageText = convo.lastMessage.text;
+        if ('sentAt' in convo.lastMessage && typeof convo.lastMessage.sentAt === 'string') {
+            lastMessageDate = new Date(convo.lastMessage.sentAt);
+        }
+    } else if (convo.lastMessage && 'deletedMessageView' in convo.lastMessage) { // Example if lastMessage is a union type
+        lastMessageText = "[Message deleted]";
+    }
+
+
+    return (
+      <Link href={`/chat/${convo.id}`} key={convo.id} legacyBehavior>
+        <a className="flex items-center p-3 hover:bg-gray-800/70 transition-colors border-b border-gray-700/50">
+          <div className="flex-shrink-0 mr-3">
+            {displayDetails.avatar ? (
+              <Image src={displayDetails.avatar} alt={displayDetails.name || "avatar"} width={48} height={48} className="rounded-full bg-gray-600" />
+            ) : displayDetails.isGroup ? (
+              <div className="w-12 h-12 rounded-full bg-gray-600 flex items-center justify-center">
+                <Users size={24} className="text-gray-400"/>
+              </div>
+            ) : (
+              <div className="w-12 h-12 rounded-full bg-gray-700 flex items-center justify-center text-gray-400 text-xl font-bold">
+                {displayDetails.name?.charAt(0).toUpperCase()}
+              </div>
+            )}
+          </div>
+          <div className="flex-1 min-w-0">
+            <div className="flex justify-between items-center">
+              <h3 className="text-sm font-semibold text-gray-100 truncate">{displayDetails.name}</h3>
+              {lastMessageDate && <p className="text-xs text-gray-500 flex-shrink-0 ml-2">{lastMessageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>}
+            </div>
+            <p className="text-xs text-gray-400 truncate mt-0.5">{lastMessageText}</p>
+          </div>
+          <div className="flex flex-col items-end ml-2 space-y-1">
+            {convo.unreadCount > 0 && (
+              <span className="px-2 py-0.5 text-xs font-semibold text-white bg-blue-500 rounded-full">
+                {convo.unreadCount}
+              </span>
+            )}
+            {convo.muted && (
+              <BellOff size={14} className="text-gray-500" title="Muted"/>
+            )}
+             {!convo.muted && convo.unreadCount === 0 && ( // Placeholder for read but not muted, if needed
+                <div className="w-2 h-2"></div> // Ensures consistent height
+            )}
+          </div>
+        </a>
+      </Link>
+    );
+  };
+
+  return (
+    <AppLayout currentPage="Chat" showHeader={true} showSidebarButton={true}>
+      <div className="text-white h-full flex flex-col">
+        <div className="p-3 sticky top-0 bg-black/80 backdrop-blur-md z-10 border-b border-gray-700 flex justify-between items-center">
+          <h1 className="text-lg font-semibold">Messages</h1>
+          <button className="p-2 rounded-full hover:bg-gray-700" title="New Chat">
+            <MessageSquarePlus size={20} />
+          </button>
+        </div>
+
+        {isLoading && convos.length === 0 && <div className="p-4 text-center flex-grow flex items-center justify-center">Loading conversations...</div>}
+        {error && <div className="p-4 text-red-400 text-center flex-grow flex items-center justify-center">Error: {error}</div>}
+
+        {convos.length === 0 && !isLoading && !error && (
+          <div className="p-4 text-center text-gray-400 flex-grow flex items-center justify-center">
+            You have no conversations yet.
+          </div>
+        )}
+
+        <div className="flex-grow overflow-y-auto">
+          {convos.map(convo => renderConvoItem(convo))}
+        </div>
+
+        {cursor && !isLoadingMore && convos.length > 0 && (
+          <div className="p-4 flex justify-center border-t border-gray-700/50">
+            <button
+              onClick={() => fetchConvos(true)}
+              disabled={isLoadingMore}
+              className="px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-md text-white font-semibold disabled:opacity-50"
+            >
+              {isLoadingMore ? 'Loading...' : 'Load More Conversations'}
+            </button>
+          </div>
+        )}
+        {isLoadingMore && <div className="p-4 text-center">Loading more...</div>}
+        {!cursor && convos.length > 0 && !isLoading && !isLoadingMore && (
+            <div className="p-4 text-center text-xs text-gray-500">End of conversations.</div>
+        )}
+      </div>
+    </AppLayout>
+  );
+};
+
+export default ChatListPage;
diff --git a/src/app/feeds/page.tsx b/src/app/feeds/page.tsx
new file mode 100644
index 0000000..ff5224d
--- /dev/null
+++ b/src/app/feeds/page.tsx
@@ -0,0 +1,198 @@
+"use client";
+
+import React, { useState, useEffect, useCallback } from 'react';
+import { useSearchParams } from 'next/navigation';
+import Image from 'next/image';
+import Link from 'next/link'; // Added for mentions and tags
+import AppLayout from '@/components/AppLayout';
+import { useAuth } from '@/contexts/AuthContext';
+import { getFeed, FeedPage, FeedViewPost } from '@/lib/bskyService';
+import { processFacets, ProcessedRichTextSegment } from '@/utils/richtextProcessor'; // Import richtext processor
+import { AppBskyEmbedImages, AppBskyEmbedExternal, AppBskyEmbedRecord, AppBskyEmbedRecordWithMedia } from '@atproto/api'; // Import embed types
+
+// Basic Embed Components (can be moved to separate files later)
+const ImageEmbedDisplay: React.FC<{ imagesView: AppBskyEmbedImages.View }> = ({ imagesView }) => {
+  if (!imagesView.images || imagesView.images.length === 0) return null;
+  return (
+    <div className={`mt-2 grid grid-cols-${imagesView.images.length === 1 ? 1 : 2} gap-2`}>
+      {imagesView.images.map(img => (
+        <div key={img.thumb} className="relative aspect-[16/9] bg-gray-700 rounded-md overflow-hidden border border-gray-600">
+          <a href={img.fullsize} target="_blank" rel="noopener noreferrer" aria-label={`View image: ${img.alt || 'Embedded image'}`}>
+            <Image src={img.thumb} alt={img.alt || 'Embedded image'} layout="fill" objectFit="cover" />
+          </a>
+        </div>
+      ))}
+    </div>
+  );
+};
+
+const ExternalEmbedDisplay: React.FC<{ externalView: AppBskyEmbedExternal.View }> = ({ externalView }) => {
+  const { uri, title, description, thumb } = externalView.external;
+  return (
+    <a href={uri} target="_blank" rel="noopener noreferrer" className="mt-2 block border border-gray-600 rounded-lg hover:border-gray-500 transition-colors">
+      <div className="flex">
+        {thumb && (
+          <div className="w-24 h-24 relative flex-shrink-0">
+            <Image src={thumb} alt={title || 'External link preview'} layout="fill" objectFit="cover" className="rounded-l-lg" />
+          </div>
+        )}
+        <div className="p-3 overflow-hidden">
+          <p className="text-sm font-semibold text-gray-200 truncate">{title || uri}</p>
+          <p className="text-xs text-gray-400 truncate_lines_2">{description}</p> {/* Custom class for multi-line truncate if needed */}
+          <p className="text-xs text-blue-400 truncate mt-1">{uri}</p>
+        </div>
+      </div>
+    </a>
+  );
+};
+
+const RecordEmbedDisplay: React.FC<{ recordView: AppBskyEmbedRecord.View }> = ({ recordView }) => {
+  if (AppBskyEmbedRecord.isViewRecord(recordView.record)) {
+    const record = recordView.record;
+    // Simplified display for a quoted post
+    return (
+      <div className="mt-2 p-2 border border-gray-600 rounded-lg">
+        <div className="flex items-center space-x-2 mb-1">
+          {record.author.avatar && <Image src={record.author.avatar} alt="avatar" width={16} height={16} className="rounded-full" />}
+          <span className="text-xs font-semibold text-gray-300">{record.author.displayName || `@${record.author.handle}`}</span>
+        </div>
+        <p className="text-xs text-gray-400 truncate_lines_3">
+            {typeof record.value?.text === 'string' ? record.value.text : '(Quoted post content not available or is not text-based)'}
+        </p>
+        <Link href={`/profile/${record.author.handle}/post/${record.uri.split('/').pop()}`} legacyBehavior>
+          <a className="text-xs text-blue-400 hover:underline mt-1 inline-block">View quoted post</a>
+        </Link>
+      </div>
+    );
+  }
+  return <p className="text-xs text-gray-500 mt-2">(Unsupported quoted content)</p>;
+};
+
+
+const FeedPageClient: React.FC = () => {
+  const searchParams = useSearchParams();
+  const { agent, isAuthenticated } = useAuth();
+
+  const [feedUri, setFeedUri] = useState<string | null>(null);
+  const [posts, setPosts] = useState<FeedViewPost[]>([]);
+  const [isLoading, setIsLoading] = useState<boolean>(false);
+  const [isLoadingMore, setIsLoadingMore] = useState<boolean>(false);
+  const [error, setError] = useState<string | null>(null);
+  const [cursor, setCursor] = useState<string | undefined>(undefined);
+
+  useEffect(() => {
+    const currentUri = searchParams.get('uri');
+    const decodedUri = currentUri ? decodeURIComponent(currentUri) : null;
+    if (decodedUri !== feedUri) {
+        setFeedUri(decodedUri); setPosts([]); setCursor(undefined); setError(null);
+    }
+  }, [searchParams, feedUri]);
+
+  const fetchPosts = useCallback(async (loadMore = false) => {
+    if (!agent || !feedUri || !isAuthenticated) {
+      if (!isAuthenticated || !agent) setError("Please log in to view feeds."); return;
+    }
+    if (!loadMore) { setIsLoading(true); setPosts([]); } else { setIsLoadingMore(true); }
+    setError(null);
+    const currentCursor = loadMore ? cursor : undefined;
+    try {
+      const response: FeedPage = await getFeed(agent, feedUri, currentCursor, 25);
+      setPosts(prev => loadMore ? [...prev, ...response.feed] : response.feed);
+      setCursor(response.cursor);
+    } catch (err) {
+      setError(err instanceof Error ? err.message : "Unknown error fetching feed.");
+    } finally {
+      if (!loadMore) setIsLoading(false); else setIsLoadingMore(false);
+    }
+  }, [agent, feedUri, cursor, isAuthenticated]);
+
+  useEffect(() => {
+    if (feedUri && agent && isAuthenticated) { fetchPosts(); }
+     // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, [feedUri, agent, isAuthenticated]);
+
+  const renderRichText = (text: string, facets?: AppBskyRichtextFacet.Main[]) => {
+    const segments = processFacets(text, facets);
+    return segments.map((segment, index) => {
+      if (segment.type === 'link') {
+        return <a key={index} href={segment.href} target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:underline">{segment.content}</a>;
+      } else if (segment.type === 'mention') {
+        return <Link key={index} href={segment.href || '#'} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      } else if (segment.type === 'tag') {
+        return <Link key={index} href={`/tags/${segment.tag}`} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      }
+      return <React.Fragment key={index}>{segment.content}</React.Fragment>;
+    });
+  };
+
+  const renderEmbed = (embed: FeedViewPost['post']['embed']) => {
+    if (!embed) return null;
+    if (AppBskyEmbedImages.isView(embed)) {
+      return <ImageEmbedDisplay imagesView={embed} />;
+    } else if (AppBskyEmbedExternal.isView(embed)) {
+      return <ExternalEmbedDisplay externalView={embed} />;
+    } else if (AppBskyEmbedRecord.isView(embed)) {
+      return <RecordEmbedDisplay recordView={embed} />;
+    } else if (AppBskyEmbedRecordWithMedia.isView(embed)) {
+      // Render both record and media, e.g. quote post with images
+      return (
+        <div>
+          {AppBskyEmbedRecord.isView(embed.record) && <RecordEmbedDisplay recordView={embed.record} />}
+          {(AppBskyEmbedImages.isView(embed.media) || AppBskyEmbedExternal.isView(embed.media)) && renderEmbed(embed.media)}
+        </div>
+      );
+    }
+    return <p className="text-xs text-gray-500 mt-2">(Unsupported embed type)</p>;
+  };
+
+  const renderPost = (item: FeedViewPost) => {
+    const { post, reason, reply } = item;
+    if (!post.record) return null; // Skip if post.record is missing
+
+    return (
+      <div key={post.uri} className="p-4 border-b border-gray-700 hover:bg-gray-800/50 transition-colors">
+        {reason && reason.$type === 'app.bsky.feed.defs#reasonRepost' && ( <div className="text-xs text-gray-400 mb-1"> Reposted by <Link href={`/profile/${reason.by.handle}`} legacyBehavior><a className="hover:underline">{reason.by.displayName || `@${reason.by.handle}`}</a></Link> </div> )}
+        {reply && 'parent' in reply && reply.parent && 'author' in reply.parent && ( <div className="text-xs text-gray-400 mb-1"> Replying to <Link href={`/profile/${(reply.parent as any).author?.handle}`} legacyBehavior><a className="hover:underline">{(reply.parent as any).author?.displayName || `@${(reply.parent as any).author?.handle}`}</a></Link> </div> )}
+        <div className="flex space-x-3">
+          {post.author.avatar && <Image src={post.author.avatar} alt={`${post.author.displayName || post.author.handle}'s avatar`} width={48} height={48} className="rounded-full bg-gray-600"/>}
+          {!post.author.avatar && <div className="w-12 h-12 rounded-full bg-gray-600 flex-shrink-0"></div>}
+          <div className="flex-1">
+            <div className="flex items-center space-x-1 text-sm">
+              <Link href={`/profile/${post.author.handle}`} legacyBehavior><a className="font-bold text-gray-100 hover:underline">{post.author.displayName || post.author.handle}</a></Link>
+              <Link href={`/profile/${post.author.handle}`} legacyBehavior><a className="text-gray-400">@{post.author.handle}</a></Link>
+              <span className="text-gray-500">·</span>
+              <Link href={`/profile/${post.author.handle}/post/${post.uri.split('/').pop()}`} legacyBehavior><a className="text-gray-500 hover:underline">{new Date(post.indexedAt).toLocaleDateString()}</a></Link>
+            </div>
+            <div className="text-gray-200 mt-1 whitespace-pre-wrap break-words">
+              {renderRichText(typeof post.record.text === 'string' ? post.record.text : '', post.record.facets)}
+            </div>
+            {renderEmbed(post.embed)}
+            <div className="flex space-x-4 text-gray-500 mt-3 text-xs">
+              <span>Replies: {post.replyCount || 0}</span><span>Reposts: {post.repostCount || 0}</span><span>Likes: {post.likeCount || 0}</span>
+            </div>
+          </div>
+        </div>
+      </div>
+    );
+  };
+
+  let pageTitle = "Feed"; if (feedUri) { try { pageTitle = feedUri.split('/').pop() || "Feed"; } catch { /* ignore */ } }
+
+  return (
+    <AppLayout currentPage={pageTitle} showHeader={true} showSidebarButton={true}>
+      <div className="text-white">
+        <div className="p-4 sticky top-0 bg-black/80 backdrop-blur-md z-10 border-b border-gray-700"><h1 className="text-lg font-semibold truncate" title={feedUri || ""}>Viewing Feed: {feedUri ? <span className="text-sky-400">{feedUri}</span> : "Loading URI..."}</h1></div>
+        {isLoading && posts.length === 0 && <div className="p-4 text-center">Loading feed...</div>}
+        {error && <div className="p-4 text-red-400 text-center">Error: {error}</div>}
+        {posts.length === 0 && !isLoading && !error && feedUri && (<div className="p-4 text-center text-gray-400">This feed is empty or could not be loaded.</div>)}
+        {!feedUri && !isLoading && !error && (<div className="p-4 text-center text-gray-400">No feed URI specified or URI is invalid.</div>)}
+        <div className="divide-y divide-gray-700/50">{posts.map(item => renderPost(item))}</div>
+        {cursor && !isLoadingMore && posts.length > 0 && (<div className="p-4 flex justify-center"><button onClick={() => fetchPosts(true)} className="px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-md text-white font-semibold">Load More</button></div>)}
+        {isLoadingMore && <div className="p-4 text-center">Loading more posts...</div>}
+        {!cursor && posts.length > 0 && !isLoadingMore && (<div className="p-4 text-center text-gray-500">End of feed.</div>)}
+      </div>
+    </AppLayout>
+  );
+};
+
+export default FeedPageClient;
diff --git a/src/app/index.tsx b/src/app/index.tsx
new file mode 100644
index 0000000..45384c4
--- /dev/null
+++ b/src/app/index.tsx
@@ -0,0 +1,346 @@
+import React from 'react'
+import {type AtpSessionEvent, type BskyAgent} from '@atproto/api'
+
+import {isWeb} from '#/platform/detection'
+import * as persisted from '#/state/persisted'
+import {useCloseAllActiveElements} from '#/state/util'
+import {useGlobalDialogsControlContext} from '#/components/dialogs/Context'
+import {emitSessionDropped} from '../events'
+import {
+  agentToSessionAccount,
+  type BskyAppAgent,
+  createAgentAndCreateAccount,
+  createAgentAndLogin,
+  createAgentAndResume,
+  sessionAccountToSession,
+} from './agent'
+import {getInitialState, reducer} from './reducer'
+
+export {isSignupQueued} from './util'
+import {addSessionDebugLog} from './logging'
+export type {SessionAccount} from '#/state/session/types'
+import {logger} from '#/logger'
+import {
+  type SessionApiContext,
+  type SessionStateContext,
+} from '#/state/session/types'
+
+const StateContext = React.createContext<SessionStateContext>({
+  accounts: [],
+  currentAccount: undefined,
+  hasSession: false,
+})
+
+const AgentContext = React.createContext<BskyAgent | null>(null)
+
+const ApiContext = React.createContext<SessionApiContext>({
+  createAccount: async () => {},
+  login: async () => {},
+  logoutCurrentAccount: async () => {},
+  logoutEveryAccount: async () => {},
+  resumeSession: async () => {},
+  removeAccount: () => {},
+})
+
+export function Provider({children}: React.PropsWithChildren<{}>) {
+  const cancelPendingTask = useOneTaskAtATime()
+  const [state, dispatch] = React.useReducer(reducer, null, () => {
+    const initialState = getInitialState(persisted.get('session').accounts)
+    addSessionDebugLog({type: 'reducer:init', state: initialState})
+    return initialState
+  })
+
+  const onAgentSessionChange = React.useCallback(
+    (agent: BskyAgent, accountDid: string, sessionEvent: AtpSessionEvent) => {
+      const refreshedAccount = agentToSessionAccount(agent) // Mutable, so snapshot it right away.
+      if (sessionEvent === 'expired' || sessionEvent === 'create-failed') {
+        emitSessionDropped()
+      }
+      dispatch({
+        type: 'received-agent-event',
+        agent,
+        refreshedAccount,
+        accountDid,
+        sessionEvent,
+      })
+    },
+    [],
+  )
+
+  const createAccount = React.useCallback<SessionApiContext['createAccount']>(
+    async (params, metrics) => {
+      addSessionDebugLog({type: 'method:start', method: 'createAccount'})
+      const signal = cancelPendingTask()
+      logger.metric('account:create:begin', {}, {statsig: true})
+      const {agent, account} = await createAgentAndCreateAccount(
+        params,
+        onAgentSessionChange,
+      )
+
+      if (signal.aborted) {
+        return
+      }
+      dispatch({
+        type: 'switched-to-account',
+        newAgent: agent,
+        newAccount: account,
+      })
+      logger.metric('account:create:success', metrics, {statsig: true})
+      addSessionDebugLog({type: 'method:end', method: 'createAccount', account})
+    },
+    [onAgentSessionChange, cancelPendingTask],
+  )
+
+  const login = React.useCallback<SessionApiContext['login']>(
+    async (params, logContext) => {
+      addSessionDebugLog({type: 'method:start', method: 'login'})
+      const signal = cancelPendingTask()
+      const {agent, account} = await createAgentAndLogin(
+        params,
+        onAgentSessionChange,
+      )
+
+      if (signal.aborted) {
+        return
+      }
+      dispatch({
+        type: 'switched-to-account',
+        newAgent: agent,
+        newAccount: account,
+      })
+      logger.metric(
+        'account:loggedIn',
+        {logContext, withPassword: true},
+        {statsig: true},
+      )
+      addSessionDebugLog({type: 'method:end', method: 'login', account})
+    },
+    [onAgentSessionChange, cancelPendingTask],
+  )
+
+  const logoutCurrentAccount = React.useCallback<
+    SessionApiContext['logoutEveryAccount']
+  >(
+    logContext => {
+      addSessionDebugLog({type: 'method:start', method: 'logout'})
+      cancelPendingTask()
+      dispatch({
+        type: 'logged-out-current-account',
+      })
+      logger.metric(
+        'account:loggedOut',
+        {logContext, scope: 'current'},
+        {statsig: true},
+      )
+      addSessionDebugLog({type: 'method:end', method: 'logout'})
+    },
+    [cancelPendingTask],
+  )
+
+  const logoutEveryAccount = React.useCallback<
+    SessionApiContext['logoutEveryAccount']
+  >(
+    logContext => {
+      addSessionDebugLog({type: 'method:start', method: 'logout'})
+      cancelPendingTask()
+      dispatch({
+        type: 'logged-out-every-account',
+      })
+      logger.metric(
+        'account:loggedOut',
+        {logContext, scope: 'every'},
+        {statsig: true},
+      )
+      addSessionDebugLog({type: 'method:end', method: 'logout'})
+    },
+    [cancelPendingTask],
+  )
+
+  const resumeSession = React.useCallback<SessionApiContext['resumeSession']>(
+    async storedAccount => {
+      addSessionDebugLog({
+        type: 'method:start',
+        method: 'resumeSession',
+        account: storedAccount,
+      })
+      const signal = cancelPendingTask()
+      const {agent, account} = await createAgentAndResume(
+        storedAccount,
+        onAgentSessionChange,
+      )
+
+      if (signal.aborted) {
+        return
+      }
+      dispatch({
+        type: 'switched-to-account',
+        newAgent: agent,
+        newAccount: account,
+      })
+      addSessionDebugLog({type: 'method:end', method: 'resumeSession', account})
+    },
+    [onAgentSessionChange, cancelPendingTask],
+  )
+
+  const removeAccount = React.useCallback<SessionApiContext['removeAccount']>(
+    account => {
+      addSessionDebugLog({
+        type: 'method:start',
+        method: 'removeAccount',
+        account,
+      })
+      cancelPendingTask()
+      dispatch({
+        type: 'removed-account',
+        accountDid: account.did,
+      })
+      addSessionDebugLog({type: 'method:end', method: 'removeAccount', account})
+    },
+    [cancelPendingTask],
+  )
+
+  React.useEffect(() => {
+    if (state.needsPersist) {
+      state.needsPersist = false
+      const persistedData = {
+        accounts: state.accounts,
+        currentAccount: state.accounts.find(
+          a => a.did === state.currentAgentState.did,
+        ),
+      }
+      addSessionDebugLog({type: 'persisted:broadcast', data: persistedData})
+      persisted.write('session', persistedData)
+    }
+  }, [state])
+
+  React.useEffect(() => {
+    return persisted.onUpdate('session', nextSession => {
+      const synced = nextSession
+      addSessionDebugLog({type: 'persisted:receive', data: synced})
+      dispatch({
+        type: 'synced-accounts',
+        syncedAccounts: synced.accounts,
+        syncedCurrentDid: synced.currentAccount?.did,
+      })
+      const syncedAccount = synced.accounts.find(
+        a => a.did === synced.currentAccount?.did,
+      )
+      if (syncedAccount && syncedAccount.refreshJwt) {
+        if (syncedAccount.did !== state.currentAgentState.did) {
+          resumeSession(syncedAccount)
+        } else {
+          const agent = state.currentAgentState.agent as BskyAgent
+          const prevSession = agent.session
+          agent.sessionManager.session = sessionAccountToSession(syncedAccount)
+          addSessionDebugLog({
+            type: 'agent:patch',
+            agent,
+            prevSession,
+            nextSession: agent.session,
+          })
+        }
+      }
+    })
+  }, [state, resumeSession])
+
+  const stateContext = React.useMemo(
+    () => ({
+      accounts: state.accounts,
+      currentAccount: state.accounts.find(
+        a => a.did === state.currentAgentState.did,
+      ),
+      hasSession: !!state.currentAgentState.did,
+    }),
+    [state],
+  )
+
+  const api = React.useMemo(
+    () => ({
+      createAccount,
+      login,
+      logoutCurrentAccount,
+      logoutEveryAccount,
+      resumeSession,
+      removeAccount,
+    }),
+    [
+      createAccount,
+      login,
+      logoutCurrentAccount,
+      logoutEveryAccount,
+      resumeSession,
+      removeAccount,
+    ],
+  )
+
+  // @ts-expect-error window type is not declared, debug only
+  if (__DEV__ && isWeb) window.agent = state.currentAgentState.agent
+
+  const agent = state.currentAgentState.agent as BskyAppAgent
+  const currentAgentRef = React.useRef(agent)
+  React.useEffect(() => {
+    if (currentAgentRef.current !== agent) {
+      // Read the previous value and immediately advance the pointer.
+      const prevAgent = currentAgentRef.current
+      currentAgentRef.current = agent
+      addSessionDebugLog({type: 'agent:switch', prevAgent, nextAgent: agent})
+      // We never reuse agents so let's fully neutralize the previous one.
+      // This ensures it won't try to consume any refresh tokens.
+      prevAgent.dispose()
+    }
+  }, [agent])
+
+  return (
+    <AgentContext.Provider value={agent}>
+      <StateContext.Provider value={stateContext}>
+        <ApiContext.Provider value={api}>{children}</ApiContext.Provider>
+      </StateContext.Provider>
+    </AgentContext.Provider>
+  )
+}
+
+function useOneTaskAtATime() {
+  const abortController = React.useRef<AbortController | null>(null)
+  const cancelPendingTask = React.useCallback(() => {
+    if (abortController.current) {
+      abortController.current.abort()
+    }
+    abortController.current = new AbortController()
+    return abortController.current.signal
+  }, [])
+  return cancelPendingTask
+}
+
+export function useSession() {
+  return React.useContext(StateContext)
+}
+
+export function useSessionApi() {
+  return React.useContext(ApiContext)
+}
+
+export function useRequireAuth() {
+  const {hasSession} = useSession()
+  const closeAll = useCloseAllActiveElements()
+  const {signinDialogControl} = useGlobalDialogsControlContext()
+
+  return React.useCallback(
+    (fn: () => void) => {
+      if (hasSession) {
+        fn()
+      } else {
+        closeAll()
+        signinDialogControl.open()
+      }
+    },
+    [hasSession, signinDialogControl, closeAll],
+  )
+}
+
+export function useAgent(): BskyAgent {
+  const agent = React.useContext(AgentContext)
+  if (!agent) {
+    throw Error('useAgent() must be below <SessionProvider>.')
+  }
+  return agent
+}
diff --git a/src/app/layout.tsx b/src/app/layout.tsx
new file mode 100644
index 0000000..a5f719e
--- /dev/null
+++ b/src/app/layout.tsx
@@ -0,0 +1,30 @@
+"use client";
+
+import React from 'react';
+import { Inter } from 'next/font/google';
+import '../../globals.css';
+import { AuthProvider } from '../../AuthContext';
+import { BrowserAudioProvider } from '../contexts/BrowserAudioContext'; // Adjust path as needed
+import ProtectedRoute from '../../ProtectedRoute';
+
+const inter = Inter({ subsets: ['latin'] });
+
+export default function RootLayout({
+  children,
+}: {
+  children: React.ReactNode;
+}) {
+  return (
+    <html lang="en">
+      <body className={inter.className}>
+        <AuthProvider>
+          <BrowserAudioProvider>
+            <ProtectedRoute>
+              {children}
+            </ProtectedRoute>
+          </BrowserAudioProvider>
+        </AuthProvider>
+      </body>
+    </html>
+  );
+}
diff --git a/src/app/notifications/page.tsx b/src/app/notifications/page.tsx
new file mode 100644
index 0000000..5a3a0a6
--- /dev/null
+++ b/src/app/notifications/page.tsx
@@ -0,0 +1,221 @@
+"use client";
+
+import React, { useState, useEffect, useCallback } from 'react';
+import Link from 'next/link';
+import AppLayout from '@/components/AppLayout';
+import { useAuth } from '@/contexts/AuthContext';
+import { listNotifications, updateSeen, Notification, NotificationsPage } from '@/lib/bskyService';
+import { Heart, Repeat2, UserPlus, MessageCircle, AtSign, Quote, AlertCircle, CheckCircle } from 'lucide-react'; // Added AlertCircle, CheckCircle
+import Image from 'next/image'; // For author avatars
+
+const NotificationsPageClient: React.FC = () => {
+  const { agent, isAuthenticated } = useAuth();
+  const [notifications, setNotifications] = useState<Notification[]>([]);
+  const [isLoading, setIsLoading] = useState<boolean>(true);
+  const [isLoadingMore, setIsLoadingMore] = useState<boolean>(false);
+  const [error, setError] = useState<string | null>(null);
+  const [cursor, setCursor] = useState<string | undefined>(undefined);
+  const [isMarkingSeen, setIsMarkingSeen] = useState<boolean>(false);
+  const [seenStatus, setSeenStatus] = useState<string | null>(null); // For feedback on updateSeen
+
+  const fetchNotifications = useCallback(async (loadMore = false) => {
+    if (!agent || !isAuthenticated) {
+      if (!isAuthenticated) setError("Please log in to view notifications.");
+      setIsLoading(false);
+      setIsLoadingMore(false);
+      return;
+    }
+
+    if (!loadMore) {
+      setIsLoading(true);
+      setNotifications([]); // Clear on fresh load
+    } else {
+      setIsLoadingMore(true);
+    }
+    setError(null);
+    const currentCursor = loadMore ? cursor : undefined;
+
+    try {
+      const data: NotificationsPage = await listNotifications(agent, currentCursor, 30);
+      setNotifications(prev => loadMore ? [...prev, ...data.notifications] : data.notifications);
+      setCursor(data.cursor);
+
+      // After fetching, if it's an initial load and there are notifications, mark them as seen.
+      // This is a simplified approach. A more robust solution might only call updateSeen if there are *unread* notifications.
+      if (!loadMore && data.notifications.length > 0) {
+        // Check if there are any unread notifications before marking all as seen
+        const hasUnread = data.notifications.some(n => !n.isRead);
+        if (hasUnread) {
+            setIsMarkingSeen(true);
+            setSeenStatus("Marking notifications as seen...");
+            try {
+                await updateSeen(agent);
+                setSeenStatus("Notifications marked as seen.");
+                // Optimistically update isRead status on currently loaded notifications
+                setNotifications(prev => prev.map(n => ({ ...n, isRead: true })));
+            } catch (seenError) {
+                console.error("Error marking notifications seen:", seenError);
+                setSeenStatus("Failed to mark notifications as seen.");
+            } finally {
+                setIsMarkingSeen(false);
+                // Clear seen status message after a delay
+                setTimeout(() => setSeenStatus(null), 3000);
+            }
+        }
+      }
+    } catch (err) {
+      console.error("Error fetching notifications:", err);
+      setError(err instanceof Error ? err.message : "Unknown error fetching notifications.");
+    } finally {
+      if (!loadMore) setIsLoading(false);
+      else setIsLoadingMore(false);
+    }
+  }, [agent, cursor, isAuthenticated]);
+
+  useEffect(() => {
+    if (agent && isAuthenticated) {
+      fetchNotifications();
+    } else {
+        setIsLoading(false); // Not authenticated, not loading
+        setNotifications([]); // Clear notifications if logged out
+        setCursor(undefined);
+    }
+    // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, [agent, isAuthenticated]); // fetchNotifications is not in deps to control it manually via Load More
+
+  const getNotificationIcon = (reason: string) => {
+    switch (reason) {
+      case 'like': return <Heart className="w-5 h-5 text-pink-500" />;
+      case 'repost': return <Repeat2 className="w-5 h-5 text-green-500" />;
+      case 'follow': return <UserPlus className="w-5 h-5 text-blue-500" />;
+      case 'reply': return <MessageCircle className="w-5 h-5 text-sky-500" />;
+      case 'quote': return <Quote className="w-5 h-5 text-purple-500" />;
+      case 'mention': return <AtSign className="w-5 h-5 text-yellow-500" />;
+      default: return <AlertCircle className="w-5 h-5 text-gray-500" />;
+    }
+  };
+
+  const getActionText = (notification: Notification): string => {
+    switch (notification.reason) {
+      case 'like': return "liked your post";
+      case 'repost': return "reposted your post";
+      case 'follow': return "followed you";
+      case 'reply': return "replied to your post";
+      case 'quote': return "quoted your post";
+      case 'mention': return "mentioned you in a post";
+      default: return `triggered a notification: ${notification.reason}`;
+    }
+  };
+
+  const getSubjectLink = (notification: Notification): string | null => {
+    if (notification.reasonSubject) {
+        // e.g. at://did:plc:userdid/app.bsky.feed.post/recordid
+        const parts = notification.reasonSubject.split('/');
+        if (parts.length >= 3) {
+            const handleOrDid = parts[2]; // This is the DID of the subject's author
+            const recordType = parts[3];
+            const rkey = parts[4];
+            // This logic might need to be more robust based on URI structures
+            if (recordType === 'app.bsky.feed.post' && rkey) {
+                 // To link to a post, we usually need the author's handle for a prettier URL.
+                 // Notification author is `notification.author`
+                 // If the subject is a post by someone else, we don't have their handle directly here.
+                 // For simplicity, we'll link to the generic post viewer if we can construct it.
+                 // A better link would involve fetching the post author's handle.
+                 // For now, this is a placeholder or needs improvement.
+                return `/profile/${handleOrDid}/post/${rkey}`; // This might be incorrect if handleOrDid is not the author of reasonSubject
+            }
+        }
+    } else if (notification.reason === 'follow') {
+        return `/profile/${notification.author.handle}`;
+    }
+    // If the record itself is a post (e.g. for mentions, replies, quotes)
+    if (notification.record && (notification.record as any).$type === 'app.bsky.feed.post') {
+        return `/profile/${notification.author.handle}/post/${notification.uri.split('/').pop()}`;
+    }
+    return null;
+  }
+
+  const renderNotificationItem = (notification: Notification) => {
+    const subjectLink = getSubjectLink(notification);
+    let postTextSnippet = null;
+    if (notification.record && (notification.record as any).text) {
+        postTextSnippet = (notification.record as any).text.substring(0, 100) + ((notification.record as any).text.length > 100 ? '...' : '');
+    }
+
+
+    return (
+      <div key={notification.uri} className={`p-4 flex space-x-3 items-start ${!notification.isRead ? 'bg-blue-900/20' : 'hover:bg-gray-800/50'} transition-colors`}>
+        <div className="flex-shrink-0 mt-1">{getNotificationIcon(notification.reason)}</div>
+        <div className="flex-1">
+          <div className="flex items-center space-x-2 mb-1">
+            {notification.author.avatar && <Image src={notification.author.avatar} alt={notification.author.handle} width={24} height={24} className="rounded-full" />}
+            <Link href={`/profile/${notification.author.handle}`} legacyBehavior>
+              <a className="font-semibold text-gray-100 hover:underline">{notification.author.displayName || `@${notification.author.handle}`}</a>
+            </Link>
+          </div>
+          <p className="text-sm text-gray-300">
+            {getActionText(notification)}
+            {subjectLink ? (
+                <Link href={subjectLink} legacyBehavior><a className="text-blue-400 hover:underline ml-1">(view context)</a></Link>
+            ) : notification.reasonSubject ? (
+                <span className="text-gray-500 ml-1">(context: {notification.reasonSubject.split('/').pop()})</span>
+            ) : null}
+          </p>
+          {postTextSnippet && (
+            <p className="text-xs text-gray-400 mt-1 p-2 bg-gray-700/30 rounded-md border border-gray-600/50">
+              {postTextSnippet}
+            </p>
+          )}
+          <p className="text-xs text-gray-500 mt-1">{new Date(notification.indexedAt).toLocaleString()}</p>
+        </div>
+        {!notification.isRead && <div className="w-2 h-2 bg-blue-500 rounded-full self-center" title="Unread"></div>}
+      </div>
+    );
+  };
+
+  return (
+    <AppLayout currentPage="Notifications" showHeader={true} showSidebarButton={true}>
+      <div className="text-white">
+        <div className="p-3 sticky top-0 bg-black/80 backdrop-blur-md z-10 border-b border-gray-700 flex justify-between items-center">
+          <h1 className="text-lg font-semibold">Notifications</h1>
+          {seenStatus && (
+            <span className={`text-xs px-2 py-1 rounded-md ${isMarkingSeen ? 'text-yellow-300 bg-yellow-700/50' : 'text-green-300 bg-green-700/50'}`}>
+              {isMarkingSeen ? <AlertCircle className="inline w-3 h-3 mr-1"/> : <CheckCircle className="inline w-3 h-3 mr-1"/>}
+              {seenStatus}
+            </span>
+          )}
+        </div>
+
+        {isLoading && notifications.length === 0 && <div className="p-4 text-center">Loading notifications...</div>}
+        {error && <div className="p-4 text-red-400 text-center">Error: {error}</div>}
+
+        {notifications.length === 0 && !isLoading && !error && (
+          <div className="p-4 text-center text-gray-400">You have no notifications yet.</div>
+        )}
+
+        <div className="divide-y divide-gray-700/50">
+          {notifications.map(item => renderNotificationItem(item))}
+        </div>
+
+        {cursor && !isLoadingMore && notifications.length > 0 && (
+          <div className="p-4 flex justify-center">
+            <button
+              onClick={() => fetchNotifications(true)}
+              disabled={isLoadingMore}
+              className="px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-md text-white font-semibold disabled:opacity-50"
+            >
+              {isLoadingMore ? 'Loading...' : 'Load More Notifications'}
+            </button>
+          </div>
+        )}
+        {isLoadingMore && <div className="p-4 text-center">Loading more...</div>}
+        {!cursor && notifications.length > 0 && !isLoading && !isLoadingMore && (
+            <div className="p-4 text-center text-gray-500">End of notifications.</div>
+        )}
+      </div>
+    </AppLayout>
+  );
+};
+
+export default NotificationsPageClient;
diff --git a/src/app/page.tsx b/src/app/page.tsx
new file mode 100644
index 0000000..cecb883
--- /dev/null
+++ b/src/app/page.tsx
@@ -0,0 +1,249 @@
+"use client";
+
+import React, { useState, useEffect, useCallback } from 'react';
+// Removed useSearchParams as we'll set a default feed
+import Image from 'next/image';
+import Link from 'next/link';
+import AppLayout from '@/components/AppLayout'; // Assuming AppLayout is in src/components
+import { useAuth } from '../../AuthContext'; // Assuming AuthContext is at the root
+import { getFeed, FeedPage, FeedViewPost } from '@/lib/bskyService'; // Assuming bskyService is in src/lib
+import { processFacets } from '@/utils/richtextProcessor'; // Assuming richtextProcessor is in src/utils
+import { AppBskyEmbedImages, AppBskyEmbedExternal, AppBskyEmbedRecord, AppBskyEmbedRecordWithMedia, AppBskyRichtextFacet } from '@atproto/api';
+
+// Embed Components (copied from src/app/feeds/page.tsx)
+const ImageEmbedDisplay: React.FC<{ imagesView: AppBskyEmbedImages.View }> = ({ imagesView }) => {
+  if (!imagesView.images || imagesView.images.length === 0) return null;
+  return (
+    <div className={`mt-2 grid grid-cols-${imagesView.images.length === 1 ? 1 : 2} gap-2`}>
+      {imagesView.images.map(img => (
+        <div key={img.thumb} className="relative aspect-[16/9] bg-gray-700 rounded-md overflow-hidden border border-gray-600">
+          <a href={img.fullsize} target="_blank" rel="noopener noreferrer" aria-label={`View image: ${img.alt || 'Embedded image'}`}>
+            <Image src={img.thumb} alt={img.alt || 'Embedded image'} layout="fill" objectFit="cover" />
+          </a>
+        </div>
+      ))}
+    </div>
+  );
+};
+
+const ExternalEmbedDisplay: React.FC<{ externalView: AppBskyEmbedExternal.View }> = ({ externalView }) => {
+  const { uri, title, description, thumb } = externalView.external;
+  return (
+    <a href={uri} target="_blank" rel="noopener noreferrer" className="mt-2 block border border-gray-600 rounded-lg hover:border-gray-500 transition-colors">
+      <div className="flex">
+        {thumb && (
+          <div className="w-24 h-24 relative flex-shrink-0">
+            <Image src={thumb} alt={title || 'External link preview'} layout="fill" objectFit="cover" className="rounded-l-lg" />
+          </div>
+        )}
+        <div className="p-3 overflow-hidden">
+          <p className="text-sm font-semibold text-gray-200 truncate">{title || uri}</p>
+          <p className="text-xs text-gray-400 truncate_lines_2">{description}</p>
+          <p className="text-xs text-blue-400 truncate mt-1">{uri}</p>
+        </div>
+      </div>
+    </a>
+  );
+};
+
+const RecordEmbedDisplay: React.FC<{ recordView: AppBskyEmbedRecord.View }> = ({ recordView }) => {
+  if (AppBskyEmbedRecord.isViewRecord(recordView.record)) {
+    const record = recordView.record;
+    return (
+      <div className="mt-2 p-2 border border-gray-600 rounded-lg">
+        <div className="flex items-center space-x-2 mb-1">
+          {record.author.avatar && <Image src={record.author.avatar} alt="avatar" width={16} height={16} className="rounded-full" />}
+          <span className="text-xs font-semibold text-gray-300">{record.author.displayName || `@${record.author.handle}`}</span>
+        </div>
+        <p className="text-xs text-gray-400 truncate_lines_3">
+            {typeof record.value?.text === 'string' ? record.value.text : '(Quoted post content not available or is not text-based)'}
+        </p>
+        <Link href={`/profile/${record.author.handle}/post/${record.uri.split('/').pop()}`} legacyBehavior>
+          <a className="text-xs text-blue-400 hover:underline mt-1 inline-block">View quoted post</a>
+        </Link>
+      </div>
+    );
+  }
+  return <p className="text-xs text-gray-500 mt-2">(Unsupported quoted content)</p>;
+};
+// End Embed Components
+
+const HomePage: React.FC = () => {
+  // Use `authIsLoading` from useAuth to differentiate from page's own data loading state.
+  const { agent, isAuthenticated, isLoading: authIsLoading, session } = useAuth();
+
+  const [feedUri, setFeedUri] = useState<string | null>(null);
+  const [posts, setPosts] = useState<FeedViewPost[]>([]);
+  // `pageIsLoading` now reflects the page's data fetching, not auth loading.
+  const [pageIsLoading, setPageIsLoading] = useState<boolean>(true);
+  const [isLoadingMore, setIsLoadingMore] = useState<boolean>(false);
+  const [error, setError] = useState<string | null>(null);
+  const [cursor, setCursor] = useState<string | undefined>(undefined);
+
+  useEffect(() => {
+    // This effect determines the feed URI based on auth state.
+    // It should only run when auth state (authIsLoading, isAuthenticated, agent) changes.
+    if (!authIsLoading) { // Only proceed if auth state determination is complete
+      if (isAuthenticated && agent?.session?.did) {
+        const defaultFollowingUri = `at://${agent.session.did}/app.bsky.feed.generator/home`;
+        setFeedUri(defaultFollowingUri);
+        setError(null); // Clear previous errors like "Please log in"
+      } else if (isAuthenticated && (!agent?.session?.did)) {
+        // This case should ideally not happen if login process populates session correctly.
+        setError("Your user ID could not be determined. Unable to load feed.");
+        setPageIsLoading(false); // Stop page loading as we can't proceed.
+      } else if (!isAuthenticated) {
+        // This should ideally be handled by ProtectedRoute redirecting to /signin.
+        // If somehow this page is rendered for an unauth user, show error.
+        setError("Please log in to view your feed.");
+        setPageIsLoading(false); // Stop page loading.
+      }
+    }
+  }, [isAuthenticated, agent, authIsLoading]); // Depends on auth state
+
+  const fetchPosts = useCallback(async (loadMore = false) => {
+    if (!agent || !feedUri || !isAuthenticated) {
+      if (isAuthenticated && !feedUri && !authIsLoading) {
+        setError("Feed URI is not available. Cannot load posts.");
+      }
+      setPageIsLoading(false);
+      return;
+    }
+
+    if (!loadMore) {
+      setPageIsLoading(true);
+      setPosts([]);
+    } else {
+      setIsLoadingMore(true);
+    }
+    setError(null);
+    const currentCursorToUse = loadMore ? cursor : undefined;
+
+    try {
+      const response: FeedPage = await getFeed(agent, feedUri, currentCursorToUse, 25);
+      setPosts(prev => loadMore ? [...prev, ...response.feed] : response.feed);
+      setCursor(response.cursor);
+    } catch (err) {
+      console.error("Error fetching home feed:", err);
+      setError(err instanceof Error ? err.message : "Unknown error fetching feed.");
+    } finally {
+      if (!loadMore) setPageIsLoading(false); else setIsLoadingMore(false);
+    }
+  }, [agent, feedUri, cursor, isAuthenticated, authIsLoading]);
+
+  useEffect(() => {
+    if (feedUri && agent && isAuthenticated && !authIsLoading) {
+      fetchPosts();
+    }
+  }, [feedUri, agent, isAuthenticated, authIsLoading, fetchPosts]);
+
+  const renderRichText = (text: string, facets?: AppBskyRichtextFacet.Main[]) => {
+    if (!facets) facets = [];
+    const segments = processFacets(text, facets);
+    return segments.map((segment, index) => {
+      if (segment.type === 'link') {
+        return <a key={index} href={segment.href} target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:underline">{segment.content}</a>;
+      } else if (segment.type === 'mention') {
+        return <Link key={index} href={segment.href || '#'} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      } else if (segment.type === 'tag') {
+        return <Link key={index} href={`/tags/${segment.tag}`} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      }
+      return <React.Fragment key={index}>{segment.content}</React.Fragment>;
+    });
+  };
+
+  const renderEmbed = (embed: FeedViewPost['post']['embed']) => {
+    if (!embed) return null;
+    if (AppBskyEmbedImages.isView(embed)) {
+      return <ImageEmbedDisplay imagesView={embed} />;
+    } else if (AppBskyEmbedExternal.isView(embed)) {
+      return <ExternalEmbedDisplay externalView={embed} />;
+    } else if (AppBskyEmbedRecord.isView(embed)) {
+      return <RecordEmbedDisplay recordView={embed} />;
+    } else if (AppBskyEmbedRecordWithMedia.isView(embed)) {
+      return (
+        <div>
+          {AppBskyEmbedRecord.isView(embed.record) && <RecordEmbedDisplay recordView={embed.record} />}
+          {(AppBskyEmbedImages.isView(embed.media) || AppBskyEmbedExternal.isView(embed.media)) && renderEmbed(embed.media)}
+        </div>
+      );
+    }
+    return <p className="text-xs text-gray-500 mt-2">(Unsupported embed type)</p>;
+  };
+
+  const renderPost = (item: FeedViewPost) => {
+    const { post, reason, reply } = item;
+    if (!post.record) return null;
+
+    return (
+      <div key={post.uri} className="p-4 border-b border-gray-700 hover:bg-gray-800/50 transition-colors">
+        {reason && reason.$type === 'app.bsky.feed.defs#reasonRepost' && ( <div className="text-xs text-gray-400 mb-1"> Reposted by <Link href={`/profile/${reason.by.handle}`} legacyBehavior><a className="hover:underline">{reason.by.displayName || `@${reason.by.handle}`}</a></Link> </div> )}
+        {reply && 'parent' in reply && reply.parent && 'author' in reply.parent && ( <div className="text-xs text-gray-400 mb-1"> Replying to <Link href={`/profile/${(reply.parent as any).author?.handle}`} legacyBehavior><a className="hover:underline">{(reply.parent as any).author?.displayName || `@${(reply.parent as any).author?.handle}`}</a></Link> </div> )}
+        <div className="flex space-x-3">
+          {post.author.avatar && <Image src={post.author.avatar} alt={`${post.author.displayName || post.author.handle}'s avatar`} width={48} height={48} className="rounded-full bg-gray-600"/>}
+          {!post.author.avatar && <div className="w-12 h-12 rounded-full bg-gray-600 flex-shrink-0"></div>}
+          <div className="flex-1">
+            <div className="flex items-center space-x-1 text-sm">
+              <Link href={`/profile/${post.author.handle}`} legacyBehavior><a className="font-bold text-gray-100 hover:underline">{post.author.displayName || post.author.handle}</a></Link>
+              <Link href={`/profile/${post.author.handle}`} legacyBehavior><a className="text-gray-400">@{post.author.handle}</a></Link>
+              <span className="text-gray-500">·</span>
+              <Link href={`/profile/${post.author.handle}/post/${post.uri.split('/').pop()}`} legacyBehavior><a className="text-gray-500 hover:underline">{new Date(post.indexedAt).toLocaleDateString()}</a></Link>
+            </div>
+            <div className="text-gray-200 mt-1 whitespace-pre-wrap break-words">
+              {renderRichText(typeof post.record.text === 'string' ? post.record.text : '', post.record.facets)}
+            </div>
+            {renderEmbed(post.embed)}
+            <div className="flex space-x-4 text-gray-500 mt-3 text-xs">
+              <span>Replies: {post.replyCount || 0}</span><span>Reposts: {post.repostCount || 0}</span><span>Likes: {post.likeCount || 0}</span>
+            </div>
+          </div>
+        </div>
+      </div>
+    );
+  };
+
+  if (authIsLoading) {
+    return (
+      <div className="flex flex-col min-h-screen bg-black text-white items-center justify-center">
+        <p>Loading session...</p>
+      </div>
+    );
+  }
+
+  return (
+    <AppLayout currentPage="Home" showHeader={true} showSidebarButton={true}>
+      <div className="text-white">
+        {pageIsLoading && !error && <div className="p-4 text-center">Loading your feed...</div>}
+        {error && <div className="p-4 text-center text-red-300 bg-red-900/40 border border-red-700 rounded-lg">Error: {error}</div>}
+
+        {!pageIsLoading && !error && posts.length === 0 && feedUri && (
+          <div className="p-4 text-center text-gray-400">Your feed is empty. Go explore and follow some accounts!</div>
+        )}
+        {!pageIsLoading && !error && !feedUri && isAuthenticated && (
+          <div className="p-4 text-center text-gray-400">Could not determine your feed. Please try again later.</div>
+        )}
+        {!pageIsLoading && !error && !isAuthenticated && (
+           <div className="p-4 text-center text-gray-400">Please sign in to see your feed.</div>
+        )}
+
+        <div className="divide-y divide-gray-700/50">
+          {!pageIsLoading && !error && posts.map(item => renderPost(item))}
+        </div>
+
+        {cursor && !isLoadingMore && posts.length > 0 && !pageIsLoading && !error && (
+          <div className="p-4 flex justify-center">
+            <button onClick={() => fetchPosts(true)} className="px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-md text-white font-semibold">
+              Load More
+            </button>
+          </div>
+        )}
+        {isLoadingMore && <div className="p-4 text-center">Loading more posts...</div>}
+        {!cursor && posts.length > 0 && !isLoadingMore && !pageIsLoading && !error && (
+          <div className="p-4 text-center text-gray-500">End of feed.</div>
+        )}
+      </div>
+    </AppLayout>
+  );
+};
+
+export default HomePage;
diff --git a/src/app/profile/[actor]/page.tsx b/src/app/profile/[actor]/page.tsx
new file mode 100644
index 0000000..3735e70
--- /dev/null
+++ b/src/app/profile/[actor]/page.tsx
@@ -0,0 +1,242 @@
+"use client";
+
+import React, { useState, useEffect, useCallback } from 'react';
+import { useParams, useRouter } from 'next/navigation';
+import Image from 'next/image';
+import Link from 'next/link';
+import AppLayout from '@/components/AppLayout';
+import { useAuth } from '@/contexts/AuthContext';
+import { getProfile, getAuthorFeed, FeedViewPost, FeedPage } from '@/lib/bskyService'; // Added getAuthorFeed, FeedViewPost, FeedPage
+import type { AppBskyActorDefs, AppBskyEmbedImages, AppBskyEmbedExternal, AppBskyEmbedRecord, AppBskyEmbedRecordWithMedia, AppBskyRichtextFacet } from '@atproto/api'; // Added embed types
+import { User, Users, ListChecks, LayoutList, Image as ImageIconLucide, MessageSquare, Edit3, UserPlus, UserCheck } from 'lucide-react';
+import { processFacets } from '@/utils/richtextProcessor';
+
+type ProfilePageTab = 'posts' | 'replies_and_posts' | 'media' | 'feeds' | 'lists';
+
+// Basic Embed Components (copied from feeds/page.tsx for now, ideally refactor)
+const ImageEmbedDisplay: React.FC<{ imagesView: AppBskyEmbedImages.View }> = ({ imagesView }) => {
+  if (!imagesView.images || imagesView.images.length === 0) return null;
+  return (
+    <div className={`mt-2 grid grid-cols-${imagesView.images.length === 1 ? 1 : 2} gap-2`}>
+      {imagesView.images.map(img => (
+        <div key={img.thumb} className="relative aspect-[16/9] bg-gray-700 rounded-md overflow-hidden border border-gray-600">
+          <a href={img.fullsize} target="_blank" rel="noopener noreferrer" aria-label={`View image: ${img.alt || 'Embedded image'}`}>
+            <Image src={img.thumb} alt={img.alt || 'Embedded image'} layout="fill" objectFit="cover" />
+          </a>
+        </div>
+      ))}
+    </div>
+  );
+};
+
+const ExternalEmbedDisplay: React.FC<{ externalView: AppBskyEmbedExternal.View }> = ({ externalView }) => {
+  const { uri, title, description, thumb } = externalView.external;
+  return (
+    <a href={uri} target="_blank" rel="noopener noreferrer" className="mt-2 block border border-gray-600 rounded-lg hover:border-gray-500 transition-colors">
+      <div className="flex">
+        {thumb && ( <div className="w-24 h-24 relative flex-shrink-0"><Image src={thumb} alt={title || 'External link preview'} layout="fill" objectFit="cover" className="rounded-l-lg" /></div> )}
+        <div className="p-3 overflow-hidden">
+          <p className="text-sm font-semibold text-gray-200 truncate">{title || uri}</p>
+          <p className="text-xs text-gray-400 truncate_lines_2">{description}</p>
+          <p className="text-xs text-blue-400 truncate mt-1">{uri}</p>
+        </div>
+      </div>
+    </a>
+  );
+};
+
+const RecordEmbedDisplay: React.FC<{ recordView: AppBskyEmbedRecord.View }> = ({ recordView }) => {
+  if (AppBskyEmbedRecord.isViewRecord(recordView.record)) {
+    const record = recordView.record;
+    return (
+      <div className="mt-2 p-2 border border-gray-600 rounded-lg">
+        <div className="flex items-center space-x-2 mb-1">
+          {record.author.avatar && <Image src={record.author.avatar} alt="avatar" width={16} height={16} className="rounded-full" />}
+          <span className="text-xs font-semibold text-gray-300">{record.author.displayName || `@${record.author.handle}`}</span>
+        </div>
+        <p className="text-xs text-gray-400 truncate_lines_3">{typeof record.value?.text === 'string' ? record.value.text : '(Quoted post content not available)'}</p>
+        <Link href={`/profile/${record.author.handle}/post/${record.uri.split('/').pop()}`} legacyBehavior><a className="text-xs text-blue-400 hover:underline mt-1 inline-block">View quoted post</a></Link>
+      </div>
+    );
+  }
+  return <p className="text-xs text-gray-500 mt-2">(Unsupported quoted content)</p>;
+};
+
+
+const BlueSkyProfilePage: React.FC = () => {
+  const params = useParams();
+  const router = useRouter();
+  const { agent, isAuthenticated, session } = useAuth();
+  const actorIdentifier = typeof params.actor === 'string' ? decodeURIComponent(params.actor) : null;
+
+  const [profile, setProfile] = useState<AppBskyActorDefs.ProfileViewDetailed | null>(null);
+  const [isLoadingProfile, setIsLoadingProfile] = useState<boolean>(true);
+  const [profileError, setProfileError] = useState<string | null>(null);
+  const [activeTab, setActiveTab] = useState<ProfilePageTab>('posts');
+
+  const [authorPosts, setAuthorPosts] = useState<FeedViewPost[]>([]);
+  const [postsLoading, setPostsLoading] = useState<boolean>(false);
+  const [postsError, setPostsError] = useState<string | null>(null);
+  const [postsCursor, setPostsCursor] = useState<string | undefined>(undefined);
+
+  const currentAgent = isAuthenticated ? agent : new (require('@atproto/api').BskyAgent)({ service: 'https://public.api.bsky.app' });
+
+
+  useEffect(() => {
+    if (actorIdentifier && currentAgent) { // Use currentAgent that could be public or authenticated
+      setIsLoadingProfile(true);
+      setProfileError(null);
+      getProfile(currentAgent, actorIdentifier)
+        .then(data => setProfile(data))
+        .catch(err => {
+          setProfileError(`Failed to load profile: ${err instanceof Error ? err.message : "Unknown error"}`);
+        })
+        .finally(() => setIsLoadingProfile(false));
+    } else if (!actorIdentifier) {
+      setProfileError("No profile identifier provided.");
+      setIsLoadingProfile(false);
+    }
+  }, [actorIdentifier, currentAgent]); // currentAgent will change with auth state
+
+  const fetchAuthorPosts = useCallback(async (loadMore = false) => {
+    if (!actorIdentifier || !currentAgent) return;
+
+    setPostsLoading(!loadMore);
+    if (loadMore) setPostsLoading(posts.length > 0); // Keep showing posts while loading more
+    else setAuthorPosts([]); // Clear for fresh tab load
+
+    setPostsError(null);
+    const currentPostsCursor = loadMore ? postsCursor : undefined;
+
+    try {
+      const data: FeedPage = await getAuthorFeed(currentAgent, actorIdentifier, currentPostsCursor, 25);
+      setAuthorPosts(prev => loadMore ? [...prev, ...data.feed] : data.feed);
+      setPostsCursor(data.cursor);
+    } catch (err) {
+      setPostsError(`Failed to load posts: ${err instanceof Error ? err.message : "Unknown error"}`);
+    } finally {
+      setPostsLoading(false);
+    }
+  }, [actorIdentifier, currentAgent, postsCursor, posts.length]); // Added posts.length to deps
+
+  useEffect(() => {
+    if (activeTab === 'posts' && actorIdentifier && currentAgent) {
+      fetchAuthorPosts(); // Initial fetch for posts tab
+    }
+    // Add similar useEffects for other tabs when their fetching logic is added
+     // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, [activeTab, actorIdentifier, currentAgent]); // fetchAuthorPosts removed from deps
+
+
+  const renderRichText = (text: string, facets?: AppBskyRichtextFacet.Main[]) => {
+    const segments = processFacets(text, facets);
+    return segments.map((segment, index) => {
+      if (segment.type === 'link') return <a key={index} href={segment.href} target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:underline">{segment.content}</a>;
+      if (segment.type === 'mention') return <Link key={index} href={segment.href || '#'} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      if (segment.type === 'tag') return <Link key={index} href={`/tags/${segment.tag}`} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      return <React.Fragment key={index}>{segment.content}</React.Fragment>;
+    });
+  };
+
+  const renderEmbed = (embed: FeedViewPost['post']['embed']) => {
+    if (!embed) return null;
+    if (AppBskyEmbedImages.isView(embed)) return <ImageEmbedDisplay imagesView={embed} />;
+    if (AppBskyEmbedExternal.isView(embed)) return <ExternalEmbedDisplay externalView={embed} />;
+    if (AppBskyEmbedRecord.isView(embed)) return <RecordEmbedDisplay recordView={embed} />;
+    if (AppBskyEmbedRecordWithMedia.isView(embed)) return (<div>{AppBskyEmbedRecord.isView(embed.record) && <RecordEmbedDisplay recordView={embed.record} />}{(AppBskyEmbedImages.isView(embed.media) || AppBskyEmbedExternal.isView(embed.media)) && renderEmbed(embed.media)}</div>);
+    return <p className="text-xs text-gray-500 mt-2">(Unsupported embed type)</p>;
+  };
+
+  const renderPostItem = (item: FeedViewPost) => {
+    const { post, reason, reply } = item;
+    if (!post.record) return null;
+    return (
+      <div key={post.uri} className="p-4 border-b border-gray-700/50 hover:bg-gray-800/30 transition-colors">
+        {reason && reason.$type === 'app.bsky.feed.defs#reasonRepost' && ( <div className="text-xs text-gray-400 mb-1"> Reposted by <Link href={`/profile/${reason.by.handle}`} legacyBehavior><a className="hover:underline">{reason.by.displayName || `@${reason.by.handle}`}</a></Link> </div> )}
+        {reply && 'parent' in reply && reply.parent && 'author' in reply.parent && ( <div className="text-xs text-gray-400 mb-1"> Replying to <Link href={`/profile/${(reply.parent as any).author?.handle}`} legacyBehavior><a className="hover:underline">{(reply.parent as any).author?.displayName || `@${(reply.parent as any).author?.handle}`}</a></Link> </div> )}
+        <div className="flex space-x-3">
+          {post.author.avatar && <Image src={post.author.avatar} alt={`${post.author.displayName || post.author.handle}'s avatar`} width={48} height={48} className="rounded-full bg-gray-600"/>}
+          {!post.author.avatar && <div className="w-12 h-12 rounded-full bg-gray-600 flex-shrink-0"></div>}
+          <div className="flex-1">
+            <div className="flex items-center space-x-1 text-sm">
+              <Link href={`/profile/${post.author.handle}`} legacyBehavior><a className="font-bold text-gray-100 hover:underline">{post.author.displayName || post.author.handle}</a></Link>
+              <Link href={`/profile/${post.author.handle}`} legacyBehavior><a className="text-gray-400">@{post.author.handle}</a></Link>
+              <span className="text-gray-500">·</span>
+              <Link href={`/profile/${post.author.handle}/post/${post.uri.split('/').pop()}`} legacyBehavior><a className="text-gray-500 hover:underline">{new Date(post.indexedAt).toLocaleDateString()}</a></Link>
+            </div>
+            <div className="text-gray-200 mt-1 whitespace-pre-wrap break-words">{renderRichText(typeof post.record.text === 'string' ? post.record.text : '', post.record.facets)}</div>
+            {renderEmbed(post.embed)}
+            <div className="flex space-x-4 text-gray-500 mt-3 text-xs"><span>Replies: {post.replyCount || 0}</span><span>Reposts: {post.repostCount || 0}</span><span>Likes: {post.likeCount || 0}</span></div>
+          </div>
+        </div>
+      </div>
+    );
+  };
+
+  const renderDescription = () => {
+    if (!profile?.description) return null;
+    const segments = processFacets(profile.description, profile.descriptionFacets as AppBskyRichtextFacet.Main[] | undefined); // Cast as facets can be undefined
+    return segments.map((segment, index) => {
+      if (segment.type === 'link') return <a key={index} href={segment.href} target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:underline">{segment.content}</a>;
+      if (segment.type === 'mention') return <Link key={index} href={segment.href || '#'} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      if (segment.type === 'tag') return <Link key={index} href={`/tags/${segment.tag?.replace(/^#/, '')}`} legacyBehavior><a className="text-blue-400 hover:underline">{segment.content}</a></Link>;
+      return <React.Fragment key={index}>{segment.content}</React.Fragment>;
+    });
+  };
+
+  const TabButton: React.FC<{tabId: ProfilePageTab, currentTab: ProfilePageTab, label: string, icon?: React.ReactNode}> = ({tabId, currentTab, label, icon}) => (
+    <button onClick={() => setActiveTab(tabId)} className={`flex items-center justify-center space-x-2 px-3 py-2.5 text-sm font-medium border-b-2 transition-colors ${currentTab === tabId ? 'border-blue-500 text-blue-400' : 'border-transparent text-gray-400 hover:text-gray-200 hover:border-gray-500'}`}>{icon}<span>{label}</span></button>
+  );
+
+  if (isLoadingProfile) return <AppLayout currentPage="Profile" showHeader={true}><div className="p-4 text-center text-white">Loading profile...</div></AppLayout>;
+  if (profileError) return <AppLayout currentPage="Error" showHeader={true}><div className="p-4 text-center text-red-400">Error: {profileError}</div></AppLayout>;
+  if (!profile) return <AppLayout currentPage="Profile Not Found" showHeader={true}><div className="p-4 text-center text-white">Profile not found.</div></AppLayout>;
+
+  const isOwnProfile = profile.did === session?.did;
+
+  return (
+    <AppLayout currentPage={profile.displayName || `@${profile.handle}`} showHeader={true} showSidebarButton={true}>
+      <div className="text-white">
+        <div className="relative">
+          {profile.banner ? <Image src={profile.banner} alt="Banner" width={1200} height={300} objectFit="cover" className="w-full h-48 md:h-64 object-cover" /> : <div className="w-full h-48 md:h-64 bg-gray-700"></div>}
+          <div className="absolute -bottom-12 md:-bottom-16 left-4 md:left-6">
+            {profile.avatar ? <Image src={profile.avatar} alt="Avatar" width={100} height={100} className="w-24 h-24 md:w-32 md:h-32 rounded-full border-4 border-black bg-gray-800" /> : <div className="w-24 h-24 md:w-32 md:h-32 rounded-full border-4 border-black bg-gray-700 flex items-center justify-center"><User size={48} className="text-gray-400"/></div>}
+          </div>
+        </div>
+        <div className="pt-16 md:pt-20 px-4 md:px-6 pb-4">
+          <div className="flex justify-end mb-3">
+            {isOwnProfile ? (<Link href="/bsky-settings" legacyBehavior><a className="px-4 py-1.5 text-sm border border-gray-600 rounded-full hover:bg-gray-700 transition-colors flex items-center space-x-1.5"><Edit3 size={14}/> <span>Edit Profile & Settings</span></a></Link>) : (<button className="px-4 py-1.5 text-sm bg-blue-500 hover:bg-blue-600 rounded-full flex items-center space-x-1.5">{profile.viewer?.following ? <UserCheck size={14}/> : <UserPlus size={14}/>}<span>{profile.viewer?.following ? 'Following' : 'Follow'}</span></button>)}
+          </div>
+          <div><h1 className="text-2xl font-bold">{profile.displayName || profile.handle}</h1><p className="text-sm text-gray-400">@{profile.handle}</p></div>
+          {profile.description && (<div className="mt-2 text-sm text-gray-300 max-w-xl whitespace-pre-wrap break-words">{renderDescription()}</div>)}
+          <div className="mt-3 flex space-x-4 text-sm text-gray-400"><span><span className="font-bold text-gray-200">{profile.followersCount}</span> Followers</span><span><span className="font-bold text-gray-200">{profile.followsCount}</span> Following</span><span><span className="font-bold text-gray-200">{profile.postsCount}</span> Posts</span></div>
+        </div>
+        <div className="border-b border-gray-700 flex overflow-x-auto scrollbar-hide">
+          <TabButton tabId="posts" currentTab={activeTab} label="Posts" icon={<LayoutList size={16}/>} />
+          <TabButton tabId="replies_and_posts" currentTab={activeTab} label="Posts & Replies" icon={<MessageSquare size={16}/>} />
+          <TabButton tabId="media" currentTab={activeTab} label="Media" icon={<ImageIconLucide size={16}/>} />
+          <TabButton tabId="feeds" currentTab={activeTab} label="Feeds" icon={<Users size={16}/>} />
+          <TabButton tabId="lists" currentTab={activeTab} label="Lists" icon={<ListChecks size={16}/>} />
+        </div>
+        <div className="min-h-[300px]"> {/* Added min-height to prevent jumpiness during loading tab content */}
+          {activeTab === 'posts' && (
+            postsLoading && authorPosts.length === 0 ? <div className="p-4 text-center">Loading posts...</div> :
+            postsError ? <div className="p-4 text-red-400 text-center">Error: {postsError}</div> :
+            authorPosts.length === 0 ? <div className="p-4 text-center text-gray-400">No posts yet.</div> :
+            <>
+              <div className="divide-y divide-gray-700/30">{authorPosts.map(item => renderPostItem(item))}</div>
+              {postsCursor && !postsLoading && (<div className="p-4 flex justify-center"><button onClick={() => fetchAuthorPosts(true)} className="px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-md text-white font-semibold">Load More</button></div>)}
+              {!postsCursor && !postsLoading && authorPosts.length > 0 && (<div className="p-4 text-center text-xs text-gray-500">End of posts.</div>)}
+            </>
+          )}
+          {activeTab === 'replies_and_posts' && <div className="text-center py-8 text-gray-400">Posts and replies will appear here. (Fetching not yet implemented)</div>}
+          {activeTab === 'media' && <div className="text-center py-8 text-gray-400">Media posts will appear here. (Fetching not yet implemented)</div>}
+          {activeTab === 'feeds' && <div className="text-center py-8 text-gray-400">User's feeds will appear here. (Fetching not yet implemented)</div>}
+          {activeTab === 'lists' && <div className="text-center py-8 text-gray-400">User's lists will appear here. (Fetching not yet implemented)</div>}
+        </div>
+      </div>
+    </AppLayout>
+  );
+};
+
+export default BlueSkyProfilePage;
diff --git a/src/app/profile/page.tsx b/src/app/profile/page.tsx
new file mode 100644
index 0000000..c3aef30
--- /dev/null
+++ b/src/app/profile/page.tsx
@@ -0,0 +1,156 @@
+"use client";
+
+import React, { useState, useEffect } from 'react';
+import AppLayout from '@/components/AppLayout'; // Assuming AppLayout is in src/components
+import Widget from '@/components/Widget'; // Import the Widget component
+
+// Define available widgets (should match the one in settings page for consistency)
+const availableWidgetsList = [
+  { id: 'currentlyListening', name: 'Currently Listening To' },
+  { id: 'profileStats', name: 'Profile Stats' },
+  { id: 'quickLinks', name: 'Quick Links' },
+  { id: 'latestPost', name: 'My Latest Post' },
+  { id: 'notes', name: 'Quick Notes' },
+  { id: 'moodStatus', name: 'Mood/Status' },
+  { id: 'quoteOfTheDay', name: 'Quote of the Day' },
+  { id: 'trendingTopics', name: 'Trending Topics' },
+  { id: 'photoOfTheDay', name: 'Photo of the Day' },
+  { id: 'personalPhotoGallery', name: 'Personal Photo Gallery' },
+  { id: 'topFriends', name: 'Top Friends' },
+  { id: 'calendarEvents', name: 'Upcoming Events' },
+  { id: 'stockTicker', name: 'Stock Ticker' },
+  { id: 'weather', name: 'Weather Forecast' },
+  { id: 'newsFeed', name: 'News Feed' },
+  { id: 'bookmarks', name: 'My Bookmarks' },
+  { id: 'favoriteYouTubeVideo', name: 'Favorite YouTube Video' },
+  { id: 'clockWidget', name: 'Clock' },
+  { id: 'stickyNote', name: 'Sticky Note' },
+  { id: 'countdownTimer', name: 'Countdown Timer' },
+  { id: 'simpleTodoList', name: 'Simple To-Do List' },
+  { id: 'digitalBookshelf', name: 'Digital Bookshelf' },
+  { id: 'recipeOfTheDay', name: 'Recipe of the Day' },
+  { id: 'askMeAnythingBox', name: 'Ask Me Anything Box' },
+  { id: 'guestbook', name: 'Guestbook' },
+  { id: 'miniPoll', name: 'Mini Poll' },
+  { id: 'githubProjectShowcase', name: 'GitHub Projects' },
+  { id: 'artGallerySnippet', name: 'Art Gallery Snippet' },
+  { id: 'deviceBattery', name: 'Device Battery' },
+  { id: 'pinnedPostWidget', name: 'Pinned Post' },
+];
+
+interface ConfiguredWidget {
+  instanceId: string;
+  widgetId: string;
+  page: 1 | 2;
+  row: 0 | 1;
+  col: 0 | 1;
+  size: '1x1' | '1x2' | '2x1' | '2x2';
+}
+
+const ProfilePage: React.FC = () => {
+  const [configuredWidgetsFromStorage, setConfiguredWidgetsFromStorage] = useState<ConfiguredWidget[]>([]);
+  const [currentPage, setCurrentPage] = useState<number>(1);
+
+  useEffect(() => {
+    if (typeof window !== 'undefined') {
+      const savedLayout = localStorage.getItem('userConfiguredWidgetsLayout_v2');
+      if (savedLayout) {
+        try {
+          const parsedLayout = JSON.parse(savedLayout);
+          if (Array.isArray(parsedLayout)) { // Add more validation as needed
+            setConfiguredWidgetsFromStorage(parsedLayout);
+          } else {
+            setConfiguredWidgetsFromStorage([]); // Initialize if invalid
+          }
+        } catch (error) {
+          console.error("Error parsing configured widget layout from localStorage:", error);
+          setConfiguredWidgetsFromStorage([]); // Initialize on error
+        }
+      } else {
+        setConfiguredWidgetsFromStorage([]); // Initialize if not found
+      }
+    }
+  }, []);
+
+  const getWidgetDataById = (id: string | null): { id: string; name: string } | null => {
+    if (!id) return null;
+    const widget = availableWidgetsList.find(w => w.id === id);
+    return widget || null;
+  };
+
+  const handleNextPage = () => {
+    if (currentPage === 1 && configuredWidgetsFromStorage.some(w => w.page === 2)) {
+      setCurrentPage(2);
+    }
+  };
+
+  const handlePreviousPage = () => {
+    if (currentPage === 2) {
+      setCurrentPage(1);
+    }
+  };
+
+  const widgetsForCurrentPage = configuredWidgetsFromStorage.filter(w => w.page === currentPage);
+
+  const showNextPageButton = currentPage === 1 && configuredWidgetsFromStorage.some(w => w.page === 2);
+  const showPreviousPageButton = currentPage === 2;
+
+  return (
+    <AppLayout currentPage="Profile" showSidebarButton={true}>
+      <div className="p-4 text-white">
+        <h1 className="text-2xl font-bold mb-4">Profile</h1>
+        <div className="mb-8">
+          <h2 className="text-xl font-semibold mb-3">My Widget Board - Page {currentPage}</h2>
+          <div className="grid grid-cols-2 grid-rows-2 gap-4 min-h-[calc(2*160px+1rem)]"> {/* Ensure consistent height */}
+            {widgetsForCurrentPage.length === 0 && (
+              <div className="col-span-2 row-span-2 flex items-center justify-center text-gray-500">
+                <p>No widgets configured for this page. Go to settings to add some!</p>
+              </div>
+            )}
+            {widgetsForCurrentPage.map((widgetConfig) => {
+              const widgetDetails = getWidgetDataById(widgetConfig.widgetId);
+              if (!widgetDetails) {
+                return (
+                  <div key={widgetConfig.instanceId} className="bg-red-500 p-2 rounded-md flex items-center justify-center text-xs col-start-1 row-start-1 col-span-1 row-span-1"> {/* Default small size for error */}
+                    Error: Widget ID '{widgetConfig.widgetId}' not found.
+                  </div>
+                );
+              }
+
+              const colSpan = widgetConfig.size.endsWith('2') ? '2' : '1';
+              const rowSpan = widgetConfig.size.startsWith('2') ? '2' : '1';
+
+              const gridPlacementClass = `
+                col-start-${widgetConfig.col + 1}
+                row-start-${widgetConfig.row + 1}
+                col-span-${colSpan}
+                row-span-${rowSpan}
+              `;
+
+              return (
+                <div key={widgetConfig.instanceId} className={`${gridPlacementClass} bg-gray-800 rounded-lg shadow-md flex flex-col overflow-hidden`}> {/* Added overflow-hidden */}
+                  <Widget instanceId={widgetConfig.instanceId} widgetId={widgetDetails.id} widgetName={widgetDetails.name} />
+                </div>
+              );
+            })}
+          </div>
+          {/* Pagination Controls */}
+          <div className="mt-6 flex justify-center items-center space-x-4">
+            {showPreviousPageButton && (
+              <button onClick={handlePreviousPage} className="px-4 py-2 bg-gray-600 hover:bg-gray-500 rounded-md">
+                Previous Page
+              </button>
+            )}
+            {showNextPageButton && (
+              <button onClick={handleNextPage} className="px-4 py-2 bg-gray-600 hover:bg-gray-500 rounded-md">
+                Next Page
+              </button>
+            )}
+          </div>
+        </div>
+      </div>
+    </AppLayout>
+  );
+};
+
+export default ProfilePage;
diff --git a/src/app/settings/profile/page.tsx b/src/app/settings/profile/page.tsx
new file mode 100644
index 0000000..eb188fc
--- /dev/null
+++ b/src/app/settings/profile/page.tsx
@@ -0,0 +1,162 @@
+"use client";
+
+import React, { useState, useEffect } from 'react';
+import AppLayout from '@/components/AppLayout'; // Assuming AppLayout is in src/components
+import { useAuth } from '@/contexts/AuthContext'; // Adjusted path
+import { getProfile, getPreferences } from '@/lib/bskyService'; // Added getPreferences
+import type { AppBskyActorDefs } from '@atproto/api'; // Import the specific type
+
+const ProfileSettingsPage: React.FC = () => {
+  const [musicUrlInput, setMusicUrlInput] = useState<string>("");
+  const { agent, isAuthenticated, session } = useAuth(); // Get agent and session handle
+
+  const [bskyProfile, setBskyProfile] = useState<AppBskyActorDefs.ProfileViewDetailed | null>(null);
+  const [fetchError, setFetchError] = useState<string | null>(null);
+  const [isLoadingProfile, setIsLoadingProfile] = useState<boolean>(false);
+
+
+  // Load saved music URL from localStorage on mount
+  useEffect(() => {
+    if (typeof window !== 'undefined') {
+      const savedUrl = localStorage.getItem('profileMusicUrl');
+      if (savedUrl) {
+        setMusicUrlInput(savedUrl);
+      }
+    }
+  }, []);
+
+  // Fetch BlueSky profile data
+  useEffect(() => {
+    const fetchProfileData = async () => {
+      if (isAuthenticated && agent && session?.handle) {
+        setIsLoadingProfile(true);
+        setFetchError(null);
+        try {
+          console.log(`Fetching BlueSky profile for: ${session.handle}`);
+          const profileData = await getProfile(agent, session.handle);
+          setBskyProfile(profileData);
+          console.log("Fetched BlueSky Profile:", profileData);
+        } catch (err) {
+          console.error("Failed to fetch BlueSky profile:", err);
+          setFetchError(err instanceof Error ? err.message : "Unknown error fetching BlueSky profile.");
+          setBskyProfile(null);
+        } finally {
+          setIsLoadingProfile(false);
+        }
+      } else {
+        setBskyProfile(null); // Clear profile if not authenticated or no agent/handle
+        setIsLoadingProfile(false);
+      }
+    };
+
+    fetchProfileData();
+  }, [agent, isAuthenticated, session]);
+
+  // Temp: useEffect to fetch and log all preferences
+  useEffect(() => {
+    const fetchAndLogPreferences = async () => {
+      if (isAuthenticated && agent) {
+        try {
+          console.log("Attempting to fetch all BlueSky preferences...");
+          const preferences = await getPreferences(agent); // Using the existing service function
+          console.log("Raw BlueSky Preferences Response:", JSON.stringify(preferences, null, 2));
+          // You can also iterate and log individual preference types if helpful
+          preferences.forEach(pref => {
+            console.log(`Preference type: ${pref.$type}, value:`, pref);
+          });
+        } catch (error) {
+          console.error("Error fetching BlueSky preferences for logging:", error);
+        }
+      }
+    };
+    // Run this once when agent is available and user is authenticated
+    // Add a small delay or a button if you want to avoid running on every mount/auth change during dev
+    if (agent && isAuthenticated) {
+       // setTimeout(fetchAndLogPreferences, 2000); // Example delay
+       fetchAndLogPreferences(); // Or call directly
+    }
+  }, [agent, isAuthenticated]);
+
+
+  const handleSaveMusicUrl = () => {
+    if (typeof window !== 'undefined') {
+      localStorage.setItem('profileMusicUrl', musicUrlInput);
+      alert("Profile Music URL saved!"); // Simple feedback
+    }
+  };
+
+  return (
+    <AppLayout currentPage="Profile Settings" showSidebarButton={true}>
+      <div className="p-4 text-white">
+        <h1 className="text-2xl font-bold mb-6">Profile Settings</h1>
+
+        {/* Profile Background Music Section */}
+        <div className="mb-8 p-4 bg-gray-800 rounded-lg">
+          <h2 className="text-xl font-semibold mb-3">Profile Background Music</h2>
+          <p className="text-sm text-gray-400 mb-2">
+            Paste a URL to your favorite track (e.g., YouTube, SoundCloud, Spotify embed link).
+          </p>
+          <div className="flex items-center space-x-2">
+            <input
+              type="text"
+              value={musicUrlInput}
+              onChange={(e) => setMusicUrlInput(e.target.value)}
+              placeholder="Enter music URL (e.g., YouTube, SoundCloud)"
+              className="flex-grow p-2 bg-gray-700 border border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500"
+            />
+            <button
+              onClick={handleSaveMusicUrl}
+              className="px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-md font-semibold"
+            >
+              Save URL
+            </button>
+          </div>
+        </div>
+
+        {/* Other profile settings can be added here in the future */}
+
+        {/* BlueSky Account Details Section */}
+        <div className="mt-8 p-4 bg-gray-800 rounded-lg">
+          <h2 className="text-xl font-semibold mb-3">BlueSky Account Details</h2>
+          {!isAuthenticated ? (
+            <p className="text-gray-400">Please log in to BlueSky to see profile details.</p>
+          ) : isLoadingProfile ? (
+            <p className="text-gray-400">Loading BlueSky profile...</p>
+          ) : fetchError ? (
+            <div className="text-red-400">
+              <p>Error fetching BlueSky profile:</p>
+              <p className="text-sm">{fetchError}</p>
+            </div>
+          ) : bskyProfile ? (
+            <div className="space-y-2 text-sm">
+              <div>
+                <span className="font-semibold text-gray-300">Display Name: </span>
+                <span className="text-gray-100">{bskyProfile.displayName || '(Not set)'}</span>
+              </div>
+              <div>
+                <span className="font-semibold text-gray-300">Handle: </span>
+                <span className="text-gray-100">@{bskyProfile.handle}</span>
+              </div>
+              {bskyProfile.description && (
+                 <div>
+                  <span className="font-semibold text-gray-300">Bio: </span>
+                  <p className="text-gray-200 whitespace-pre-wrap break-words">{bskyProfile.description}</p>
+                </div>
+              )}
+               {bskyProfile.avatar && (
+                <div className="mt-2">
+                  <span className="font-semibold text-gray-300 block mb-1">Avatar:</span>
+                  <img src={bskyProfile.avatar} alt="Avatar" className="w-20 h-20 rounded-full border border-gray-600"/>
+                </div>
+              )}
+            </div>
+          ) : (
+            <p className="text-gray-400">Could not load BlueSky profile. Ensure you are logged in and the handle is available.</p>
+          )}
+        </div>
+      </div>
+    </AppLayout>
+  );
+};
+
+export default ProfileSettingsPage;
diff --git a/src/app/signin/page.tsx b/src/app/signin/page.tsx
new file mode 100644
index 0000000..f24437f
--- /dev/null
+++ b/src/app/signin/page.tsx
@@ -0,0 +1,126 @@
+"use client";
+
+import React, { useState, useEffect } from 'react'; // Added useEffect
+import { useRouter } from 'next/navigation';
+import { useAuth } from '../../../AuthContext';
+
+export default function SignInPage() {
+  const router = useRouter();
+  const { emailLinkLogin, isLoading: authIsLoading, error: authError } = useAuth();
+
+  const [identifier, setIdentifier] = useState('');
+  const [password, setPassword] = useState('');
+  const [emailToken, setEmailToken] = useState('');
+
+  const [needsEmailToken, setNeedsEmailToken] = useState(false);
+  const [formError, setFormError] = useState<string | null>(null);
+  const [isProcessing, setIsProcessing] = useState(false); // Renamed from pageIsLoading to avoid conflict
+
+  const handleSubmit = async (e: React.FormEvent) => {
+    e.preventDefault();
+    setFormError(null);
+    setIsProcessing(true);
+
+    if (!identifier.trim()) {
+      setFormError("Username/handle cannot be empty.");
+      setIsProcessing(false);
+      return;
+    }
+    if (!password.trim()) {
+      setFormError("Password cannot be empty.");
+      setIsProcessing(false);
+      return;
+    }
+    if (needsEmailToken && !emailToken.trim()) {
+      setFormError("Email confirmation code cannot be empty.");
+      setIsProcessing(false);
+      return;
+    }
+
+    try {
+      const result = await emailLinkLogin(identifier, password, needsEmailToken ? emailToken : undefined);
+
+      if (result.success) {
+        router.push('/');
+      } else if (result.needsEmailToken) {
+        setNeedsEmailToken(true);
+        setFormError(result.error || 'Please enter the confirmation code sent to your email.');
+      } else {
+        setFormError(result.error || 'Login failed. Please check your credentials.');
+      }
+    } catch (err) {
+      setFormError(err instanceof Error ? err.message : 'An unexpected error occurred.');
+    } finally {
+      setIsProcessing(false);
+    }
+  };
+
+  useEffect(() => {
+    if (authError) {
+      setFormError(authError);
+    }
+  }, [authError]);
+
+  // Combined loading state for disabling form elements
+  const formIsDisabled = authIsLoading || isProcessing;
+
+  return (
+    <div className="flex flex-col items-center justify-center min-h-screen bg-black text-gray-100 p-4">
+      <div className="p-8 bg-gray-800 rounded-lg shadow-xl w-full max-w-md border border-gray-700">
+        <h1 className="text-3xl font-bold text-center mb-8 text-gray-50">Sign In</h1>
+        <form onSubmit={handleSubmit} className="space-y-6">
+          <div>
+            <label htmlFor="identifier" className="block mb-2 text-sm font-medium text-gray-300">Username or Handle</label>
+            <input
+              type="text"
+              id="identifier"
+              value={identifier}
+              onChange={(e) => setIdentifier(e.target.value)}
+              placeholder="your.handle or did:plc:..."
+              disabled={formIsDisabled}
+              className="w-full p-3 bg-gray-700 border border-gray-600 text-gray-100 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 placeholder-gray-400 transition-colors"
+            />
+          </div>
+          <div>
+            <label htmlFor="password" className="block mb-2 text-sm font-medium text-gray-300">Password</label>
+            <input
+              type="password"
+              id="password"
+              value={password}
+              onChange={(e) => setPassword(e.target.value)}
+              placeholder="••••••••"
+              disabled={formIsDisabled}
+              className="w-full p-3 bg-gray-700 border border-gray-600 text-gray-100 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 placeholder-gray-400 transition-colors"
+            />
+          </div>
+          {needsEmailToken && (
+            <div>
+              <label htmlFor="emailToken" className="block mb-2 text-sm font-medium text-gray-300">Email Confirmation Code</label>
+              <input
+                type="text"
+                id="emailToken"
+                value={emailToken}
+                onChange={(e) => setEmailToken(e.target.value)}
+                placeholder="123456"
+                disabled={formIsDisabled}
+                className="w-full p-3 bg-gray-700 border border-gray-600 text-gray-100 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 placeholder-gray-400 transition-colors"
+              />
+            </div>
+          )}
+          {formError && (
+            <div className="p-3 mb-4 text-sm text-red-300 bg-red-900/40 border border-red-700 rounded-lg text-center">
+              {formError}
+            </div>
+          )}
+          <button
+            type="submit"
+            disabled={formIsDisabled}
+            className="w-full py-3 px-4 text-base font-semibold text-white bg-blue-600 rounded-lg hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-800 disabled:bg-gray-600 disabled:cursor-not-allowed transition-colors"
+          >
+            {formIsDisabled ? 'Processing...' : (needsEmailToken ? 'Confirm Code & Sign In' : 'Sign In')}
+          </button>
+        </form>
+      </div>
+    </div>
+  );
+}
diff --git a/src/app/widget-board-settings/page.tsx b/src/app/widget-board-settings/page.tsx
new file mode 100644
index 0000000..aae7147
--- /dev/null
+++ b/src/app/widget-board-settings/page.tsx
@@ -0,0 +1,584 @@
+"use client";
+
+import React, { useState, useEffect, useCallback } from 'react';
+import AppLayout from '../../components/AppLayout';
+import Modal from '@/components/Modal'; // Import the Modal component
+
+const availableWidgets = [
+  { id: 'currentlyListening', name: 'Currently Listening To' },
+  { id: 'profileStats', name: 'Profile Stats' },
+  { id: 'quickLinks', name: 'Quick Links' },
+  { id: 'latestPost', name: 'My Latest Post' },
+  { id: 'notes', name: 'Quick Notes' },
+  { id: 'moodStatus', name: 'Mood/Status' },
+  { id: 'quoteOfTheDay', name: 'Quote of the Day' },
+  { id: 'trendingTopics', name: 'Trending Topics' },
+  { id: 'photoOfTheDay', name: 'Photo of the Day' },
+  { id: 'personalPhotoGallery', name: 'Personal Photo Gallery' },
+  { id: 'topFriends', name: 'Top Friends' },
+  { id: 'calendarEvents', name: 'Upcoming Events' },
+  { id: 'stockTicker', name: 'Stock Ticker' },
+  { id: 'weather', name: 'Weather Forecast' },
+  { id: 'newsFeed', name: 'News Feed' },
+  { id: 'bookmarks', name: 'My Bookmarks' },
+  { id: 'favoriteYouTubeVideo', name: 'Favorite YouTube Video' },
+  { id: 'clockWidget', name: 'Clock' },
+  { id: 'stickyNote', name: 'Sticky Note' },
+  { id: 'countdownTimer', name: 'Countdown Timer' },
+  { id: 'simpleTodoList', name: 'Simple To-Do List' },
+  { id: 'digitalBookshelf', name: 'Digital Bookshelf' },
+  { id: 'recipeOfTheDay', name: 'Recipe of the Day' },
+  { id: 'askMeAnythingBox', name: 'Ask Me Anything Box' },
+  { id: 'guestbook', name: 'Guestbook' },
+  { id: 'miniPoll', name: 'Mini Poll' },
+  { id: 'githubProjectShowcase', name: 'GitHub Projects' },
+  { id: 'artGallerySnippet', name: 'Art Gallery Snippet' },
+  { id: 'deviceBattery', name: 'Device Battery' },
+  { id: 'pinnedPostWidget', name: 'Pinned Post' },
+  { id: 'virtualPet', name: 'Virtual Pet' },
+  { id: 'recentBlogPosts', name: 'Recent Blog Posts' },
+  { id: 'favoriteMedia', name: 'Favorite Movies/Shows' },
+  // Total 33 widgets
+];
+
+// const MAX_WIDGET_SLOTS = 8; // No longer directly used, layout drives this.
+
+interface ConfiguredWidget {
+  instanceId: string; // Unique ID for this instance of a widget
+  widgetId: string;   // ID of the widget type from availableWidgets
+  page: 1 | 2;
+  row: 0 | 1;
+  col: 0 | 1;
+  size: '1x1' | '1x2' | '2x1' | '2x2';
+}
+
+const WidgetBoardSettingsPage: React.FC = () => {
+  const [configuredWidgets, setConfiguredWidgets] = useState<ConfiguredWidget[]>([]);
+  const [editingWidget, setEditingWidget] = useState<ConfiguredWidget | null>(null); // For layout editing
+
+  // State for content editing modal
+  const [isContentModalOpen, setIsContentModalOpen] = useState(false);
+  const [editingContentWidget, setEditingContentWidget] = useState<ConfiguredWidget | null>(null);
+
+  // State for the quote form within the modal
+  const [currentQuoteText, setCurrentQuoteText] = useState('');
+  const [currentQuoteAuthor, setCurrentQuoteAuthor] = useState('');
+
+  // State for the mood/status form within the modal
+  const [currentStatusText, setCurrentStatusText] = useState('');
+  const [currentMoodEmoji, setCurrentMoodEmoji] = useState('');
+
+  // State for the countdown timer form within the modal
+  const [currentCountdownTitle, setCurrentCountdownTitle] = useState('');
+  const [currentCountdownTargetDate, setCurrentCountdownTargetDate] = useState('');
+
+  // State for the Quick Links form within the modal
+  interface QuickLinkModalItem { id: string; name: string; url: string; }
+  const [currentQuickLinksList, setCurrentQuickLinksList] = useState<QuickLinkModalItem[]>([]);
+  const [newQuickLinkName, setNewQuickLinkName] = useState('');
+  const [newQuickLinkUrl, setNewQuickLinkUrl] = useState('');
+
+  // State for the Sticky Note form within the modal
+  const [currentStickyNoteContent, setCurrentStickyNoteContent] = useState('');
+
+  // State for the Simple To-Do List form within the modal
+  interface TodoItemModal { id: number; text: string; completed: boolean; }
+  const [currentTodoItemsList, setCurrentTodoItemsList] = useState<TodoItemModal[]>([]);
+  const [newTodoItemText, setNewTodoItemText] = useState('');
+
+
+  // Load and Save configuredWidgets
+  useEffect(() => {
+    if (typeof window !== 'undefined') {
+      const saved = localStorage.getItem('userConfiguredWidgetsLayout_v2');
+      if (saved) {
+        try {
+          const parsed = JSON.parse(saved);
+          if (Array.isArray(parsed)) { // Add more validation if needed
+            setConfiguredWidgets(parsed);
+          }
+        } catch (e) {
+          console.error("Error parsing configured widgets from localStorage", e);
+        }
+      }
+    }
+  }, []);
+
+  useEffect(() => {
+    if (typeof window !== 'undefined') {
+      localStorage.setItem('userConfiguredWidgetsLayout_v2', JSON.stringify(configuredWidgets));
+    }
+  }, [configuredWidgets]);
+
+  const getWidgetNameById = (id: string | null): string => {
+    if (!id) return "N/A";
+    return availableWidgets.find(w => w.id === id)?.name || "Unknown Widget";
+  };
+
+  const isValidPlacement = (widgets: ConfiguredWidget[], newWidget: ConfiguredWidget, existingInstanceIdToExclude?: string): boolean => {
+    if (newWidget.row < 0 || newWidget.row > 1 || newWidget.col < 0 || newWidget.col > 1) return false;
+
+    const [sizeRows, sizeCols] = newWidget.size.split('x').map(Number);
+    if (newWidget.row + sizeRows > 2 || newWidget.col + sizeCols > 2) return false; // Exceeds 2x2 page grid
+
+    // Check for overlaps
+    for (const w of widgets) {
+      if (w.instanceId === existingInstanceIdToExclude || w.page !== newWidget.page) continue;
+
+      const [wRows, wCols] = w.size.split('x').map(Number);
+      // Check for intersection of rectangles
+      if (
+        newWidget.col < w.col + wCols &&
+        newWidget.col + sizeCols > w.col &&
+        newWidget.row < w.row + wRows &&
+        newWidget.row + sizeRows > w.row
+      ) {
+        return false; // Overlap detected
+      }
+    }
+    return true;
+  };
+
+  const findFirstAvailableSlot = (page: 1 | 2, sizeToFit: ConfiguredWidget['size'] = '1x1'): { page: 1 | 2, row: 0 | 1, col: 0 | 1 } | null => {
+    const [sRows, sCols] = sizeToFit.split('x').map(Number);
+    for (let r = 0; r <= 2 - sRows; r++) {
+      for (let c = 0; c <= 2 - sCols; c++) {
+        const testWidget: ConfiguredWidget = { instanceId: 'test', widgetId: 'test', page, row: r as 0|1, col: c as 0|1, size: sizeToFit };
+        if (isValidPlacement(configuredWidgets, testWidget)) {
+          return { page, row: r as 0|1, col: c as 0|1 };
+        }
+      }
+    }
+    return null; // No slot found on this page
+  };
+
+
+  const handleAddWidgetToBoard = (widgetId: string) => {
+    if (configuredWidgets.length >= 8 && !configuredWidgets.find(w => w.widgetId === 'pinnedPostWidget' && widgetId === 'pinnedPostWidget')) {
+        // A bit complex: allow adding pinnedPostWidget even if 8 widgets, if it's not already there.
+        // But generally limit to 8 configurable widgets.
+        // For now, let's simplify: if adding pinnedPostWidget, check if it exists. If other, check count.
+        if (widgetId === 'pinnedPostWidget' && configuredWidgets.find(w => w.widgetId === 'pinnedPostWidget')) {
+            alert("Pinned post widget can only be added once.");
+            return;
+        } else if (widgetId !== 'pinnedPostWidget' && configuredWidgets.filter(w => w.widgetId !== 'pinnedPostWidget').length >= 7 && !configuredWidgets.find(w => w.widgetId === 'pinnedPostWidget')) {
+             alert("Max 7 configurable widgets if Pinned Post is not used, or if Pinned Post is used it takes up space making it effectively 1 of the 8 slots.");
+             return;
+        } else if (widgetId !== 'pinnedPostWidget' && configuredWidgets.length >=8) {
+            alert("Maximum 8 widgets (including pinned post) can be configured.");
+            return;
+        }
+    }
+
+
+    let slot = findFirstAvailableSlot(1);
+    let targetPage: 1 | 2 = 1;
+    if (!slot) {
+      slot = findFirstAvailableSlot(2);
+      if (slot) targetPage = 2;
+    }
+
+    if (slot) {
+      const newWidget: ConfiguredWidget = {
+        instanceId: Date.now().toString(),
+        widgetId,
+        page: targetPage,
+        row: slot.row,
+        col: slot.col,
+        size: '1x1', // Default size
+      };
+      if (isValidPlacement(configuredWidgets, newWidget)) {
+        setConfiguredWidgets([...configuredWidgets, newWidget]);
+      } else {
+        alert("Could not find a valid empty slot for this widget. Try adjusting other widgets.");
+      }
+    } else {
+      alert("No available slots on either page for a 1x1 widget.");
+    }
+  };
+
+  const handleUpdateWidgetConfig = (instanceId: string, newConfig: Partial<ConfiguredWidget>) => {
+    setConfiguredWidgets(prev => prev.map(w => {
+      if (w.instanceId === instanceId) {
+        const updatedWidget = { ...w, ...newConfig };
+        // Validate before committing update
+        if (isValidPlacement(prev.filter(conf => conf.instanceId !== instanceId), updatedWidget, instanceId)) {
+          return updatedWidget;
+        } else {
+          alert(`Invalid placement for ${getWidgetNameById(updatedWidget.widgetId)}. Overlaps or out of bounds.`);
+          return w; // Revert to old if invalid
+        }
+      }
+      return w;
+    }));
+    if (editingWidget?.instanceId === instanceId) setEditingWidget(null); // Close edit form on update
+  };
+
+  const handleRemoveWidget = (instanceId: string) => {
+    setConfiguredWidgets(prev => prev.filter(w => w.instanceId !== instanceId));
+    if (editingWidget?.instanceId === instanceId) setEditingWidget(null);
+  };
+
+
+  // UI for editing a specific widget instance
+  const renderEditForm = (widget: ConfiguredWidget) => {
+    if (!editingWidget || editingWidget.instanceId !== widget.instanceId) return null;
+
+    const currentWidgetDetails = { ...editingWidget }; // Work on a copy
+
+    const updateProperty = (prop: keyof ConfiguredWidget, value: any) => {
+        setEditingWidget(prev => prev ? ({...prev, [prop]: value}) : null);
+    };
+
+    return (
+        <div className="mt-2 p-3 bg-gray-600 rounded-md space-y-2 text-xs">
+            <div>
+                <label className="block">Page:</label>
+                <select value={currentWidgetDetails.page} onChange={e => updateProperty('page', parseInt(e.target.value) as 1|2)} className="bg-gray-500 p-1 rounded w-full">
+                    <option value="1">Page 1</option>
+                    <option value="2">Page 2</option>
+                </select>
+            </div>
+            <div>
+                <label className="block">Row (0-1):</label>
+                <select value={currentWidgetDetails.row} onChange={e => updateProperty('row', parseInt(e.target.value) as 0|1)} className="bg-gray-500 p-1 rounded w-full">
+                    <option value="0">0 (Top)</option>
+                    <option value="1">1 (Bottom)</option>
+                </select>
+            </div>
+            <div>
+                <label className="block">Col (0-1):</label>
+                <select value={currentWidgetDetails.col} onChange={e => updateProperty('col', parseInt(e.target.value) as 0|1)} className="bg-gray-500 p-1 rounded w-full">
+                    <option value="0">0 (Left)</option>
+                    <option value="1">1 (Right)</option>
+                </select>
+            </div>
+            <div>
+                <label className="block">Size:</label>
+                <select value={currentWidgetDetails.size} onChange={e => updateProperty('size', e.target.value as ConfiguredWidget['size'])} className="bg-gray-500 p-1 rounded w-full">
+                    <option value="1x1">1x1</option>
+                    <option value="1x2">1x2 (Wide)</option>
+                    <option value="2x1">2x1 (Tall)</option>
+                    <option value="2x2">2x2 (Large)</option>
+                </select>
+            </div>
+            <div className="flex space-x-2">
+                <button onClick={() => handleUpdateWidgetConfig(editingWidget.instanceId, currentWidgetDetails)} className="bg-green-500 hover:bg-green-600 px-2 py-1 rounded">Save Changes</button>
+                <button onClick={() => setEditingWidget(null)} className="bg-gray-400 hover:bg-gray-500 px-2 py-1 rounded">Cancel</button>
+            </div>
+        </div>
+    );
+  };
+
+
+  return (
+    <AppLayout currentPage="Widget Settings" showSidebarButton={true}>
+      <div className="p-4 text-white space-y-6">
+        <h1 className="text-2xl font-bold">Customize Your Widget Board</h1>
+
+        {/* Section 1: Add New Widgets */}
+        <div className="p-4 bg-gray-800 rounded-lg">
+          <h2 className="text-xl font-semibold mb-3">1. Add Widgets to Your Board</h2>
+          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3">
+            {availableWidgets.map(widget => (
+              <button
+                key={widget.id}
+                onClick={() => handleAddWidgetToBoard(widget.id)}
+                className="p-3 bg-blue-600 hover:bg-blue-500 rounded-md text-sm text-left"
+                title={`Add ${widget.name} to board`}
+              >
+                {widget.name}
+              </button>
+            ))}
+          </div>
+        </div>
+
+        {/* Section 2: Configure Added Widgets */}
+        <div className="p-4 bg-gray-800 rounded-lg">
+          <h2 className="text-xl font-semibold mb-3">2. Configured Widgets ({configuredWidgets.length})</h2>
+          {configuredWidgets.length === 0 ? (
+            <p className="text-gray-400">No widgets configured yet. Add some from the list above.</p>
+          ) : (
+            <div className="space-y-3">
+              {configuredWidgets.map(cw => (
+                <div key={cw.instanceId} className="p-3 bg-gray-700 rounded-md text-sm">
+                  <div className="flex justify-between items-center">
+                    <div>
+                      <span className="font-bold">{getWidgetNameById(cw.widgetId)}</span>
+                      <span className="text-xs text-gray-400 ml-2">(Page {cw.page}, R{cw.row}C{cw.col}, Size {cw.size})</span>
+                    </div>
+                    <div className="space-x-2">
+                       <button onClick={() => setEditingWidget(cw)} className="text-xs bg-yellow-500 hover:bg-yellow-600 px-2 py-1 rounded">Edit Layout</button>
+                       {cw.widgetId === 'quoteOfTheDay' && (
+                         <button
+                           onClick={() => {
+                             setEditingContentWidget(cw);
+                             const textKey = `widgetContent_quoteText_${cw.instanceId}`;
+                             const authorKey = `widgetContent_quoteAuthor_${cw.instanceId}`;
+                             setCurrentQuoteText(localStorage.getItem(textKey) || '');
+                             setCurrentQuoteAuthor(localStorage.getItem(authorKey) || '');
+                             setIsContentModalOpen(true);
+                           }}
+                           className="text-xs bg-purple-500 hover:bg-purple-600 px-2 py-1 rounded ml-1"
+                         >
+                           Set Quote
+                         </button>
+                       )}
+                       {cw.widgetId === 'moodStatus' && (
+                        <button
+                          onClick={() => {
+                            setEditingContentWidget(cw);
+                            const textKey = `widgetContent_statusText_${cw.instanceId}`;
+                            const emojiKey = `widgetContent_moodEmoji_${cw.instanceId}`;
+                            setCurrentStatusText(localStorage.getItem(textKey) || '');
+                            setCurrentMoodEmoji(localStorage.getItem(emojiKey) || '🤔'); // Default emoji
+                            setIsContentModalOpen(true);
+                          }}
+                          className="text-xs bg-teal-500 hover:bg-teal-600 px-2 py-1 rounded ml-1"
+                        >
+                          Set Mood
+                        </button>
+                       )}
+                       {cw.widgetId === 'countdownTimer' && (
+                        <button
+                          onClick={() => {
+                            setEditingContentWidget(cw);
+                            const titleKey = `widgetContent_countdownTitle_${cw.instanceId}`;
+                            const dateKey = `widgetContent_countdownTargetDate_${cw.instanceId}`;
+                            setCurrentCountdownTitle(localStorage.getItem(titleKey) || 'My Countdown');
+                            setCurrentCountdownTargetDate(localStorage.getItem(dateKey) || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().slice(0, 16)); // Default to one week from now
+                            setIsContentModalOpen(true);
+                          }}
+                          className="text-xs bg-cyan-500 hover:bg-cyan-600 px-2 py-1 rounded ml-1"
+                        >
+                          Set Timer
+                        </button>
+                       )}
+                       {cw.widgetId === 'quickLinks' && (
+                        <button
+                          onClick={() => {
+                            setEditingContentWidget(cw);
+                            const linksKey = `widgetContent_quickLinks_links_${cw.instanceId}`;
+                            const savedLinks = localStorage.getItem(linksKey);
+                            setCurrentQuickLinksList(savedLinks ? JSON.parse(savedLinks) : []);
+                            setNewQuickLinkName('');
+                            setNewQuickLinkUrl('');
+                            setIsContentModalOpen(true);
+                          }}
+                          className="text-xs bg-lime-500 hover:bg-lime-600 px-2 py-1 rounded ml-1"
+                        >
+                          Manage Links
+                        </button>
+                       )}
+                       {cw.widgetId === 'stickyNote' && (
+                        <button
+                          onClick={() => {
+                            setEditingContentWidget(cw);
+                            const noteKey = `widgetContent_stickyNote_${cw.instanceId}`;
+                            setCurrentStickyNoteContent(localStorage.getItem(noteKey) || '');
+                            setIsContentModalOpen(true);
+                          }}
+                          className="text-xs bg-yellow-600 hover:bg-yellow-700 px-2 py-1 rounded ml-1" // Different color for differentiation
+                        >
+                          Edit Note
+                        </button>
+                       )}
+                       {cw.widgetId === 'simpleTodoList' && (
+                        <button
+                          onClick={() => {
+                            setEditingContentWidget(cw);
+                            const todoKey = `widgetContent_todoItems_${cw.instanceId}`;
+                            const savedTodos = localStorage.getItem(todoKey);
+                            setCurrentTodoItemsList(savedTodos ? JSON.parse(savedTodos) : []);
+                            setNewTodoItemText('');
+                            setIsContentModalOpen(true);
+                          }}
+                          className="text-xs bg-indigo-500 hover:bg-indigo-600 px-2 py-1 rounded ml-1"
+                        >
+                          Manage Tasks
+                        </button>
+                       )}
+                       <button onClick={() => handleRemoveWidget(cw.instanceId)} className="text-xs bg-red-500 hover:bg-red-600 px-2 py-1 rounded ml-1">Remove</button>
+                    </div>
+                  </div>
+                  {renderEditForm(cw)}
+                </div>
+              ))}
+            </div>
+          )}
+        </div>
+
+        {/* Section 3: Visual Preview */}
+        {[1, 2].map(pageNumber => (
+          <div key={`preview-page-${pageNumber}`} className="p-4 bg-gray-800 rounded-lg">
+            <h2 className="text-xl font-semibold mb-3">Page {pageNumber} Preview</h2>
+            <div className="grid grid-cols-2 grid-rows-2 gap-2 h-64 bg-gray-900 p-2 rounded relative"> {/* Fixed height for preview */}
+              {configuredWidgets.filter(w => w.page === pageNumber).map(widgetConfig => {
+                const [sizeRows, sizeCols] = widgetConfig.size.split('x').map(Number);
+                const gridPlacementClass = `
+                  col-start-${widgetConfig.col + 1}
+                  row-start-${widgetConfig.row + 1}
+                  col-span-${sizeCols}
+                  row-span-${sizeRows}
+                `;
+                return (
+                  <div
+                    key={`preview-${widgetConfig.instanceId}`}
+                    className={`${gridPlacementClass} bg-indigo-600/50 border-2 border-indigo-400 rounded-md flex items-center justify-center p-1 text-xs text-center overflow-hidden`}
+                  >
+                    {getWidgetNameById(widgetConfig.widgetId)} <br/> ({widgetConfig.size}) @ R{widgetConfig.row}C{widgetConfig.col}
+                  </div>
+                );
+              })}
+               {/* Overlay with slot numbers for clarity if needed */}
+              {Array.from({length:4}).map((_, idx) => (
+                <div key={`slotguide-${pageNumber}-${idx}`} className={`col-start-${(idx%2)+1} row-start-${Math.floor(idx/2)+1} border border-dashed border-gray-700 text-gray-700 text-xs flex items-center justify-center pointer-events-none`}>
+                    R{Math.floor(idx/2)}C{idx%2}
+                </div>
+              ))}
+            </div>
+          </div>
+        ))}
+
+        {/* Modal for Editing Quote of the Day Content */}
+        {editingContentWidget && editingContentWidget.widgetId === 'quoteOfTheDay' && (
+          <Modal
+            isOpen={isContentModalOpen}
+            onClose={() => {
+              setIsContentModalOpen(false);
+              setEditingContentWidget(null);
+              // Clear form fields on close
+              setCurrentQuoteText('');
+              setCurrentQuoteAuthor('');
+            }}
+            title={`Set Content for: ${getWidgetNameById(editingContentWidget.widgetId)}`}
+          >
+            {/* ... existing forms ... */}
+            {editingContentWidget.widgetId === 'quoteOfTheDay' && (
+              <div className="space-y-4">
+                <div>
+                  <label htmlFor="quoteTextModal" className="block text-sm font-medium text-gray-300 mb-1">Quote Text:</label>
+                  <textarea id="quoteTextModal" value={currentQuoteText} onChange={(e) => setCurrentQuoteText(e.target.value)} rows={3} className="w-full p-2 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500" placeholder="Enter the quote"/>
+                </div>
+                <div>
+                  <label htmlFor="quoteAuthorModal" className="block text-sm font-medium text-gray-300 mb-1">Author:</label>
+                  <input type="text" id="quoteAuthorModal" value={currentQuoteAuthor} onChange={(e) => setCurrentQuoteAuthor(e.target.value)} className="w-full p-2 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500" placeholder="Enter the author's name"/>
+                </div>
+                <button onClick={() => { if (editingContentWidget) { localStorage.setItem(`widgetContent_quoteText_${editingContentWidget.instanceId}`, currentQuoteText); localStorage.setItem(`widgetContent_quoteAuthor_${editingContentWidget.instanceId}`, currentQuoteAuthor); alert("Quote saved!"); setIsContentModalOpen(false); setEditingContentWidget(null); } }} className="w-full px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white rounded-md font-semibold">Save Quote</button>
+              </div>
+            )}
+
+            {editingContentWidget.widgetId === 'moodStatus' && (
+              <div className="space-y-4">
+                <div>
+                  <label htmlFor="statusTextModal" className="block text-sm font-medium text-gray-300 mb-1">Status Text:</label>
+                  <input type="text" id="statusTextModal" value={currentStatusText} onChange={(e) => setCurrentStatusText(e.target.value)} className="w-full p-2 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500" placeholder="How are you feeling?"/>
+                </div>
+                <div>
+                  <label htmlFor="moodEmojiModal" className="block text-sm font-medium text-gray-300 mb-1">Mood Emoji:</label>
+                  <input type="text" id="moodEmojiModal" value={currentMoodEmoji} onChange={(e) => setCurrentMoodEmoji(e.target.value)} className="w-full p-2 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500" placeholder="Enter an emoji (e.g., 😊)" maxLength={5} />
+                </div>
+                <button onClick={() => { if (editingContentWidget) { localStorage.setItem(`widgetContent_statusText_${editingContentWidget.instanceId}`, currentStatusText); localStorage.setItem(`widgetContent_moodEmoji_${editingContentWidget.instanceId}`, currentMoodEmoji); alert("Mood/Status saved!"); setIsContentModalOpen(false); setEditingContentWidget(null); } }} className="w-full px-4 py-2 bg-teal-600 hover:bg-teal-500 text-white rounded-md font-semibold">Save Mood/Status</button>
+              </div>
+            )}
+
+            {editingContentWidget.widgetId === 'countdownTimer' && (
+              <div className="space-y-4">
+                <div>
+                  <label htmlFor="countdownTitleModal" className="block text-sm font-medium text-gray-300 mb-1">Countdown Title:</label>
+                  <input type="text" id="countdownTitleModal" value={currentCountdownTitle} onChange={(e) => setCurrentCountdownTitle(e.target.value)} className="w-full p-2 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500" placeholder="e.g., New Year's Eve"/>
+                </div>
+                <div>
+                  <label htmlFor="countdownTargetDateModal" className="block text-sm font-medium text-gray-300 mb-1">Target Date & Time:</label>
+                  <input type="datetime-local" id="countdownTargetDateModal" value={currentCountdownTargetDate} onChange={(e) => setCurrentCountdownTargetDate(e.target.value)} className="w-full p-2 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500"/>
+                </div>
+                <button onClick={() => { if (editingContentWidget) { localStorage.setItem(`widgetContent_countdownTitle_${editingContentWidget.instanceId}`, currentCountdownTitle); localStorage.setItem(`widgetContent_countdownTargetDate_${editingContentWidget.instanceId}`, currentCountdownTargetDate); alert("Timer saved!"); setIsContentModalOpen(false); setEditingContentWidget(null); } }} className="w-full px-4 py-2 bg-cyan-600 hover:bg-cyan-500 text-white rounded-md font-semibold">Save Timer</button>
+              </div>
+            )}
+
+            {editingContentWidget.widgetId === 'quickLinks' && (
+              <div className="space-y-3 text-sm">
+                {/* ... Quick Links form ... */}
+                <div className="space-y-1">
+                  <label htmlFor="newLinkNameModal" className="block text-xs font-medium text-gray-300">Link Name:</label>
+                  <input type="text" id="newLinkNameModal" value={newQuickLinkName} onChange={(e) => setNewQuickLinkName(e.target.value)} placeholder="e.g., My Portfolio" className="w-full p-1.5 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500"/>
+                </div>
+                <div className="space-y-1">
+                  <label htmlFor="newLinkUrlModal" className="block text-xs font-medium text-gray-300">Link URL:</label>
+                  <input type="url" id="newLinkUrlModal" value={newQuickLinkUrl} onChange={(e) => setNewQuickLinkUrl(e.target.value)} placeholder="https://example.com" className="w-full p-1.5 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500"/>
+                </div>
+                <button onClick={() => { if (newQuickLinkName.trim() && newQuickLinkUrl.trim()) { if (!newQuickLinkUrl.startsWith('http://') && !newQuickLinkUrl.startsWith('https://')) { alert('URL must start with http:// or https://'); return; } setCurrentQuickLinksList(prev => [...prev, {id: Date.now().toString(), name: newQuickLinkName, url: newQuickLinkUrl}]); setNewQuickLinkName(''); setNewQuickLinkUrl(''); } else { alert('Please fill name and URL.'); } }} className="w-full px-3 py-1.5 bg-green-600 hover:bg-green-500 text-white rounded-md text-xs flex items-center justify-center"> Add New Link </button>
+                <hr className="border-gray-600 my-2"/>
+                <h4 className="text-xs font-medium text-gray-400 mb-1">Current Links:</h4>
+                {currentQuickLinksList.length === 0 ? <p className="text-xs text-gray-500 italic">No links added yet.</p> : ( <ul className="space-y-1 max-h-32 overflow-y-auto"> {currentQuickLinksList.map(link => ( <li key={link.id} className="flex items-center justify-between p-1 bg-gray-600 rounded-md"> <span className="truncate text-gray-300" title={`${link.name} (${link.url})`}>{link.name}</span> <button onClick={() => setCurrentQuickLinksList(prev => prev.filter(l => l.id !== link.id))} className="text-red-500 hover:text-red-400 p-0.5 text-xs">Delete</button> </li> ))} </ul> )}
+                <button onClick={() => { if (editingContentWidget) { localStorage.setItem(`widgetContent_quickLinks_links_${editingContentWidget.instanceId}`, JSON.stringify(currentQuickLinksList)); alert("Links saved!"); setIsContentModalOpen(false); setEditingContentWidget(null); } }} className="w-full mt-3 px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white rounded-md font-semibold">Save All Links</button>
+              </div>
+            )}
+
+            {editingContentWidget.widgetId === 'stickyNote' && (
+              <div className="space-y-4">
+                {/* ... Sticky Note form ... */}
+                <div>
+                  <label htmlFor="stickyNoteContentModal" className="block text-sm font-medium text-gray-300 mb-1">Note Content:</label>
+                  <textarea id="stickyNoteContentModal" value={currentStickyNoteContent} onChange={(e) => setCurrentStickyNoteContent(e.target.value)} rows={5} className="w-full p-2 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500" placeholder="Enter your note..."/>
+                </div>
+                <button onClick={() => { if (editingContentWidget) { localStorage.setItem(`widgetContent_stickyNote_${editingContentWidget.instanceId}`, currentStickyNoteContent); alert("Note saved!"); setIsContentModalOpen(false); setEditingContentWidget(null); } }} className="w-full px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-gray-900 rounded-md font-semibold">Save Note</button>
+              </div>
+            )}
+
+            {/* Content for Simple To-Do List */}
+            {editingContentWidget.widgetId === 'simpleTodoList' && (
+              <div className="space-y-3 text-sm">
+                <div className="space-y-1">
+                  <label htmlFor="newTodoItemTextModal" className="block text-xs font-medium text-gray-300">New Task:</label>
+                  <input type="text" id="newTodoItemTextModal" value={newTodoItemText} onChange={(e) => setNewTodoItemText(e.target.value)} placeholder="Enter task description" className="w-full p-1.5 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500"/>
+                </div>
+                <button
+                  onClick={() => {
+                    if (newTodoItemText.trim()) {
+                      setCurrentTodoItemsList(prev => [...prev, {id: Date.now(), text: newTodoItemText, completed: false}]);
+                      setNewTodoItemText('');
+                    } else {
+                      alert('Please enter task text.');
+                    }
+                  }}
+                  className="w-full px-3 py-1.5 bg-green-600 hover:bg-green-500 text-white rounded-md text-xs flex items-center justify-center"
+                >
+                  Add Task
+                </button>
+                <hr className="border-gray-600 my-2"/>
+                <h4 className="text-xs font-medium text-gray-400 mb-1">Current Tasks:</h4>
+                {currentTodoItemsList.length === 0 ? <p className="text-xs text-gray-500 italic">No tasks yet.</p> : (
+                  <ul className="space-y-1 max-h-32 overflow-y-auto">
+                    {currentTodoItemsList.map(item => (
+                      <li key={item.id} className="flex items-center justify-between p-1 bg-gray-600 rounded-md">
+                        <span className={`truncate text-gray-300 ${item.completed ? 'line-through' : ''}`} title={item.text}>{item.text}</span>
+                        <button onClick={() => setCurrentTodoItemsList(prev => prev.filter(t => t.id !== item.id))} className="text-red-500 hover:text-red-400 p-0.5 text-xs">Delete</button>
+                      </li>
+                    ))}
+                  </ul>
+                )}
+                <button
+                  onClick={() => {
+                    if (editingContentWidget) {
+                      const todoKey = `widgetContent_todoItems_${editingContentWidget.instanceId}`;
+                      localStorage.setItem(todoKey, JSON.stringify(currentTodoItemsList));
+                      alert("Task list updated!");
+                      setIsContentModalOpen(false);
+                      setEditingContentWidget(null);
+                    }
+                  }}
+                  className="w-full mt-3 px-4 py-2 bg-indigo-600 hover:bg-indigo-500 text-white rounded-md font-semibold"
+                >
+                  Save Task List
+                </button>
+              </div>
+            )}
+          </Modal>
+        )}
+      </div>
+    </AppLayout>
+  );
+};
+
+export default WidgetBoardSettingsPage;
diff --git a/src/components/AppLayout.tsx b/src/components/AppLayout.tsx
new file mode 100644
index 0000000..956ec0e
--- /dev/null
+++ b/src/components/AppLayout.tsx
@@ -0,0 +1,251 @@
+"use client";
+
+import React, { useState, useContext, useEffect } from 'react';
+import Image from 'next/image';
+import Link from 'next/link'; // Already present, ensure it's used for feeds
+import { Menu, Bell, Home, Search, MessageCircle, User, Settings, Globe, Hash } from 'lucide-react';
+import { usePathname } from 'next/navigation';
+import { useAuth } from '@/contexts/AuthContext';
+import { BrowserAudioContext } from '../contexts/BrowserAudioContext';
+import UserMenu from './UserMenu';
+import { getPreferences, getFeedGenerators } from '@/lib/bskyService'; // Service imports
+import type { AppBskyActorDefs, AppBskyFeedDefs } from '@atproto/api'; // Type imports
+
+interface AppLayoutProps {
+  children: React.ReactNode;
+  currentPage?: string;
+  showHeader?: boolean;
+  showSidebarButton?: boolean;
+}
+
+const AppLayout: React.FC<AppLayoutProps> = ({
+  children,
+  currentPage = 'home',
+  showHeader = true,
+  showSidebarButton = false,
+}) => {
+  const [userMenuOpen, setUserMenuOpen] = useState(false);
+  const pathname = usePathname();
+  const { agent, isAuthenticated, session } = useAuth(); // Added agent
+  const browserAudioCtx = useContext(BrowserAudioContext);
+
+  // State for pinned feeds
+  const [pinnedFeeds, setPinnedFeeds] = useState<AppBskyFeedDefs.GeneratorView[]>([]);
+  const [isLoadingFeeds, setIsLoadingFeeds] = useState<boolean>(false);
+  const [feedError, setFeedError] = useState<string | null>(null);
+
+  // State for top nav visibility
+  const [isFeedsNavVisible, setIsFeedsNavVisible] = useState(true);
+  const [lastScrollY, setLastScrollY] = useState(0);
+
+  useEffect(() => {
+    const fetchUserFeeds = async () => {
+      if (!isAuthenticated || !agent) {
+        setPinnedFeeds([]);
+        setIsLoadingFeeds(false);
+        return;
+      }
+
+      setIsLoadingFeeds(true);
+      setFeedError(null);
+      try {
+        // Step A: Fetch Preferences
+        const prefs = await getPreferences(agent);
+        const savedFeedsPref = prefs.find(
+          (p): p is AppBskyActorDefs.SavedFeedsPref => p.$type === 'app.bsky.actor.defs#savedFeeds'
+        );
+
+        if (savedFeedsPref && savedFeedsPref.pinned && savedFeedsPref.pinned.length > 0) {
+          // Step B: Fetch Feed Generator Details
+          const feedUris = savedFeedsPref.pinned;
+          console.log("Pinned feed URIs:", feedUris);
+          const { feeds: feedGeneratorViews } = await getFeedGenerators(agent, feedUris);
+          setPinnedFeeds(feedGeneratorViews);
+          console.log("Fetched Pinned Feeds:", feedGeneratorViews);
+        } else {
+          setPinnedFeeds([]); // No pinned feeds or preference not found
+        }
+      } catch (err) {
+        console.error("Error fetching feeds:", err);
+        setFeedError(err instanceof Error ? err.message : "Unknown error fetching feeds.");
+        setPinnedFeeds([]);
+      } finally {
+        setIsLoadingFeeds(false);
+      }
+    };
+
+    fetchUserFeeds();
+  }, [agent, isAuthenticated]);
+
+  useEffect(() => {
+    const handleScroll = () => {
+      const currentScrollY = window.scrollY;
+      if (currentScrollY > lastScrollY && currentScrollY > 50) { // Added a threshold of 50px to avoid hiding on small scrolls
+        // Scrolling down
+        setIsFeedsNavVisible(false);
+      } else {
+        // Scrolling up
+        setIsFeedsNavVisible(true);
+      }
+      setLastScrollY(currentScrollY);
+    };
+
+    window.addEventListener('scroll', handleScroll, { passive: true });
+    return () => {
+      window.removeEventListener('scroll', handleScroll);
+    };
+  }, [lastScrollY]);
+
+
+  if (!browserAudioCtx) {
+    // This should not happen if provider is correctly placed at the root
+    return <div>Error: BrowserAudioContext not found.</div>;
+  }
+  const { audioUrl, isPlaying } = browserAudioCtx;
+
+  // Hide bottom tab bar on welcome, signin, and account creation pages
+  const hideTabBar = ['/welcome', '/signin', '/create-account', '/callback'].includes(pathname);
+
+  // Only show the layout if authenticated or on non-protected routes
+  if (!isAuthenticated && !hideTabBar) {
+    return null;
+  }
+
+  return (
+    <div className="flex flex-col min-h-screen bg-black text-white">
+      {showHeader && (
+        <>
+          <header className="sticky top-0 z-40 bg-black border-b border-gray-800">
+            <div className="flex items-center justify-between p-3 h-14"> {/* Added h-14 for explicit height */}
+              <div className="flex items-center">
+                {/* Sidebar button is moved to the new nav bar below */}
+                <h1 className="text-xl font-bold ml-2">{currentPage.charAt(0).toUpperCase() + currentPage.slice(1)}</h1>
+              </div>
+              <div className="relative">
+                <button
+                onClick={() => setUserMenuOpen(!userMenuOpen)}
+                className="p-1 rounded-full hover:bg-gray-800"
+              >
+                <Image
+                  src="/shapes_logo.jpeg"
+                  alt="Profile"
+                  width={32}
+                  height={32}
+                  className="rounded-full"
+                />
+              </button>
+              <UserMenu isOpen={userMenuOpen} onClose={() => setUserMenuOpen(false)} />
+              </div>
+            </div>
+          </header>
+          {/* New Top Navigation Bar for Feeds */}
+          {/* This bar is sticky below the main header. Adjust top-14 if main header height changes. */}
+          <nav className={`sticky top-14 z-30 bg-gray-900/80 backdrop-blur-md border-b border-gray-700 px-3 py-2 flex items-center justify-between h-12 transition-transform duration-300 ease-in-out ${isFeedsNavVisible ? 'translate-y-0' : '-translate-y-full'}`}>
+            {/* Left: Sidebar Toggle */}
+            {showSidebarButton && (
+              <button className="p-2 rounded-full hover:bg-gray-700">
+                <Menu size={20} />
+              </button>
+            )}
+            {!showSidebarButton && <div className="w-10"></div>} {/* Placeholder to maintain layout if no button */}
+
+            {/* Center: Feeds Area */}
+            <div className="flex-grow text-center text-sm text-gray-300 px-2 overflow-x-auto whitespace-nowrap scrollbar-hide">
+              {isLoadingFeeds ? (
+                <span>Loading feeds...</span>
+              ) : feedError ? (
+                <span className="text-red-400">Error: {feedError.substring(0,50)}...</span>
+              ) : pinnedFeeds.length > 0 ? (
+                pinnedFeeds.map((feed, index) => (
+                  <React.Fragment key={feed.uri}>
+                    <Link href={`/feeds?uri=${encodeURIComponent(feed.uri)}`} legacyBehavior>
+                      <a className="hover:text-sky-400 cursor-pointer px-2 py-1 rounded hover:bg-gray-700/50 transition-colors duration-150">
+                        {feed.displayName}
+                      </a>
+                    </Link>
+                    {index < pinnedFeeds.length - 1 && <span className="text-gray-600 mx-1 select-none">|</span>}
+                  </React.Fragment>
+                ))
+              ) : (
+                <>
+                  {/* Default links if no pinned feeds, can also be Link components if they go somewhere */}
+                  <span className="px-2 py-1 cursor-default">My Feed</span>
+                  <span className="text-gray-600 mx-1 select-none">|</span>
+                  <span className="px-2 py-1 cursor-default">Discover</span>
+                </>
+              )}
+            </div>
+
+            {/* Right: Feed Management Button */}
+            <button className="p-2 rounded-full hover:bg-gray-700 flex items-center space-x-1 text-sm">
+              <Hash size={18} />
+              <span>Manage</span>
+            </button>
+          </nav>
+        </>
+      )}
+
+      {/* Adjust flex-grow based on whether the bottom tab bar is hidden or not, and if the new top nav is present */}
+      <main className={`flex-grow ${!hideTabBar ? 'pb-12' : ''} ${showHeader ? 'pt-0' : ''}`}>{children}</main>
+
+      {!hideTabBar && (
+        <nav className="sticky bottom-0 z-40 bg-black border-t border-gray-800"> {/* Ensure this nav is z-40 if new top nav is z-30 */}
+          <div className="flex justify-around py-2">
+            <Link href="/" className={`p-2 rounded-full ${pathname === '/' ? 'text-blue-500' : 'text-gray-500'}`}>
+              <Home size={24} />
+            </Link>
+            <Link href="/explore" className={`p-2 rounded-full ${pathname.startsWith('/explore') ? 'text-blue-500' : 'text-gray-500'}`}>
+              <Search size={24} />
+            </Link>
+            <Link href="/browser" className={`flex flex-col items-center p-2 rounded-full ${pathname === '/browser' ? 'text-blue-500' : 'text-gray-500'}`}>
+              <Globe size={24} />
+              <span className="text-xs">Browser</span>
+            </Link>
+            <Link href="/chat" className={`p-2 rounded-full ${pathname.startsWith('/chat') ? 'text-blue-500' : 'text-gray-500'}`}>
+              <MessageCircle size={24} />
+            </Link>
+            <Link href="/notifications" className={`p-2 rounded-full ${pathname === '/notifications' ? 'text-blue-500' : 'text-gray-500'}`}>
+              <Bell size={24} />
+            </Link>
+            <Link href="/profile" className={`p-2 rounded-full ${pathname === '/profile' ? 'text-blue-500' : 'text-gray-500'}`}>
+              <User size={24} />
+            </Link>
+          </div>
+        </nav>
+      )}
+
+      {/* Persistent Audio Iframe */}
+      {audioUrl && (
+        <iframe
+          src={audioUrl}
+          style={
+            pathname === '/browser' && isPlaying
+              ? { // Visible style (example: small banner at bottom)
+                  position: 'fixed',
+                  bottom: '50px', // Adjust to not overlap main nav if main nav is at bottom
+                  left: '0',
+                  width: '100%',
+                  height: '60px', // Small height for a mini-player like experience
+                  border: 'none',
+                  zIndex: 100, // Ensure it's above other content but below modals if any
+                  backgroundColor: '#222', // Dark background for the player
+                }
+              : { // Hidden but active style
+                  position: 'absolute',
+                  left: '-9999px',
+                  top: '-9999px',
+                  width: '1px',
+                  height: '1px',
+                  border: 'none',
+                }
+          }
+          title="Persistent Audio Player"
+          allow="autoplay; encrypted-media; picture-in-picture" // picture-in-picture might be useful for video
+          sandbox="allow-scripts allow-same-origin allow-popups allow-forms allow-presentation"
+        />
+      )}
+    </div>
+  );
+};
+
+export default AppLayout;
diff --git a/src/components/Modal.tsx b/src/components/Modal.tsx
new file mode 100644
index 0000000..588fbb3
--- /dev/null
+++ b/src/components/Modal.tsx
@@ -0,0 +1,55 @@
+"use client";
+import React from 'react';
+
+interface ModalProps {
+  isOpen: boolean;
+  onClose: () => void;
+  title: string;
+  children: React.ReactNode;
+}
+
+const Modal: React.FC<ModalProps> = ({ isOpen, onClose, title, children }) => {
+  if (!isOpen) return null;
+
+  return (
+    <div
+      className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4 transition-opacity duration-300 ease-in-out"
+      onClick={onClose} // Close on backdrop click
+    >
+      <div
+        className="bg-gray-800 p-6 rounded-lg shadow-xl w-full max-w-md transform transition-all duration-300 ease-in-out scale-95 opacity-0 animate-modalShow"
+        onClick={(e) => e.stopPropagation()} // Prevent modal close when clicking inside modal content
+      >
+        <div className="flex justify-between items-center mb-4">
+          <h2 className="text-xl font-semibold text-white">{title}</h2>
+          <button
+            onClick={onClose}
+            className="text-gray-400 hover:text-gray-200 text-2xl leading-none"
+            aria-label="Close modal"
+          >
+            &times;
+          </button>
+        </div>
+        <div>{children}</div>
+      </div>
+      {/* Basic animation for modal pop-in effect */}
+      <style jsx global>{`
+        @keyframes modalShow {
+          0% {
+            transform: scale(0.95);
+            opacity: 0;
+          }
+          100% {
+            transform: scale(1);
+            opacity: 1;
+          }
+        }
+        .animate-modalShow {
+          animation: modalShow 0.3s forwards;
+        }
+      `}</style>
+    </div>
+  );
+};
+
+export default Modal;
diff --git a/src/components/UserMenu.tsx b/src/components/UserMenu.tsx
new file mode 100644
index 0000000..560768b
--- /dev/null
+++ b/src/components/UserMenu.tsx
@@ -0,0 +1,70 @@
+"use client";
+
+import React from 'react';
+import { useRouter } from 'next/navigation';
+import { LogOut, User, Settings } from 'lucide-react';
+import { useAuth } from '@/contexts/AuthContext';
+
+interface UserMenuProps {
+  isOpen: boolean;
+  onClose: () => void;
+}
+
+const UserMenu: React.FC<UserMenuProps> = ({ isOpen, onClose }) => {
+  const { signOut, session } = useAuth();
+  const router = useRouter();
+
+  if (!isOpen) return null;
+
+  const handleSignOut = async () => {
+    await signOut();
+    router.push('/signin');
+    onClose();
+  };
+
+  const handleProfileClick = () => {
+    router.push('/profile');
+    onClose();
+  };
+
+  const handleSettingsClick = () => {
+    router.push('/settings');
+    onClose();
+  };
+
+  return (
+    <div className="absolute right-0 top-full mt-2 w-48 bg-gray-800 rounded-lg shadow-lg overflow-hidden z-50">
+      <div className="p-3 border-b border-gray-700">
+        <p className="font-medium text-sm truncate">{session?.sub || 'User'}</p>
+        <p className="text-xs text-gray-400 truncate">{session?.aud || '@user.bsky.social'}</p>
+      </div>
+      <div className="py-1">
+        <button
+          onClick={handleProfileClick}
+          className="w-full text-left px-4 py-2 text-sm text-gray-200 hover:bg-gray-700 flex items-center"
+        >
+          <User size={16} className="mr-2" />
+          Profile
+        </button>
+        <button
+          onClick={handleSettingsClick}
+          className="w-full text-left px-4 py-2 text-sm text-gray-200 hover:bg-gray-700 flex items-center"
+        >
+          <Settings size={16} className="mr-2" />
+          Settings
+        </button>
+      </div>
+      <div className="border-t border-gray-700 py-1">
+        <button
+          onClick={handleSignOut}
+          className="w-full text-left px-4 py-2 text-sm text-red-400 hover:bg-gray-700 flex items-center"
+        >
+          <LogOut size={16} className="mr-2" />
+          Sign out
+        </button>
+      </div>
+    </div>
+  );
+};
+
+export default UserMenu;
diff --git a/src/components/Widget.tsx b/src/components/Widget.tsx
new file mode 100644
index 0000000..d065073
--- /dev/null
+++ b/src/components/Widget.tsx
@@ -0,0 +1,816 @@
+"use client";
+
+import React, { useState, useEffect } from 'react';
+import {
+  Music, Users, Image as ImageIcon, Sun, BookOpen, UtensilsCrossed, HelpCircle,
+  Github, Palette, MessageSquare, Send, CheckSquare, Trash2,
+  BatteryCharging, BatteryFull, BatteryLow, BatteryMedium, BatteryWarning, PlusCircle, LinkOff, Link as LinkIcon, Pin, HelpCircle as HelpCircleIcon,
+  CalendarDays, TrendingUp, TrendingDown, Minus, // Added new icons
+  Smile, Rss, Film // Icons for new widgets
+} from 'lucide-react';
+
+interface WidgetProps {
+  instanceId: string;
+  widgetId: string;
+  widgetName: string;
+}
+
+const Widget: React.FC<WidgetProps> = ({ instanceId, widgetId, widgetName }) => {
+  const renderWidgetContent = () => {
+    // Hooks are called at the top level of the component for each specific widget case.
+    // ESLint disable comments are used because these hooks are conditionally rendered based on widgetId.
+    // This is a common pattern for dynamically rendering different components with their own state.
+
+    switch (widgetId) {
+      case 'moodStatus': {
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [statusText, setStatusText] = useState("No status set");
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [moodEmoji, setMoodEmoji] = useState("🤔");
+        const textKey = `widgetContent_statusText_${instanceId}`;
+        const emojiKey = `widgetContent_moodEmoji_${instanceId}`;
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          if (typeof window !== 'undefined') {
+            const savedText = localStorage.getItem(textKey);
+            const savedEmoji = localStorage.getItem(emojiKey);
+            if (savedText !== null) setStatusText(savedText);
+            else setStatusText("No status set"); // Default if nothing saved
+
+            if (savedEmoji !== null) setMoodEmoji(savedEmoji);
+            else setMoodEmoji("🤔"); // Default if nothing saved
+          }
+        }, [instanceId, textKey, emojiKey]); // instanceId in dep array
+
+        return (
+          <div className="text-center p-1">
+            <span className="text-4xl block mb-1" role="img" aria-label="Mood emoji">{moodEmoji || '🤔'}</span>
+            <p className="text-sm text-gray-300 break-words whitespace-pre-wrap">
+              {statusText || "No status set"}
+            </p>
+          </div>
+        );
+      }
+      case 'calendarEvents': { // Was 'upcomingEvents' in prompt, using 'calendarEvents' from list
+        const events = [
+          { title: "Team Meeting", dateTime: "Oct 26, 10:00 AM", location: "Conf Room 1" },
+          { title: "Project Deadline", dateTime: "Oct 28, 5:00 PM", description: "Submit Phase 1 deliverables." },
+          { title: "Lunch with Client", dateTime: "Nov 2, 12:30 PM", location: "The Cafe" },
+        ];
+        return (
+          <div className="space-y-2 text-sm">
+            {events.slice(0, 3).map((event, index) => (
+              <div key={index} className="p-2 bg-gray-700/50 rounded-md">
+                <div className="flex items-center text-gray-200 mb-0.5">
+                  <CalendarDays size={14} className="mr-2 text-purple-400 flex-shrink-0" />
+                  <p className="font-semibold truncate">{event.title}</p>
+                </div>
+                <p className="text-xs text-gray-400 ml-6">{event.dateTime}</p>
+                {event.location && <p className="text-xs text-gray-400 ml-6 truncate">Location: {event.location}</p>}
+                {event.description && <p className="text-xs text-gray-400 ml-6 truncate">{event.description}</p>}
+              </div>
+            ))}
+          </div>
+        );
+      }
+      case 'stockTicker': {
+        const stocks = [
+          { symbol: "AAPL", price: "$175.50", change: "+0.75 (0.43%)", trend: "up" },
+          { symbol: "GOOGL", price: "$130.20", change: "-0.15 (0.11%)", trend: "down" },
+          { symbol: "MSFT", price: "$330.00", change: "0.00 (0.00%)", trend: "flat" },
+        ];
+        return (
+          <div className="space-y-1.5 text-sm">
+            {stocks.map(stock => (
+              <div key={stock.symbol} className="flex items-center justify-between p-1.5 bg-gray-700/50 rounded-md">
+                <div className="flex items-center">
+                  <span className="font-semibold text-gray-200 w-14 truncate" title={stock.symbol}>{stock.symbol}</span>
+                  {stock.trend === 'up' && <TrendingUp size={16} className="text-green-500 ml-1 mr-1 flex-shrink-0" />}
+                  {stock.trend === 'down' && <TrendingDown size={16} className="text-red-500 ml-1 mr-1 flex-shrink-0" />}
+                  {stock.trend === 'flat' && <Minus size={16} className="text-gray-500 ml-1 mr-1 flex-shrink-0" />}
+                </div>
+                <span className="text-gray-300 text-xs w-16 text-right">{stock.price}</span>
+                <span className={`text-xs w-20 text-right ${
+                  stock.trend === 'up' ? 'text-green-500' : stock.trend === 'down' ? 'text-red-500' : 'text-gray-400'
+                }`}>
+                  {stock.change}
+                </span>
+              </div>
+            ))}
+          </div>
+        );
+      }
+      case 'quoteOfTheDay': {
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [quoteText, setQuoteText] = useState("No quote set.");
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [quoteAuthor, setQuoteAuthor] = useState("");
+        const textKey = `widgetContent_quoteText_${instanceId}`;
+        const authorKey = `widgetContent_quoteAuthor_${instanceId}`;
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          if (typeof window !== 'undefined') {
+            const savedText = localStorage.getItem(textKey);
+            const savedAuthor = localStorage.getItem(authorKey);
+            if (savedText !== null) setQuoteText(savedText);
+            if (savedAuthor !== null) setQuoteAuthor(savedAuthor);
+            // No saving from here, only loading or default. Setting is via external means.
+          }
+        }, [instanceId, textKey, authorKey]); // instanceId in dep array if needed for re-fetch on prop change
+
+        return (
+          <div>
+            <blockquote className="text-lg italic text-gray-300">
+              "{quoteText}"
+            </blockquote>
+            {quoteAuthor && <p className="text-right mt-2 text-gray-400">- {quoteAuthor}</p>}
+          </div>
+        );
+      }
+      case 'pinnedPostWidget':
+        return (
+          <div className="text-center p-4 text-gray-300">
+            <Pin size={24} className="mx-auto mb-2 text-sky-400" />
+            <h4 className="font-semibold text-white">My Pinned Post</h4>
+            <p className="text-sm text-gray-400 mt-1">
+              Content of the actual pinned post would appear here. This could be text, an image, or a link.
+            </p>
+          </div>
+        );
+      case 'quickLinks': {
+        interface LinkItem { id: number; name: string; url: string; } // id can be string if Date.now().toString()
+        const lsLinksKey = `widgetContent_quickLinks_links_${instanceId}`;
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [linksToDisplay, setLinksToDisplay] = useState<LinkItem[]>([]);
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          if (typeof window !== 'undefined') {
+            const savedLinks = localStorage.getItem(lsLinksKey);
+            setLinksToDisplay(savedLinks ? JSON.parse(savedLinks) : []);
+          }
+        // eslint-disable-next-line react-hooks/exhaustive-deps
+        }, [instanceId]); // Rerun if instanceId changes, lsLinksKey is derived
+
+        if (linksToDisplay.length === 0) {
+          return <p className="text-gray-400 text-xs italic text-center">No links configured. Set them in Widget Board settings.</p>;
+        }
+
+        return (
+          <div className="flex flex-col h-full text-sm">
+            <ul className="space-y-1 overflow-y-auto flex-grow" style={{maxHeight: '140px'}}> {/* Increased maxHeight for display-only */}
+              {linksToDisplay.map(link => (
+                <li key={link.id} className="p-1.5 bg-gray-700 rounded-md">
+                  <a
+                    href={link.url}
+                    className="text-blue-400 hover:text-blue-300 hover:underline truncate flex items-center"
+                    target="_blank"
+                    rel="noopener noreferrer"
+                    title={link.url}
+                  >
+                    <LinkIcon size={12} className="mr-1.5 text-gray-500 flex-shrink-0"/>
+                    {link.name}
+                  </a>
+                </li>
+              ))}
+            </ul>
+          </div>
+        );
+      }
+      case 'currentlyListening':
+        return (
+          <div className="flex items-center space-x-3">
+            <div className="w-16 h-16 bg-gray-700 rounded flex items-center justify-center">
+              <Music size={32} className="text-gray-400" />
+            </div>
+            <div>
+              <p className="font-semibold text-gray-200">Song Title - Artist Name</p>
+              <p className="text-sm text-gray-400">Listening on: Spotify</p>
+            </div>
+          </div>
+        );
+      case 'personalPhotoGallery':
+        const galleryImages = [
+          "https://via.placeholder.com/200x150/4A5568/FFFFFF?text=Photo+1", // Dark Gray
+          "https://via.placeholder.com/200x150/718096/FFFFFF?text=Photo+2", // Medium Gray
+        ];
+        return (
+          <div className="w-full">
+            <img
+              src={galleryImages[0]}
+              alt="Personal gallery photo 1"
+              className="rounded-md w-full object-cover h-32 md:h-40" // Fixed height, object-cover
+            />
+            {/* Basic next/prev buttons could be added later here */}
+            {/* <div className="flex justify-between mt-1">
+              <button className="text-xs text-blue-400">Prev</button>
+              <button className="text-xs text-blue-400">Next</button>
+            </div> */}
+          </div>
+        );
+      case 'topFriends':
+        const friends = [
+          { name: "Friend 1", avatarPlaceholder: "F1" },
+          { name: "Friend 2", avatarPlaceholder: "F2" },
+          { name: "Friend 3", avatarPlaceholder: "F3" },
+        ];
+        return (
+          <div className="space-y-3">
+            {friends.map(friend => (
+              <div key={friend.name} className="flex items-center space-x-3">
+                <div className="w-10 h-10 bg-gray-700 rounded-full flex items-center justify-center text-sm text-gray-400">
+                  {/* Using Users icon as a generic avatar placeholder, or initials */}
+                  <Users size={20} />
+                  {/* Alternatively, use friend.avatarPlaceholder for initials */}
+                </div>
+                <span className="text-gray-300">{friend.name}</span>
+              </div>
+            ))}
+          </div>
+        );
+      case 'quickNotes':
+        return <p className="text-gray-300">Quick Notes Widget Content Here</p>;
+      case 'profileStats':
+        return <p className="text-gray-300">Profile Stats Widget Content Here</p>;
+      case 'latestPost':
+        return <p className="text-gray-300">My Latest Post Widget Content Here</p>;
+      case 'favoriteYouTubeVideo':
+        return (
+          <div className="aspect-video">
+            <iframe
+              className="w-full h-full rounded-md"
+              src="https://www.youtube.com/embed/dQw4w9WgXcQ" // Example video
+              title="Favorite YouTube Video"
+              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
+              allowFullScreen
+              sandbox="allow-scripts allow-same-origin allow-popups allow-presentation"
+            ></iframe>
+          </div>
+        );
+      case 'clockWidget':
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString());
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          const timerId = setInterval(() => {
+            setCurrentTime(new Date().toLocaleTimeString());
+          }, 1000);
+          return () => clearInterval(timerId);
+        }, []);
+
+        return (
+          <div className="text-center">
+            <p className="text-3xl font-mono text-gray-100">{currentTime}</p>
+          </div>
+        );
+      case 'weather': // Using existing 'weather' ID as discussed
+        return (
+          <div className="flex flex-col items-center text-center">
+            <Sun size={48} className="text-yellow-400 mb-2" />
+            <p className="text-xl font-semibold text-gray-200">San Francisco</p>
+            <p className="text-3xl text-white">65°F</p>
+            <p className="text-gray-300">Sunny</p>
+          </div>
+        );
+      case 'stickyNote': {
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [noteContent, setNoteContent] = useState("No note set. Edit in settings.");
+        const storageKey = `widgetContent_stickyNote_${instanceId}`;
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          if (typeof window !== 'undefined') {
+            const savedNote = localStorage.getItem(storageKey);
+            setNoteContent(savedNote !== null ? savedNote : "No note set. Edit in settings.");
+          }
+        // eslint-disable-next-line react-hooks/exhaustive-deps
+        }, [instanceId]); // storageKey is derived from instanceId, so instanceId is enough if stable per mount
+
+        return (
+          <div
+            className="w-full h-full bg-yellow-200 text-yellow-900 p-2 rounded-md overflow-y-auto"
+            style={{ whiteSpace: 'pre-wrap', minHeight: '120px', wordWrap: 'break-word' }}
+          >
+            {noteContent}
+          </div>
+        );
+      }
+      case 'countdownTimer': {
+        const lsTitleKey = `widgetContent_countdownTitle_${instanceId}`;
+        const lsTargetDateKey = `widgetContent_countdownTargetDate_${instanceId}`;
+        const defaultTitle = "Countdown";
+        const defaultDate = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().slice(0, 16); // One week from now
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [title, setTitle] = useState(defaultTitle);
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [targetDateStr, setTargetDateStr] = useState(defaultDate);
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [timeLeft, setTimeLeft] = useState('');
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => { // Load data from localStorage
+          if (typeof window !== 'undefined') {
+            const savedTitle = localStorage.getItem(lsTitleKey);
+            const savedTargetDate = localStorage.getItem(lsTargetDateKey);
+            setTitle(savedTitle || defaultTitle);
+            setTargetDateStr(savedTargetDate || defaultDate);
+          }
+        // eslint-disable-next-line react-hooks/exhaustive-deps
+        }, [instanceId]); // Rerun if instanceId changes (e.g. widget replaced in same slot)
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => { // Calculate time left
+          const calculateTimeLeft = () => {
+            const difference = +new Date(targetDateStr) - +new Date();
+            let newTimeLeft = '';
+
+            if (difference > 0) {
+              const days = Math.floor(difference / (1000 * 60 * 60 * 24));
+              const hours = Math.floor((difference / (1000 * 60 * 60)) % 24);
+              const minutes = Math.floor((difference / 1000 / 60) % 60);
+              const seconds = Math.floor((difference / 1000) % 60);
+              newTimeLeft = `${days}d ${hours}h ${minutes}m ${seconds}s`;
+            } else {
+              newTimeLeft = "Countdown finished!";
+            }
+            setTimeLeft(newTimeLeft);
+          };
+
+          calculateTimeLeft(); // Initial calculation
+          const timer = setInterval(calculateTimeLeft, 1000);
+          return () => clearInterval(timer);
+        }, [targetDateStr]);
+
+        return (
+          <div className="text-center p-2 space-y-2">
+            <p className="text-md font-semibold text-gray-100 truncate" title={title}>{title}</p>
+            <p className="text-2xl font-mono text-green-400">{timeLeft}</p>
+          </div>
+        );
+      }
+      case 'deviceBattery': {
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [batteryInfo, setBatteryInfo] = useState<{ level: number; charging: boolean; error: string | null }>({
+          level: 0,
+          charging: false,
+          error: 'Initializing...',
+        });
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          let batteryManager: any = null;
+          let isMounted = true;
+
+          const _updateBatteryStatus = (bm: any) => { // Renamed to avoid conflict
+            if (isMounted) {
+              setBatteryInfo({
+                level: bm.level * 100,
+                charging: bm.charging,
+                error: null,
+              });
+            }
+          };
+
+          const _handleNotSupported = () => { // Renamed to avoid conflict
+            if (isMounted) {
+              setBatteryInfo({ level: 0, charging: false, error: 'Battery API not supported.' });
+            }
+          };
+
+          if (typeof navigator.getBattery === 'function') {
+            navigator.getBattery()
+              .then(bm => {
+                if (!isMounted) return;
+                batteryManager = bm;
+                _updateBatteryStatus(bm); // Use renamed function
+
+                // Store bound functions to be able to remove them
+                const chargingChangeHandler = () => _updateBatteryStatus(bm);
+                const levelChangeHandler = () => _updateBatteryStatus(bm);
+
+                bm.addEventListener('chargingchange', chargingChangeHandler);
+                bm.addEventListener('levelchange', levelChangeHandler);
+
+                batteryManager._cleanupListeners = () => {
+                  bm.removeEventListener('chargingchange', chargingChangeHandler);
+                  bm.removeEventListener('levelchange', levelChangeHandler);
+                };
+              })
+              .catch(err => {
+                if (isMounted) {
+                  console.error("Error getting battery status:", err);
+                  setBatteryInfo({ level: 0, charging: false, error: 'Battery status unavailable.' });
+                }
+              });
+          } else {
+            _handleNotSupported(); // Use renamed function
+          }
+
+          return () => {
+            isMounted = false;
+            if (batteryManager && batteryManager._cleanupListeners) {
+              batteryManager._cleanupListeners();
+            }
+          };
+        }, []); // Empty dependency array, runs once
+
+        const renderBatteryIcon = () => {
+          if (batteryInfo.error && batteryInfo.error !== 'Initializing...') return <BatteryWarning size={32} className="text-red-400" />;
+          if (batteryInfo.charging) return <BatteryCharging size={32} className="text-green-400" />;
+          if (batteryInfo.level > 80) return <BatteryFull size={32} className="text-green-400" />;
+          if (batteryInfo.level > 40) return <BatteryMedium size={32} className="text-yellow-400" />;
+          if (batteryInfo.level > 0) return <BatteryLow size={32} className="text-orange-500" />;
+          if (batteryInfo.error === 'Initializing...') return <HelpCircleIcon size={32} className="text-gray-500"/>;
+          return <BatteryWarning size={32} className="text-red-400" />;
+        };
+
+        return (
+          <div className="flex flex-col items-center justify-center h-full text-center">
+            {renderBatteryIcon()}
+            {batteryInfo.error && batteryInfo.error !== 'Initializing...' ? (
+              <p className="mt-2 text-sm text-red-400">{batteryInfo.error}</p>
+            ) : !batteryInfo.error ? (
+              <>
+                <p className="mt-1 text-2xl font-bold text-white">{Math.round(batteryInfo.level)}%</p>
+                <p className="text-xs text-gray-400">{batteryInfo.charging ? 'Charging' : 'Not Charging'}</p>
+              </>
+            ) : null }
+          </div>
+        );
+      }
+      case 'guestbook': {
+        interface GuestbookEntry { id: number; name: string; message: string; date: string; }
+        const lsGuestbookKey = `widgetContent_guestbook_entries_${instanceId}`;
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [entries, setEntries] = useState<GuestbookEntry[]>(() => {
+          if (typeof window !== 'undefined') {
+            const saved = localStorage.getItem(lsGuestbookKey);
+            return saved ? JSON.parse(saved) : [];
+          }
+          return [];
+        });
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [guestName, setGuestName] = useState('');
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [guestMessage, setGuestMessage] = useState('');
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          localStorage.setItem(lsGuestbookKey, JSON.stringify(entries));
+        }, [entries, lsGuestbookKey]);
+
+        const handleAddEntry = () => {
+          if (guestName.trim() === '' || guestMessage.trim() === '') return;
+          const newEntry = {
+            id: Date.now(),
+            name: guestName,
+            message: guestMessage,
+            date: new Date().toLocaleDateString()
+          };
+          setEntries([...entries, newEntry]);
+          setGuestName('');
+          setGuestMessage('');
+        };
+
+        return (
+          <div className="flex flex-col h-full text-sm">
+            <div className="space-y-2 mb-2">
+              <input
+                type="text"
+                placeholder="Your Name"
+                value={guestName}
+                onChange={(e) => setGuestName(e.target.value)}
+                className="w-full p-1.5 bg-gray-700 text-white rounded-md focus:ring-1 focus:ring-blue-500"
+              />
+              <textarea
+                placeholder="Leave a message..."
+                value={guestMessage}
+                onChange={(e) => setGuestMessage(e.target.value)}
+                rows={2}
+                className="w-full p-1.5 bg-gray-700 text-white rounded-md resize-none focus:ring-1 focus:ring-blue-500"
+              />
+              <button onClick={handleAddEntry} className="w-full bg-blue-500 text-white px-3 py-1.5 rounded-md hover:bg-blue-600 flex items-center justify-center space-x-1">
+                <Send size={14}/>
+                <span>Add Message</span>
+              </button>
+            </div>
+            <div className="flex-grow overflow-y-auto space-y-1.5" style={{maxHeight: '80px'}}>
+              {entries.length === 0 && <p className="text-gray-400 text-xs italic">No messages yet.</p>}
+              {entries.slice().reverse().map(entry => ( // Show newest first
+                <div key={entry.id} className="p-1.5 bg-gray-700 rounded-md">
+                  <p className="text-gray-300 break-words">"{entry.message}"</p>
+                  <p className="text-xs text-gray-500 text-right mt-0.5">- {entry.name} on {entry.date}</p>
+                </div>
+              ))}
+            </div>
+          </div>
+        );
+      }
+      case 'miniPoll': {
+        interface PollOption { id: string; text: string; votes: number; }
+        const pollQuestion = "Favorite Season?"; // This could be made configurable too
+        const pollQuestionIdentifier = pollQuestion.replace(/\s/g, '');
+        const lsPollOptionsKey = `widgetContent_miniPoll_options_${instanceId}_${pollQuestionIdentifier}`;
+        const lsPollVotedKey = `widgetContent_miniPoll_voted_${instanceId}_${pollQuestionIdentifier}`;
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [options, setOptions] = useState<PollOption[]>(() => {
+          if (typeof window !== 'undefined') {
+            const saved = localStorage.getItem(lsPollOptionsKey);
+            if (saved) return JSON.parse(saved);
+          }
+          return [
+            { id: 'spring', text: 'Spring', votes: 0 },
+            { id: 'summer', text: 'Summer', votes: 0 },
+            { id: 'autumn', text: 'Autumn', votes: 0 },
+            { id: 'winter', text: 'Winter', votes: 0 },
+          ];
+        });
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [hasVoted, setHasVoted] = useState(() => {
+          if (typeof window !== 'undefined') {
+            return localStorage.getItem(lsPollVotedKey) === 'true';
+          }
+          return false;
+        });
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          localStorage.setItem(lsPollOptionsKey, JSON.stringify(options));
+        }, [options, lsPollOptionsKey]);
+
+        const handleVote = (optionId: string) => {
+          if (hasVoted) return;
+          setOptions(options.map(opt => opt.id === optionId ? { ...opt, votes: opt.votes + 1 } : opt));
+          setHasVoted(true);
+          localStorage.setItem(lsPollVotedKey, 'true');
+        };
+
+        return (
+          <div className="text-sm">
+            <p className="font-semibold text-gray-200 mb-2">{pollQuestion}</p>
+            <div className="space-y-1.5">
+              {options.map(option => (
+                <div key={option.id} className="flex items-center justify-between">
+                  <span className="text-gray-300">{option.text} ({option.votes})</span>
+                  <button
+                    onClick={() => handleVote(option.id)}
+                    disabled={hasVoted}
+                    className={`px-2 py-0.5 text-xs rounded-md flex items-center space-x-1 ${hasVoted ? 'bg-gray-600 text-gray-400 cursor-not-allowed' : 'bg-green-600 hover:bg-green-500 text-white'}`}
+                  >
+                    <CheckSquare size={12}/>
+                    <span>Vote</span>
+                  </button>
+                </div>
+              ))}
+            </div>
+            {hasVoted && <p className="text-xs text-amber-400 mt-2 text-center">Thanks for voting!</p>}
+          </div>
+        );
+      }
+      case 'githubProjectShowcase': {
+        const projects = [
+          { name: "My Awesome Project", description: "A brief description of this cool project.", url: "#github1", stars: 123, forks: 45 },
+          { name: "Another Cool Repo", description: "Solving real-world problems with code.", url: "#github2", stars: 67, forks: 12 },
+        ];
+        return (
+          <div className="space-y-3">
+            {projects.map(proj => (
+              <div key={proj.name} className="p-2 bg-gray-700 rounded-md">
+                <a href={proj.url} target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:underline font-semibold text-sm flex items-center space-x-1">
+                  <Github size={14}/>
+                  <span>{proj.name}</span>
+                </a>
+                <p className="text-xs text-gray-300 mt-0.5 mb-1">{proj.description}</p>
+                <div className="flex space-x-2 text-xs text-gray-400">
+                  <span>⭐ {proj.stars}</span>
+                  <span> Forks: {proj.forks}</span>
+                </div>
+              </div>
+            ))}
+          </div>
+        );
+      }
+      case 'artGallerySnippet': {
+        const artworks = [
+          { title: "Sunset Dreams", artist: "My Username", imageUrl: "https://via.placeholder.com/100x80/FF6B6B/FFFFFF?text=Art+1", artUrl: "#art1" },
+          { title: "Abstract Blues", artist: "My Username", imageUrl: "https://via.placeholder.com/100x80/4ECDC4/FFFFFF?text=Art+2", artUrl: "#art2" },
+        ];
+        return (
+          <div className="grid grid-cols-2 gap-2">
+            {artworks.map(art => (
+              <div key={art.title} className="text-xs">
+                <a href={art.artUrl} target="_blank" rel="noopener noreferrer">
+                  <img src={art.imageUrl} alt={art.title} className="w-full h-16 object-cover rounded-md mb-0.5"/>
+                </a>
+                <a href={art.artUrl} target="_blank" rel="noopener noreferrer" className="font-semibold text-blue-400 hover:underline block truncate">{art.title}</a>
+                <p className="text-gray-400 truncate">by {art.artist}</p>
+              </div>
+            ))}
+          </div>
+        );
+      }
+      case 'simpleTodoList': {
+        interface TodoItem { id: number; text: string; completed: boolean; }
+        const lsTodoKey = `widgetContent_todoItems_${instanceId}`;
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [todos, setTodos] = useState<TodoItem[]>(() => {
+          if (typeof window !== 'undefined') {
+            const savedTodos = localStorage.getItem(lsTodoKey);
+            return savedTodos ? JSON.parse(savedTodos) : [];
+          }
+          return [];
+        });
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        const [newTodoText, setNewTodoText] = useState('');
+
+        // eslint-disable-next-line react-hooks/rules-of-hooks
+        useEffect(() => {
+          localStorage.setItem(lsTodoKey, JSON.stringify(todos));
+        }, [todos, lsTodoKey]);
+
+        const handleAddTodo = () => {
+          if (newTodoText.trim() === '') return;
+          setTodos([...todos, { id: Date.now(), text: newTodoText, completed: false }]);
+          setNewTodoText('');
+        };
+
+        const toggleComplete = (id: number) => {
+          setTodos(todos.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo));
+        };
+
+        const deleteTodo = (id: number) => {
+          setTodos(todos.filter(todo => todo.id !== id));
+        };
+
+        return (
+          <div className="flex flex-col h-full">
+            <div className="flex mb-2">
+              <input
+                type="text"
+                value={newTodoText}
+                onChange={(e) => setNewTodoText(e.target.value)}
+                placeholder="Add a new task..."
+                className="flex-grow p-1.5 bg-gray-700 text-white rounded-l-md text-sm focus:ring-1 focus:ring-blue-500"
+                onKeyPress={(e) => e.key === 'Enter' && handleAddTodo()}
+              />
+              <button onClick={handleAddTodo} className="bg-blue-500 text-white px-3 py-1.5 rounded-r-md text-sm hover:bg-blue-600">Add</button>
+            </div>
+            <ul className="space-y-1.5 overflow-y-auto flex-grow" style={{maxHeight: '100px'}}> {/* Max height for scroll */}
+              {todos.map(todo => (
+                <li key={todo.id} className={`flex items-center justify-between p-1.5 rounded-md text-sm ${todo.completed ? 'bg-green-800' : 'bg-gray-600'}`}>
+                  <label className="flex items-center space-x-2 cursor-pointer">
+                    <input type="checkbox" checked={todo.completed} onChange={() => toggleComplete(todo.id)} className="form-checkbox text-green-500 bg-gray-700 border-gray-500 rounded"/>
+                    <span className={`${todo.completed ? 'line-through text-gray-400' : 'text-gray-200'}`}>{todo.text}</span>
+                  </label>
+                  <button onClick={() => deleteTodo(todo.id)} className="text-red-500 hover:text-red-400 text-xs">Delete</button>
+                </li>
+              ))}
+            </ul>
+          </div>
+        );
+      }
+      case 'digitalBookshelf': {
+        const books = [
+          { title: "The Great Gatsby", author: "F. Scott Fitzgerald", coverPlaceholderText: "TG" },
+          { title: "1984", author: "George Orwell", coverPlaceholderText: "84" },
+          { title: "To Kill a Mockingbird", author: "Harper Lee", coverPlaceholderText: "TK" },
+        ];
+        return (
+          <div className="space-y-3">
+            {books.slice(0,2).map(book => ( // Show 2 books for space
+              <div key={book.title} className="flex items-center space-x-2">
+                <div className="w-10 h-14 bg-indigo-700 rounded flex items-center justify-center text-white text-xs font-bold">
+                  {book.coverPlaceholderText}
+                </div>
+                <div>
+                  <p className="text-sm font-semibold text-gray-200">{book.title}</p>
+                  <p className="text-xs text-gray-400">{book.author}</p>
+                </div>
+              </div>
+            ))}
+          </div>
+        );
+      }
+      case 'recipeOfTheDay': {
+        return (
+          <div className="space-y-2 text-gray-300">
+            <div className="flex items-center space-x-2 text-amber-400">
+              <UtensilsCrossed size={20} />
+              <h4 className="text-md font-semibold">Simple Pasta Delight</h4>
+            </div>
+            <p className="text-xs italic">A quick and delicious pasta dish for any night of the week.</p>
+            <p className="text-xs font-medium mt-1">Key Ingredients:</p>
+            <ul className="list-disc list-inside text-xs space-y-0.5">
+              <li>Spaghetti or Penne</li>
+              <li>Tomato Sauce (canned or homemade)</li>
+              <li>Parmesan Cheese</li>
+              <li>Garlic & Onion (optional)</li>
+            </ul>
+          </div>
+        );
+      }
+      case 'askMeAnythingBox': {
+        return (
+          <div className="space-y-2">
+            <textarea
+              readOnly
+              placeholder="Ask something... (Submissions currently disabled)"
+              className="w-full h-20 p-2 bg-gray-700 text-gray-400 rounded-md resize-none text-sm placeholder-gray-500"
+            />
+            <button
+              disabled
+              className="w-full px-3 py-1.5 bg-blue-700 text-blue-300 rounded-md text-sm cursor-not-allowed"
+            >
+              Submit Question
+            </button>
+          </div>
+        );
+      }
+      case 'virtualPet':
+        return (
+          <div className="flex flex-col items-center justify-center h-full text-center">
+            <Smile size={48} className="text-yellow-400 mb-2" />
+            <p className="text-lg font-semibold text-gray-200">Fido</p>
+            <p className="text-sm text-gray-400">Fido is happy!</p>
+          </div>
+        );
+      case 'recentBlogPosts':
+        const posts = [
+          { id: 1, title: "My First Blog Post", url: "#" },
+          { id: 2, title: "Exploring New Technologies", url: "#" },
+          { id: 3, title: "A Guide to Productive Workflows", url: "#" },
+        ];
+        return (
+          <div className="space-y-2">
+            <div className="flex items-center text-gray-300 mb-1">
+              <Rss size={18} className="mr-2 text-orange-400" />
+              <h4 className="font-semibold text-sm">Recent Posts</h4>
+            </div>
+            <ul className="space-y-1">
+              {posts.slice(0, 3).map(post => (
+                <li key={post.id} className="text-xs">
+                  <a href={post.url} className="text-blue-400 hover:text-blue-300 hover:underline truncate">
+                    {post.title}
+                  </a>
+                </li>
+              ))}
+            </ul>
+          </div>
+        );
+      case 'favoriteMedia':
+        const mediaItems = [
+          { id: 1, title: "Epic Adventure Movie", year: "2023", type: "Movie", coverIcon: <Film size={24} className="text-gray-500" /> },
+          { id: 2, title: "Sci-Fi Series", year: "2022", type: "Show", coverIcon: <Film size={24} className="text-red-500" /> },
+          { id: 3, title: "Documentary Film", year: "2024", type: "Movie", coverIcon: <Film size={24} className="text-blue-500" /> },
+        ];
+        return (
+          <div className="space-y-2">
+             <div className="flex items-center text-gray-300 mb-1">
+              <Film size={18} className="mr-2 text-purple-400" />
+              <h4 className="font-semibold text-sm">Favorite Media</h4>
+            </div>
+            <div className="grid grid-cols-3 gap-2 text-xs text-center">
+              {mediaItems.slice(0,3).map(item => (
+                <div key={item.id} className="bg-gray-700 p-1.5 rounded-md">
+                  <div className="w-full h-16 bg-gray-600 rounded flex items-center justify-center mb-1">
+                    {item.coverIcon}
+                  </div>
+                  <p className="font-semibold text-gray-200 truncate text-[10px] leading-tight" title={item.title}>{item.title}</p>
+                  <p className="text-gray-400 text-[9px]">{item.type} ({item.year})</p>
+                </div>
+              ))}
+            </div>
+          </div>
+        );
+      // Keep existing cases for other widgets...
+      // Add more cases as actual widget implementations are developed
+      default:
+        return <p className="text-red-400">Unknown Widget Type: {widgetId}</p>;
+    }
+  };
+
+  return (
+    <div className="bg-gray-800 border border-gray-700 rounded-lg shadow-md flex flex-col h-full">
+      {/* Widget Title Bar */}
+      <div className="bg-gray-750 px-4 py-2 border-b border-gray-700 rounded-t-lg">
+        <h3 className="text-md font-semibold text-white truncate">{widgetName}</h3>
+        {/* Potentially add controls like close, edit, drag handle here */}
+      </div>
+
+      {/* Widget Content Area */}
+      <div className="p-4 flex-grow overflow-y-auto">
+        {renderWidgetContent()}
+      </div>
+    </div>
+  );
+};
+
+export default Widget;
diff --git a/src/components/WidgetBoard.tsx b/src/components/WidgetBoard.tsx
new file mode 100644
index 0000000..b2079ed
--- /dev/null
+++ b/src/components/WidgetBoard.tsx
@@ -0,0 +1,244 @@
+"use client";
+
+import React, { useState, useEffect, useRef } from 'react';
+import { Pin } from 'lucide-react';
+import Image from 'next/image';
+
+// Define types for our component props
+interface PinnedPost {
+  uri: string;
+  cid: string;
+  position: number;
+  content?: {
+    text?: string;
+    images?: string[];
+    // Other content types as needed
+  };
+}
+
+interface MusicTrack {
+  id: string;
+  title: string;
+  artist: string;
+  url: string;
+  source: string;
+}
+
+interface WidgetBoardProps {
+  pinnedPosts: PinnedPost[];
+  musicTrack?: MusicTrack; // This might be deprecated or used differently
+  isPlaying?: boolean;
+  isEditing?: boolean;
+  isOwner?: boolean;
+  onTogglePlay?: () => void;
+  // onPrevTrack, onNextTrack, onFavoriteTrack, onShowPlaylist might become less relevant for URL-based playback
+  // onAddMusic will be removed as music is set via settings
+  onRemovePin?: (position: number) => void;
+}
+
+// Helper function to determine embed type and URL
+const getEmbedPlayer = (url: string): { type: string; src: string | null } => {
+  if (!url) return { type: 'none', src: null };
+
+  try {
+    const urlObj = new URL(url); // Validate URL structure
+
+    if (urlObj.hostname.includes('youtube.com') || urlObj.hostname.includes('youtu.be')) {
+      let videoId = urlObj.searchParams.get('v');
+      if (urlObj.hostname.includes('youtu.be')) {
+        videoId = urlObj.pathname.substring(1);
+      }
+      return videoId ? { type: 'iframe', src: `https://www.youtube.com/embed/${videoId}` } : { type: 'none', src: null };
+    }
+    if (urlObj.hostname.includes('soundcloud.com')) {
+      return { type: 'iframe', src: `https://w.soundcloud.com/player/?url=${encodeURIComponent(url)}&auto_play=false&visual=true&hide_related=true&show_comments=false&show_user=true&show_reposts=false` };
+    }
+    if (urlObj.pathname.match(/\.(mp3|wav|ogg|aac)$/i)) {
+      return { type: 'audio', src: url };
+    }
+    if (urlObj.hostname.includes('spotify.com')) {
+      // For Spotify, direct embedding is complex. We'll show a link or placeholder.
+      // Real Spotify embeds often use their Web Playback SDK or specific iframe requirements.
+      // Example: "https://open.spotify.com/embed/track/TRACK_ID"
+      if (url.includes("/embed/")) { // Already an embed link
+        return { type: 'iframe', src: url};
+      }
+      return { type: 'spotify', src: url };
+    }
+  } catch (e) {
+    console.error("Error parsing URL for embedding:", e);
+    return { type: 'none', src: null };
+  }
+  return { type: 'none', src: null }; // Default for unknown URLs
+};
+
+
+const WidgetBoard: React.FC<WidgetBoardProps> = ({
+  pinnedPosts = [],
+  // musicTrack, // Potentially remove or adapt if fully URL based
+  isPlaying = false,
+  isEditing = false,
+  isOwner = false,
+  onTogglePlay,
+  // onPrevTrack, // Less relevant for single URL
+  // onNextTrack, // Less relevant for single URL
+  // onFavoriteTrack, // Less relevant for single URL
+  // onShowPlaylist, // Less relevant for single URL
+  onRemovePin
+}) => {
+  const [musicUrl, setMusicUrl] = useState<string | null>(null);
+  const audioRef = useRef<HTMLAudioElement | null>(null);
+
+  useEffect(() => {
+    if (typeof window !== 'undefined') {
+      const storedUrl = localStorage.getItem('profileMusicUrl');
+      if (storedUrl) {
+        setMusicUrl(storedUrl);
+      }
+    }
+  }, []);
+
+  const embedPlayer = musicUrl ? getEmbedPlayer(musicUrl) : null;
+
+  // Effect to handle audio playback for <audio> tag
+  useEffect(() => {
+    if (embedPlayer?.type === 'audio' && audioRef.current) {
+      if (isPlaying && embedPlayer.src) {
+        audioRef.current.src = embedPlayer.src; // Ensure src is set before play
+        audioRef.current.play().catch(error => {
+          console.error("Audio playback failed:", error);
+        });
+      } else {
+        audioRef.current.pause();
+      }
+    }
+  }, [isPlaying, embedPlayer]);
+
+  // Create an array of 4 cells, filling with pinnedPosts where available
+  const gridCells = Array(4).fill(null).map((_, index) => {
+    return pinnedPosts.find(post => post.position === index) || null;
+  });
+
+  return (
+    <div className="mb-4">
+      {/* Hidden audio element for direct audio links */}
+      {embedPlayer?.type === 'audio' && embedPlayer.src && (
+        <audio
+          ref={audioRef}
+          // src={embedPlayer.src} // src is now set in useEffect to handle changes
+          loop
+          preload="metadata"
+          // onEnded={() => onNextTrack && onNextTrack()} // onNextTrack might be removed
+          className="hidden"
+        />
+      )}
+
+      {/* Pinned Label */}
+      <div className="flex items-center px-4 py-2 text-gray-500 text-sm">
+        <Pin size={16} className="mr-1.5" />
+        <span>Pinned</span>
+      </div>
+
+      {/* Widget Board Container */}
+      <div className="mx-4 rounded-xl overflow-hidden border border-gray-800">
+        {/* 2x2 Grid for Pinned Posts */}
+        <div className="grid grid-cols-2 gap-2 p-2">
+          {gridCells.map((post, index) => (
+            <div
+              key={`cell-${index}`}
+              className="aspect-square bg-blue-500 rounded-lg flex items-center justify-center overflow-hidden relative"
+            >
+              {post ? (
+                <div className="w-full h-full flex items-center justify-center text-white">
+                  {post.content?.text ? (
+                    <p className="text-sm p-2 line-clamp-4">{post.content.text}</p>
+                  ) : post.content?.images && post.content.images.length > 0 ? (
+                    <div className="relative w-full h-full">
+                      <Image
+                        src={post.content.images[0]}
+                        alt="Pinned post image"
+                        fill
+                        style={{ objectFit: 'cover' }}
+                      />
+                    </div>
+                  ) : (
+                    <span>Pinned Content</span>
+                  )}
+                  {isOwner && isEditing && (
+                    <button
+                      className="absolute top-1 right-1 bg-black bg-opacity-50 rounded-full p-1 hover:bg-opacity-70"
+                      onClick={() => onRemovePin && onRemovePin(index)}
+                    >
+                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
+                        <line x1="18" y1="6" x2="6" y2="18"></line>
+                        <line x1="6" y1="6" x2="18" y2="18"></line>
+                      </svg>
+                    </button>
+                  )}
+                </div>
+              ) : (
+                isOwner && isEditing ? (
+                  <button className="text-white text-sm flex items-center justify-center w-full h-full hover:bg-blue-600 transition-colors">
+                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-1">
+                      <line x1="12" y1="5" x2="12" y2="19"></line>
+                      <line x1="5" y1="12" x2="19" y2="12"></line>
+                    </svg>
+                    Add Post
+                  </button>
+                ) : (
+                  <div className="text-white/50 text-xs">Empty</div>
+                )
+              )}
+            </div>
+          ))}
+        </div>
+
+        {/* Music Player Area */}
+        <div className="bg-blue-500 p-3">
+          {embedPlayer?.type === 'iframe' && embedPlayer.src && (
+            <iframe
+              src={embedPlayer.src}
+              className="w-full h-20 md:h-24 border-none" // Adjust height as needed
+              title="Music Player Embed"
+              allow="encrypted-media; autoplay" // autoplay might be blocked by browsers
+              sandbox="allow-scripts allow-same-origin allow-presentation"
+            ></iframe>
+          )}
+          {embedPlayer?.type === 'audio' && (
+            <div className="flex items-center justify-between text-white">
+              <div className="text-sm truncate flex-1">
+                {musicUrl ? new URL(musicUrl).pathname.split('/').pop() : "Audio Track"}
+              </div>
+              {onTogglePlay && (
+                <div className="flex items-center space-x-2">
+                  {/* Simplified controls for audio tag */}
+                  <button onClick={onTogglePlay} className="hover:text-white/80 focus:outline-none">
+                    {isPlaying ? (
+                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><rect x="6" y="4" width="4" height="16"></rect><rect x="14" y="4" width="4" height="16"></rect></svg>
+                    ) : (
+                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>
+                    )}
+                  </button>
+                  {/* Volume/Progress could be added back here if desired */}
+                </div>
+              )}
+            </div>
+          )}
+          {embedPlayer?.type === 'spotify' && embedPlayer.src && (
+            <div className="text-white text-sm p-2 text-center">
+              Spotify link detected. <a href={embedPlayer.src} target="_blank" rel="noopener noreferrer" className="underline hover:text-white/80">Play on Spotify</a>.
+              <p className="text-xs text-white/70 mt-1">(Full playback requires Spotify app or Web Player SDK integration)</p>
+            </div>
+          )}
+          {(!musicUrl || embedPlayer?.type === 'none') && (
+            <div className="text-white/70 text-sm text-center p-2">
+              No background music configured. Set a URL in Profile Settings.
+            </div>
+          )}
+        </div>
+      </div>
+    </div>
+  );
+};
+
+export default WidgetBoard;
diff --git a/src/contexts/AuthContext.tsx b/src/contexts/AuthContext.tsx
new file mode 100644
index 0000000..b7b6abb
--- /dev/null
+++ b/src/contexts/AuthContext.tsx
@@ -0,0 +1,145 @@
+"use client";
+
+import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
+import { BrowserOAuthClient, OAuthSession } from '@atproto/oauth-client-browser';
+
+// Add type extension for BrowserOAuthClient session property
+declare module '@atproto/oauth-client-browser' {
+  interface BrowserOAuthClient {
+    session?: OAuthSession;
+  }
+}
+
+interface AuthContextType {
+  isAuthenticated: boolean;
+  isLoading: boolean;
+  session: OAuthSession | null;
+  signIn: (handle: string) => Promise<void>;
+  signOut: () => Promise<void>;
+  error: string | null;
+}
+
+const AuthContext = createContext<AuthContextType | undefined>(undefined);
+
+export const useAuth = () => {
+  const context = useContext(AuthContext);
+  if (context === undefined) {
+    throw new Error('useAuth must be used within an AuthProvider');
+  }
+  return context;
+};
+
+interface AuthProviderProps {
+  children: ReactNode;
+}
+
+export const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {
+  const [isAuthenticated, setIsAuthenticated] = useState(false);
+  const [isLoading, setIsLoading] = useState(true);
+  const [session, setSession] = useState<OAuthSession | null>(null);
+  const [error, setError] = useState<string | null>(null);
+  const [client, setClient] = useState<BrowserOAuthClient | null>(null);
+
+  // Initialize the OAuth client
+  useEffect(() => {
+    const initClient = async () => {
+      try {
+        // Create the OAuth client
+        const oauthClient = new BrowserOAuthClient({
+          clientMetadata: {
+            client_id: "https://rwghgydn.manus.space/client-metadata.json",
+            client_name: "BlueShapes",
+            client_uri: "https://rwghgydn.manus.space",
+            logo_uri: "https://rwghgydn.manus.space/shapes_logo.jpeg",
+            redirect_uris: ["https://rwghgydn.manus.space/callback"],
+            scope: "atproto",
+            grant_types: ["authorization_code", "refresh_token"],
+            response_types: ["code"],
+            token_endpoint_auth_method: "none",
+            application_type: "web",
+            dpop_bound_access_tokens: true
+          },
+          handleResolver: 'https://bsky.social',
+          responseMode: 'fragment'
+        });
+
+        setClient(oauthClient);
+
+        // Initialize the client and check for existing sessions
+        const result = await oauthClient.init();
+
+        if (result) {
+          const { session: existingSession } = result;
+          setSession(existingSession);
+          setIsAuthenticated(true);
+        }
+      } catch (err) {
+        console.error('Failed to initialize OAuth client:', err);
+        setError('Failed to initialize authentication. Please try again.');
+      } finally {
+        setIsLoading(false);
+      }
+    };
+
+    initClient();
+  }, []);
+
+  const signIn = async (handle: string) => {
+    if (!client) {
+      setError('Authentication system not initialized. Please try again later.');
+      return;
+    }
+
+    setIsLoading(true);
+    setError(null);
+
+    try {
+      // Start the OAuth flow with the provided handle
+      await client.authorize(handle);
+
+      // The above function will redirect the user to the OAuth server
+      // The page will reload after the redirect back to our app
+      // The init() function in useEffect will handle the redirect response
+    } catch (err) {
+      console.error('Failed to start auth flow:', err);
+      setError('Failed to authenticate. Please check your handle and try again.');
+      setIsLoading(false);
+    }
+  };
+
+  const signOut = async () => {
+    if (!client) {
+      setError('Authentication system not initialized. Please try again later.');
+      return;
+    }
+
+    setIsLoading(true);
+
+    try {
+      // Clear the session using the proper API
+      client.session = undefined;
+      setSession(null);
+      setIsAuthenticated(false);
+    } catch (err) {
+      console.error('Failed to sign out:', err);
+      setError('Failed to sign out. Please try again.');
+    } finally {
+      setIsLoading(false);
+    }
+  };
+
+  return (
+    <AuthContext.Provider
+      value={{
+        isAuthenticated,
+        isLoading,
+        session,
+        signIn,
+        signOut,
+        error
+      }}
+    >
+      {children}
+    </AuthContext.Provider>
+  );
+};
diff --git a/src/contexts/BrowserAudioContext.tsx b/src/contexts/BrowserAudioContext.tsx
new file mode 100644
index 0000000..36769cf
--- /dev/null
+++ b/src/contexts/BrowserAudioContext.tsx
@@ -0,0 +1,27 @@
+"use client";
+
+import React, { createContext, useState, ReactNode, Dispatch, SetStateAction } from 'react';
+
+interface BrowserAudioContextProps {
+  audioUrl: string | null;
+  setAudioUrl: Dispatch<SetStateAction<string | null>>;
+  isPlaying: boolean;
+  setIsPlaying: Dispatch<SetStateAction<boolean>>;
+}
+
+export const BrowserAudioContext = createContext<BrowserAudioContextProps | undefined>(undefined);
+
+interface BrowserAudioProviderProps {
+  children: ReactNode;
+}
+
+export const BrowserAudioProvider: React.FC<BrowserAudioProviderProps> = ({ children }) => {
+  const [audioUrl, setAudioUrl] = useState<string | null>(null);
+  const [isPlaying, setIsPlaying] = useState<boolean>(false);
+
+  return (
+    <BrowserAudioContext.Provider value={{ audioUrl, setAudioUrl, isPlaying, setIsPlaying }}>
+      {children}
+    </BrowserAudioContext.Provider>
+  );
+};
diff --git a/src/contexts/ProtectedRouteWrapper.tsx b/src/contexts/ProtectedRouteWrapper.tsx
new file mode 100644
index 0000000..f218a14
--- /dev/null
+++ b/src/contexts/ProtectedRouteWrapper.tsx
@@ -0,0 +1,19 @@
+"use client";
+
+import React from 'react';
+import { AuthProvider } from '@/contexts/AuthContext';
+import { usePathname } from 'next/navigation';
+
+interface ProtectedRouteWrapperProps {
+  children: React.ReactNode;
+}
+
+const ProtectedRouteWrapper: React.FC<ProtectedRouteWrapperProps> = ({ children }) => {
+  return (
+    <AuthProvider>
+      {children}
+    </AuthProvider>
+  );
+};
+
+export default ProtectedRouteWrapper;
diff --git a/src/lib/agent.ts b/src/lib/agent.ts
new file mode 100644
index 0000000..531e285
--- /dev/null
+++ b/src/lib/agent.ts
@@ -0,0 +1,309 @@
+import {AtpSessionData, AtpSessionEvent, BskyAgent} from '@atproto/api'
+import {TID} from '@atproto/common-web'
+
+import {networkRetry} from '#/lib/async/retry'
+import {
+  BSKY_SERVICE,
+  DISCOVER_SAVED_FEED,
+  IS_PROD_SERVICE,
+  PUBLIC_BSKY_SERVICE,
+  TIMELINE_SAVED_FEED,
+} from '#/lib/constants'
+import {tryFetchGates} from '#/lib/statsig/statsig'
+import {getAge} from '#/lib/strings/time'
+import {logger} from '#/logger'
+import {snoozeEmailConfirmationPrompt} from '#/state/shell/reminders'
+import {emitNetworkConfirmed, emitNetworkLost} from '../events'
+import {addSessionErrorLog} from './logging'
+import {
+  configureModerationForAccount,
+  configureModerationForGuest,
+} from './moderation'
+import {SessionAccount} from './types'
+import {isSessionExpired, isSignupQueued} from './util'
+
+export function createPublicAgent() {
+  configureModerationForGuest() // Side effect but only relevant for tests
+  return new BskyAppAgent({service: PUBLIC_BSKY_SERVICE})
+}
+
+export async function createAgentAndResume(
+  storedAccount: SessionAccount,
+  onSessionChange: (
+    agent: BskyAgent,
+    did: string,
+    event: AtpSessionEvent,
+  ) => void,
+) {
+  const agent = new BskyAppAgent({service: storedAccount.service})
+  if (storedAccount.pdsUrl) {
+    agent.sessionManager.pdsUrl = new URL(storedAccount.pdsUrl)
+  }
+  const gates = tryFetchGates(storedAccount.did, 'prefer-low-latency')
+  const moderation = configureModerationForAccount(agent, storedAccount)
+  const prevSession: AtpSessionData = sessionAccountToSession(storedAccount)
+  if (isSessionExpired(storedAccount)) {
+    await networkRetry(1, () => agent.resumeSession(prevSession))
+  } else {
+    agent.sessionManager.session = prevSession
+    if (!storedAccount.signupQueued) {
+      networkRetry(3, () => agent.resumeSession(prevSession)).catch(
+        (e: any) => {
+          logger.error(`networkRetry failed to resume session`, {
+            status: e?.status || 'unknown',
+            // this field name is ignored by Sentry scrubbers
+            safeMessage: e?.message || 'unknown',
+          })
+
+          throw e
+        },
+      )
+    }
+  }
+
+  return agent.prepare(gates, moderation, onSessionChange)
+}
+
+export async function createAgentAndLogin(
+  {
+    service,
+    identifier,
+    password,
+    authFactorToken,
+  }: {
+    service: string
+    identifier: string
+    password: string
+    authFactorToken?: string
+  },
+  onSessionChange: (
+    agent: BskyAgent,
+    did: string,
+    event: AtpSessionEvent,
+  ) => void,
+) {
+  const agent = new BskyAppAgent({service})
+  await agent.login({
+    identifier,
+    password,
+    authFactorToken,
+    allowTakendown: true,
+  })
+
+  const account = agentToSessionAccountOrThrow(agent)
+  const gates = tryFetchGates(account.did, 'prefer-fresh-gates')
+  const moderation = configureModerationForAccount(agent, account)
+  return agent.prepare(gates, moderation, onSessionChange)
+}
+
+export async function createAgentAndCreateAccount(
+  {
+    service,
+    email,
+    password,
+    handle,
+    birthDate,
+    inviteCode,
+    verificationPhone,
+    verificationCode,
+  }: {
+    service: string
+    email: string
+    password: string
+    handle: string
+    birthDate: Date
+    inviteCode?: string
+    verificationPhone?: string
+    verificationCode?: string
+  },
+  onSessionChange: (
+    agent: BskyAgent,
+    did: string,
+    event: AtpSessionEvent,
+  ) => void,
+) {
+  const agent = new BskyAppAgent({service})
+  await agent.createAccount({
+    email,
+    password,
+    handle,
+    inviteCode,
+    verificationPhone,
+    verificationCode,
+  })
+  const account = agentToSessionAccountOrThrow(agent)
+  const gates = tryFetchGates(account.did, 'prefer-fresh-gates')
+  const moderation = configureModerationForAccount(agent, account)
+
+  // Not awaited so that we can still get into onboarding.
+  // This is OK because we won't let you toggle adult stuff until you set the date.
+  if (IS_PROD_SERVICE(service)) {
+    try {
+      networkRetry(1, async () => {
+        await agent.setPersonalDetails({birthDate: birthDate.toISOString()})
+        await agent.overwriteSavedFeeds([
+          {
+            ...DISCOVER_SAVED_FEED,
+            id: TID.nextStr(),
+          },
+          {
+            ...TIMELINE_SAVED_FEED,
+            id: TID.nextStr(),
+          },
+        ])
+
+        if (getAge(birthDate) < 18) {
+          await agent.api.com.atproto.repo.putRecord({
+            repo: account.did,
+            collection: 'chat.bsky.actor.declaration',
+            rkey: 'self',
+            record: {
+              $type: 'chat.bsky.actor.declaration',
+              allowIncoming: 'none',
+            },
+          })
+        }
+      })
+    } catch (e: any) {
+      logger.error(e, {
+        message: `session: createAgentAndCreateAccount failed to save personal details and feeds`,
+      })
+    }
+  } else {
+    agent.setPersonalDetails({birthDate: birthDate.toISOString()})
+  }
+
+  try {
+    // snooze first prompt after signup, defer to next prompt
+    snoozeEmailConfirmationPrompt()
+  } catch (e: any) {
+    logger.error(e, {message: `session: failed snoozeEmailConfirmationPrompt`})
+  }
+
+  return agent.prepare(gates, moderation, onSessionChange)
+}
+
+export function agentToSessionAccountOrThrow(agent: BskyAgent): SessionAccount {
+  const account = agentToSessionAccount(agent)
+  if (!account) {
+    throw Error('Expected an active session')
+  }
+  return account
+}
+
+export function agentToSessionAccount(
+  agent: BskyAgent,
+): SessionAccount | undefined {
+  if (!agent.session) {
+    return undefined
+  }
+  return {
+    service: agent.service.toString(),
+    did: agent.session.did,
+    handle: agent.session.handle,
+    email: agent.session.email,
+    emailConfirmed: agent.session.emailConfirmed || false,
+    emailAuthFactor: agent.session.emailAuthFactor || false,
+    refreshJwt: agent.session.refreshJwt,
+    accessJwt: agent.session.accessJwt,
+    signupQueued: isSignupQueued(agent.session.accessJwt),
+    active: agent.session.active,
+    status: agent.session.status as SessionAccount['status'],
+    pdsUrl: agent.pdsUrl?.toString(),
+    isSelfHosted: !agent.serviceUrl.toString().startsWith(BSKY_SERVICE),
+  }
+}
+
+export function sessionAccountToSession(
+  account: SessionAccount,
+): AtpSessionData {
+  return {
+    // Sorted in the same property order as when returned by BskyAgent (alphabetical).
+    accessJwt: account.accessJwt ?? '',
+    did: account.did,
+    email: account.email,
+    emailAuthFactor: account.emailAuthFactor,
+    emailConfirmed: account.emailConfirmed,
+    handle: account.handle,
+    refreshJwt: account.refreshJwt ?? '',
+    /**
+     * @see https://github.com/bluesky-social/atproto/blob/c5d36d5ba2a2c2a5c4f366a5621c06a5608e361e/packages/api/src/agent.ts#L188
+     */
+    active: account.active ?? true,
+    status: account.status,
+  }
+}
+
+// Not exported. Use factories above to create it.
+let realFetch = globalThis.fetch
+class BskyAppAgent extends BskyAgent {
+  persistSessionHandler: ((event: AtpSessionEvent) => void) | undefined =
+    undefined
+
+  constructor({service}: {service: string}) {
+    super({
+      service,
+      async fetch(...args) {
+        let success = false
+        try {
+          const result = await realFetch(...args)
+          success = true
+          return result
+        } catch (e) {
+          success = false
+          throw e
+        } finally {
+          if (success) {
+            emitNetworkConfirmed()
+          } else {
+            emitNetworkLost()
+          }
+        }
+      },
+      persistSession: (event: AtpSessionEvent) => {
+        if (this.persistSessionHandler) {
+          this.persistSessionHandler(event)
+        }
+      },
+    })
+  }
+
+  async prepare(
+    // Not awaited in the calling code so we can delay blocking on them.
+    gates: Promise<void>,
+    moderation: Promise<void>,
+    onSessionChange: (
+      agent: BskyAgent,
+      did: string,
+      event: AtpSessionEvent,
+    ) => void,
+  ) {
+    // There's nothing else left to do, so block on them here.
+    await Promise.all([gates, moderation])
+
+    // Now the agent is ready.
+    const account = agentToSessionAccountOrThrow(this)
+    let lastSession = this.sessionManager.session
+    this.persistSessionHandler = event => {
+      if (this.sessionManager.session) {
+        lastSession = this.sessionManager.session
+      } else if (event === 'network-error') {
+        // Put it back, we'll try again later.
+        this.sessionManager.session = lastSession
+      }
+
+      onSessionChange(this, account.did, event)
+      if (event !== 'create' && event !== 'update') {
+        addSessionErrorLog(account.did, event)
+      }
+    }
+    return {account, agent: this}
+  }
+
+  dispose() {
+    this.sessionManager.session = undefined
+    this.persistSessionHandler = undefined
+  }
+}
+
+export type {BskyAppAgent}
diff --git a/src/lib/bskyService.ts b/src/lib/bskyService.ts
new file mode 100644
index 0000000..9b7be8b
--- /dev/null
+++ b/src/lib/bskyService.ts
@@ -0,0 +1,443 @@
+import {
+  BskyAgent,
+  AppBskyActorDefs,
+  AppBskyFeedDefs,
+  AppBskyNotificationListNotifications,
+  ChatBskyConvoDefs, // Import for chat conversation definitions
+  ChatBskyActorDefs  // Import for chat actor definitions (like declaration)
+} from '@atproto/api';
+
+// Re-exporting for convenience if these types are needed by consumers of this service
+export type ProfileViewDetailed = AppBskyActorDefs.ProfileViewDetailed;
+// Re-exporting Notification type for use in UI components
+export type Notification = AppBskyNotificationListNotifications.Notification;
+export type FeedViewPost = AppBskyFeedDefs.FeedViewPost;
+export type GeneratorView = AppBskyFeedDefs.GeneratorView;
+export type ActorPreference = AppBskyActorDefs.Preference; // General preference type
+export type SavedFeedsPref = AppBskyActorDefs.SavedFeedsPref; // Specific preference type for saved feeds
+export type PersonalDetailsPref = AppBskyActorDefs.PersonalDetailsPref; // Specific preference type for personal details
+
+export interface FeedPage {
+  feed: FeedViewPost[];
+  cursor?: string;
+}
+
+// Interface for the listNotifications response to match SDK structure
+export interface NotificationsPage {
+  notifications: Notification[]; // Using the re-exported Notification type
+  cursor?: string;
+  // seenAt?: string; // listNotifications itself doesn't return seenAt, but updateSeen uses it.
+}
+
+// --- Chat Service Types ---
+export type ConvoView = ChatBskyConvoDefs.ConvoView;
+export type MessageView = ChatBskyConvoDefs.MessageView; // This is likely a union: MessageView | DeletedMessageView etc.
+export type MessageViewSent = ChatBskyConvoDefs.MessageViewSent;
+export type LogBeginConvo = ChatBskyConvoDefs.LogBeginConvo; // Example if needed for logs
+
+export interface ConvosPage {
+  convos: ConvoView[];
+  cursor?: string;
+}
+export interface MessagesPage {
+  messages: MessageView[]; // Array of MessageView or union types
+  cursor?: string;
+}
+export type ActorDeclaration = ChatBskyActorDefs.Declaration;
+
+// --- Chat Service Functions ---
+
+/**
+ * Fetches the list of conversations for the authenticated user.
+ * @param agent Initialized BskyAgent
+ * @param cursor Cursor for pagination
+ * @param limit Number of items to fetch (default 30)
+ * @returns Object containing an array of conversations and an optional cursor
+ */
+export const listConvos = async (agent: BskyAgent, cursor?: string, limit: number = 30): Promise<ConvosPage> => {
+  try {
+    const { data } = await agent.api.chat.bsky.convo.listConvos({
+      limit: Math.min(limit, 100),
+      cursor
+    });
+    return data as ConvosPage;
+  } catch (error) {
+    console.error("Error fetching conversations:", error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches details for a specific conversation.
+ * @param agent Initialized BskyAgent
+ * @param convoId The conversation ID
+ * @returns The conversation view
+ */
+export const getConvo = async (agent: BskyAgent, convoId: string): Promise<ConvoView> => {
+  try {
+    const { data } = await agent.api.chat.bsky.convo.getConvo({
+      convoId
+    });
+    return data.convo;
+  } catch (error) {
+    console.error(`Error fetching conversation ${convoId}:`, error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches messages for a specific conversation.
+ * @param agent Initialized BskyAgent
+ * @param convoId The conversation ID
+ * @param cursor Cursor for pagination
+ * @param limit Number of items to fetch (default 30)
+ * @returns Object containing an array of messages and an optional cursor
+ */
+export const getMessages = async (agent: BskyAgent, convoId: string, cursor?: string, limit: number = 30): Promise<MessagesPage> => {
+  try {
+    const { data } = await agent.api.chat.bsky.convo.getMessages({
+      convoId,
+      limit: Math.min(limit, 100),
+      cursor
+    });
+    return data as MessagesPage;
+  } catch (error) {
+    console.error(`Error fetching messages for conversation ${convoId}:`, error);
+    throw error;
+  }
+};
+
+/**
+ * Sends a message to a specific conversation.
+ * @param agent Initialized BskyAgent
+ * @param convoId The conversation ID
+ * @param text The message text
+ * @returns The sent message view
+ */
+export const sendMessage = async (agent: BskyAgent, convoId: string, text: string): Promise<MessageViewSent> => {
+  try {
+    const { data } = await agent.api.chat.bsky.convo.sendMessage({
+      convoId,
+      message: {
+        text,
+        $type: 'chat.bsky.convo.defs#messageInput'
+      }
+    });
+    return data;
+  } catch (error) {
+    console.error(`Error sending message to conversation ${convoId}:`, error);
+    throw error;
+  }
+};
+
+
+/**
+ * Fetches a user's detailed profile.
+ * @param agent Initialized BskyAgent
+ * @param handleOrDid User's handle or DID
+ * @returns Detailed profile view
+ */
+export const getProfile = async (agent: BskyAgent, handleOrDid: string): Promise<ProfileViewDetailed> => {
+  try {
+    const { data } = await agent.app.bsky.actor.getProfile({ actor: handleOrDid });
+    return data;
+  } catch (error) {
+    console.error(`Error fetching profile for ${handleOrDid}:`, error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches a specific author's feed (posts by the author).
+ * @param agent Initialized BskyAgent
+ * @param actor DID or handle of the author
+ * @param cursor Cursor for pagination
+ * @param limit Number of items to fetch
+ * @returns Promise<FeedPage>
+ */
+export const getAuthorFeed = async (agent: BskyAgent, actor: string, cursor?: string, limit: number = 25): Promise<FeedPage> => {
+  try {
+    const { data } = await agent.app.bsky.feed.getAuthorFeed({ actor, limit, cursor });
+    return data as FeedPage; // Assuming the SDK's response structure matches FeedPage { feed, cursor? }
+  } catch (error) {
+    console.error(`Error fetching author feed for ${actor}:`, error);
+    throw error;
+  }
+};
+
+
+// --- Notification Service Functions ---
+
+/**
+ * Fetches a list of notifications for the authenticated user.
+ * @param agent Initialized BskyAgent
+ * @param cursor Cursor for pagination
+ * @param limit Number of items to fetch (default 20, max 100)
+ * @returns Object containing an array of notifications and an optional cursor
+ */
+export const listNotifications = async (agent: BskyAgent, cursor?: string, limit: number = 30): Promise<NotificationsPage> => {
+  try {
+    const { data } = await agent.app.bsky.notification.listNotifications({
+      limit: Math.min(limit, 100), // Enforce maximum limit
+      cursor
+    });
+    // Ensure the returned data matches the NotificationsPage structure.
+    // The SDK's data should be directly compatible if Notification type is from AppBskyNotificationListNotifications.
+    return data as NotificationsPage;
+  } catch (error) {
+    console.error("Error fetching notifications:", error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches the count of unread notifications for the authenticated user.
+ * @param agent Initialized BskyAgent
+ * @returns Object containing the count of unread notifications
+ */
+export const getUnreadCount = async (agent: BskyAgent): Promise<{ count: number }> => {
+  try {
+    const { data } = await agent.app.bsky.notification.getUnreadCount();
+    return data;
+  } catch (error) {
+    console.error("Error fetching unread notification count:", error);
+    throw error;
+  }
+};
+
+/**
+ * Marks notifications as seen for the authenticated user.
+ * @param agent Initialized BskyAgent
+ * @param seenAt Optional ISO 8601 timestamp. If not provided, server typically uses current time.
+ * @returns Promise resolving when notifications have been marked as seen
+ */
+export const updateSeen = async (agent: BskyAgent, seenAt?: string): Promise<void> => {
+  try {
+    await agent.app.bsky.notification.updateSeen({ seenAt: seenAt || new Date().toISOString() });
+  } catch (error) {
+    console.error("Error updating notification seen time:", error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches the preferences for the currently authenticated user.
+ * Note: The API returns an object { preferences: ActorPreference[] }.
+ * This function extracts and returns the array of preferences.
+ * @param agent Initialized BskyAgent
+ * @returns Array of user preferences
+ */
+export const getPreferences = async (agent: BskyAgent): Promise<ActorPreference[]> => {
+  try {
+    const { data } = await agent.app.bsky.actor.getPreferences();
+    return data.preferences;
+  } catch (error) {
+    console.error("Error fetching preferences:", error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches details for a list of feed generators.
+ * @param agent Initialized BskyAgent
+ * @param feedUris Array of AT URIs for the feed generators
+ * @returns Object containing an array of feed generator views
+ */
+export const getFeedGenerators = async (agent: BskyAgent, feedUris: string[]): Promise<{ feeds: GeneratorView[] }> => {
+  try {
+    const { data } = await agent.app.bsky.feed.getFeedGenerators({ feeds: feedUris });
+    return data;
+  } catch (error) {
+    console.error("Error fetching feed generators:", error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches a specific feed (e.g., from a feed generator).
+ * @param agent Initialized BskyAgent
+ * @param feedUri AT URI of the feed generator
+ * @param cursor Cursor for pagination
+ * @param limit Number of items to fetch (default 20)
+ * @returns Object containing an array of feed posts and an optional cursor for pagination
+ */
+export const getFeed = async (agent: BskyAgent, feedUri: string, cursor?: string, limit: number = 20): Promise<FeedPage> => {
+  try {
+    const { data } = await agent.app.bsky.feed.getFeed({
+      feed: feedUri,
+      cursor,
+      limit,
+    });
+    return data; // Return the whole data object { feed, cursor? }
+  } catch (error) {
+    console.error(`Error fetching feed ${feedUri}:`, error);
+    throw error;
+  }
+};
+
+/**
+ * Fetches the main timeline for the authenticated user (e.g., "Following" feed).
+ * @param agent Initialized BskyAgent
+ * @param algorithm Optional: The algorithm for the timeline (e.g., 'reverse-chronological'). Default is usually "Following".
+ *                  This parameter might be deprecated or handled differently by BskyAgent.
+ *                  If you want a specific feed generator, use `getFeed` instead.
+ * @param cursor Cursor for pagination
+ * @param limit Number of items to fetch (default 20)
+ * @returns Array of feed view posts
+ */
+export const getTimeline = async (agent: BskyAgent, algorithm?: string, cursor?: string, limit: number = 20): Promise<FeedViewPost[]> => {
+  try {
+    const params: AppBskyFeedDefs.GetTimeline.QueryParams = { limit };
+    if (algorithm) {
+      // Note: The 'algorithm' parameter for getTimeline is for "algorithmic feeds"
+      // that are not feed generators. For "Following" it's often implicit.
+      // If 'feedUri' was meant to be a feed generator URI, getFeed should be used.
+      // This is a bit ambiguous in the SDK, let's assume 'algorithm' is a specific timeline algo name if provided.
+      // However, BskyAgent.getTimeline() doesn't seem to take an 'algorithm' param directly in some versions.
+      // It might take a 'feed' param for specific algorithm URIs, or it might be implicit.
+      // For a standard "Following" timeline, no algorithm or feed param is needed.
+      // Let's use a generic call for now, assuming default "Following" timeline.
+      // If a specific algo is needed, the caller might need to use getFeed with the algo's AT URI.
+      // params.algorithm = algorithm; // This line might be incorrect depending on exact SDK usage for custom algos
+    }
+    if (cursor) params.cursor = cursor;
+
+    const { data } = await agent.app.bsky.feed.getTimeline(params);
+    return data.feed;
+  } catch (error) {
+    console.error(`Error fetching timeline (algorithm: ${algorithm}):`, error);
+    throw error;
+  }
+};
+
+
+/**
+ * Sets (replaces) the preferences for the currently authenticated user.
+ * @param agent Initialized BskyAgent
+ * @param preferences Array of preference objects to set.
+ *                    These should conform to types like `AppBskyActorDefs.SavedFeedsPref`, etc.
+ * @returns Promise resolving when preferences are set
+ */
+export const setPreferences = async (agent: BskyAgent, preferences: ActorPreference[]): Promise<void> => {
+  try {
+    await agent.app.bsky.actor.putPreferences({ preferences });
+  } catch (error) {
+    console.error("Error setting preferences:", error);
+    throw error;
+  }
+};
+
+// Example of how to potentially use a more specific type for setting preferences,
+// although `ActorPreference[]` should generally work if the objects in the array are correct.
+// export const setTypedPreferences = async (agent: BskyAgent, preferences: Array<SavedFeedsPref | PersonalDetailsPref /* | other specific preference types */>): Promise<void> => {
+//   try {
+//     // The actual input type for putPreferences is { preferences: AppBskyActorDefs.Preference[] }
+//     // So, casting to `any` or ensuring the structures are compatible is needed if using very specific subtypes here.
+//     // However, `ActorPreference` itself is a union of all specific preference types, so it should be fine.
+//     await agent.app.bsky.actor.putPreferences({ preferences: preferences as AppBskyActorDefs.Preference[] });
+//   } catch (error) {
+//     console.error("Error setting typed preferences:", error);
+//     throw error;
+//   }
+// };
+
+// It might also be useful to have functions for specific preferences, e.g., saving feeds:
+/**
+ * Updates the saved feeds preference.
+ * @param agent Initialized BskyAgent
+ * @param pinned Array of feed generator URIs to pin.
+ * @param saved Array of feed generator URIs to save.
+ */
+export const updateSavedFeedsPreference = async (agent: BskyAgent, pinned: string[], saved: string[]): Promise<void> => {
+    try {
+        const currentPrefs = await getPreferences(agent);
+
+        const otherPrefs = currentPrefs.filter(p => p.$type !== 'app.bsky.actor.defs#savedFeeds');
+
+        const newSavedFeedsPref: SavedFeedsPref = {
+            $type: 'app.bsky.actor.defs#savedFeeds', // Make sure this string is correct
+            pinned: pinned,
+            saved: saved,
+        };
+
+        await setPreferences(agent, [...otherPrefs, newSavedFeedsPref]);
+    } catch (error) {
+        console.error("Error updating saved feeds preference:", error);
+        throw error;
+    }
+};
+
+/**
+ * Updates parts of the authenticated user's profile.
+ * @param agent Initialized BskyAgent
+ * @param updates An object containing parts of the profile to update (e.g., { languages: ['en', 'fr'] })
+ * @returns The server's response to the profile update.
+ */
+export const updateProfileDetails = async (
+  agent: BskyAgent,
+  updates: Partial<Pick<AppBskyActorDefs.ProfileViewDetailed, 'languages' | 'displayName' | 'description' | 'avatar' | 'banner'>>
+): Promise<AppBskyActorDefs.ProfileViewDetailed> => { // Using ProfileViewDetailed for return type consistency, though upsertProfile returns a basic { uri, cid } on success usually.
+                                                    // The actual profile data might need re-fetching if full updated view is needed immediately.
+  try {
+    // agent.upsertProfile returns { uri: string, cid: string }
+    // It takes a callback that receives the existing profile (or undefined if new)
+    // and should return the profile object to be saved.
+    const response = await agent.upsertProfile(existing => {
+      const newProfile: any = { ...existing, ...updates };
+      // Ensure specific fields that are not part of standard ProfileViewBasic but are in ProfileViewDetailed
+      // are handled correctly or omitted if they shouldn't be directly upserted.
+      // For example, `did`, `handle` are immutable here. `viewer` state is also not part of the upsert.
+      // `labels` are also set via different methods.
+      // We are only interested in `languages`, `displayName`, `description`, `avatar`, `banner` for this function.
+
+      // Clean up fields that are not part of the upsert schema for profile
+      // This is a simplified version. A more robust version would strictly pick known mutable fields.
+      delete newProfile.did;
+      delete newProfile.handle;
+      delete newProfile.viewer;
+      delete newProfile.labels;
+      delete newProfile.indexedAt; // Should not be part of an upsert
+
+      return newProfile;
+    });
+
+    // After upserting, the response typically just contains uri and cid.
+    // To return the full updated profile, we might need to call getProfile again.
+    // For now, let's return a conceptual success or the partial update.
+    // Or, more practically, the calling function should re-fetch profile if it needs the latest full view.
+    console.log("Profile update response (upsertProfile):", response);
+
+    // For consistency with getProfile, let's refetch the profile.
+    // This ensures the returned data is the full, current server state.
+    if (agent.session?.did) { // session should exist if agent is making authenticated calls
+        return getProfile(agent, agent.session.did);
+    } else {
+        // This case should ideally not be reached if agent is properly authenticated
+        throw new Error("User session not found, cannot re-fetch profile after update.");
+    }
+
+  } catch (error) {
+    console.error("Error updating profile details:", error);
+    throw error;
+  }
+};
+
+
+// Note on getTimeline:
+// The `getTimeline` method in BskyAgent usually fetches the "home" or "following" timeline.
+// To fetch a specific feed generated by a feed generator, `getFeed` is the correct method,
+// using the feed generator's AT URI. The `getTimeline` function above is a basic version
+// and might need adjustment if `algorithm` refers to a feed generator URI.
+// The current implementation of `getTimeline` will fetch the default "Following" timeline.
+// If `feedUri` in the original prompt for `getTimeline` was actually a feed generator URI,
+// then the `getFeed` function I've written is the one to use for that purpose.
+// I've kept `getTimeline` as a general "fetch my main timeline" function.
+
+// Note on AppBskyActorPreferences: (This note can be removed as the import is now removed)
+// The import `AppBskyActorPreferences` was in the prompt but `AppBskyActorDefs.Preference` and
+// specific preference types like `AppBskyActorDefs.SavedFeedsPref` are generally used from `@atproto/api`.
+// `AppBskyActorDefs.Preferences` is the type for the response object of `getPreferences`, which is `{ preferences: AppBskyActorDefs.Preference[] }`.
+// I've used `AppBskyActorDefs.Preference` for individual preference items.
+
+// Corrected import (removing AppBskyActorPreferences if not used)
+// import { BskyAgent, AppBskyActorDefs, AppBskyFeedDefs } from '@atproto/api'; // This line is now effectively the first line.
diff --git a/src/utils/richtextProcessor.ts b/src/utils/richtextProcessor.ts
new file mode 100644
index 0000000..9ceb2cc
--- /dev/null
+++ b/src/utils/richtextProcessor.ts
@@ -0,0 +1,94 @@
+import { AppBskyRichtextFacet } from '@atproto/api';
+import React from 'react'; // Needed for React.Fragment, not for Link in this file
+
+export interface ProcessedRichTextSegment {
+  type: 'text' | 'link' | 'mention' | 'tag'; // Added 'tag' for hashtags
+  content: string;
+  href?: string; // For links and mentions
+  tag?: string; // For hashtags
+}
+
+export const processFacets = (
+  text: string,
+  facets?: AppBskyRichtextFacet.Main[]
+): ProcessedRichTextSegment[] => {
+  if (!facets || facets.length === 0) {
+    return [{ type: 'text', content: text }];
+  }
+
+  const segments: ProcessedRichTextSegment[] = [];
+  let lastByteEnd = 0;
+
+  // Ensure TextEncoder and TextDecoder are available (they are standard in modern browsers and Node.js)
+  // If targeting older environments, polyfills might be needed, but for Next.js/React, this should be fine.
+  const textEncoder = new TextEncoder();
+  const textDecoder = new TextDecoder();
+  const textBytes = textEncoder.encode(text); // Encode the full text once
+
+  // Sort facets by byteStart to process them in order
+  const sortedFacets = [...facets].sort((a, b) => a.index.byteStart - b.index.byteStart);
+
+  for (const facet of sortedFacets) {
+    const byteStart = Math.max(0, facet.index.byteStart); // Ensure byteStart is not negative
+    const byteEnd = Math.min(textBytes.length, facet.index.byteEnd); // Ensure byteEnd does not exceed text length
+
+    if (byteStart > byteEnd) { // Skip invalid facets where start is after end
+        console.warn("Skipping invalid facet where byteStart > byteEnd", facet);
+        continue;
+    }
+
+    // Add text segment before the facet
+    if (byteStart > lastByteEnd) {
+      segments.push({
+        type: 'text',
+        content: textDecoder.decode(textBytes.slice(lastByteEnd, byteStart)),
+      });
+    }
+
+    const facetTextBytes = textBytes.slice(byteStart, byteEnd);
+    const facetText = textDecoder.decode(facetTextBytes);
+
+    let featureProcessed = false;
+    if (facet.features && facet.features.length > 0) {
+        const feature = facet.features[0]; // Process the first feature primarily
+        if (AppBskyRichtextFacet.isLink(feature)) {
+          segments.push({
+            type: 'link',
+            content: facetText,
+            href: feature.uri,
+          });
+          featureProcessed = true;
+        } else if (AppBskyRichtextFacet.isMention(feature)) {
+          segments.push({
+            type: 'mention',
+            content: facetText, // facetText should be like "@handle.bsky.social"
+            href: `/profile/${feature.did}`,
+          });
+          featureProcessed = true;
+        } else if (AppBskyRichtextFacet.isTag(feature)) {
+            segments.push({
+                type: 'tag',
+                content: facetText, // facetText should be like "#tag"
+                tag: feature.tag,
+            });
+            featureProcessed = true;
+        }
+    }
+
+    if (!featureProcessed) {
+        // Fallback for unknown facet types or facets with no features, just add as text
+        segments.push({ type: 'text', content: facetText });
+    }
+
+    lastByteEnd = byteEnd;
+  }
+
+  // Add any remaining text after the last facet
+  if (lastByteEnd < textBytes.length) {
+    segments.push({
+      type: 'text',
+      content: textDecoder.decode(textBytes.slice(lastByteEnd)),
+    });
+  }
+  return segments;
+};
diff --git a/subjectResolver.ts b/subjectResolver.ts
new file mode 100644
index 0000000..ff1335b
--- /dev/null
+++ b/subjectResolver.ts
@@ -0,0 +1,79 @@
+"use client";
+
+import React from 'react';
+
+export enum SubjectType {
+  Handle = 'handle',
+  Did = 'did',
+  Unknown = 'unknown'
+}
+
+/**
+ * Parses a BlueSky subject (handle or DID) and returns its type and normalized form
+ */
+export const parseSubject = (subject: string): { type: SubjectType; value: string } => {
+  // Clean up the input
+  const cleaned = subject.trim().toLowerCase();
+
+  // Check if it's a DID
+  if (cleaned.startsWith('did:plc:')) {
+    return {
+      type: SubjectType.Did,
+      value: cleaned
+    };
+  }
+
+  // Check if it's a handle with @ prefix
+  if (cleaned.startsWith('@')) {
+    return {
+      type: SubjectType.Handle,
+      value: cleaned.substring(1) // Remove the @ prefix
+    };
+  }
+
+  // Check if it looks like a handle (contains a dot)
+  if (cleaned.includes('.')) {
+    return {
+      type: SubjectType.Handle,
+      value: cleaned
+    };
+  }
+
+  // If we can't determine, assume it's a handle without domain
+  return {
+    type: SubjectType.Handle,
+    value: cleaned
+  };
+};
+
+/**
+ * Validates if a subject is in a valid format for BlueSky
+ */
+export const isValidSubject = (subject: string): boolean => {
+  const { type, value } = parseSubject(subject);
+
+  if (type === SubjectType.Did) {
+    // DIDs should start with did:plc: and have additional characters
+    return value.startsWith('did:plc:') && value.length > 8;
+  }
+
+  if (type === SubjectType.Handle) {
+    // Handles should either contain a dot (domain) or be at least 3 characters
+    return value.includes('.') || value.length >= 3;
+  }
+
+  return false;
+};
+
+/**
+ * Formats a subject for display, adding @ prefix to handles if needed
+ */
+export const formatSubjectForDisplay = (subject: string): string => {
+  const { type, value } = parseSubject(subject);
+
+  if (type === SubjectType.Handle && !value.startsWith('@')) {
+    return `@${value}`;
+  }
+
+  return value;
+};
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..8d42a6a
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,40 @@
+{
+  "compilerOptions": {
+    "target": "ES2017",
+    "lib": [
+      "dom",
+      "dom.iterable",
+      "esnext"
+    ],
+    "allowJs": true,
+    "skipLibCheck": true,
+    "strict": false,
+    "noEmit": true,
+    "incremental": true,
+    "module": "esnext",
+    "esModuleInterop": true,
+    "moduleResolution": "node",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "jsx": "preserve",
+    "baseUrl": ".",
+    "paths": {
+      "@/*": ["./*", "./src/*"]
+    },
+    "plugins": [
+      {
+        "name": "next"
+      }
+    ]
+  },
+  "include": [
+    "**/*.ts",
+    "**/*.tsx",
+    ".next/types/**/*.ts",
+    "next-env.d.ts",
+    "out/types/**/*.ts"
+  ],
+  "exclude": [
+    "node_modules"
+  ]
+}
diff --git a/yarn.lock b/yarn.lock
new file mode 100644
index 0000000..04b7876
--- /dev/null
+++ b/yarn.lock
@@ -0,0 +1,7571 @@
+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+# yarn lockfile v1
+
+
+"@alloc/quick-lru@^5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz"
+  integrity sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==
+
+"@ast-grep/napi-darwin-arm64@0.33.1":
+  version "0.33.1"
+  resolved "https://registry.npmjs.org/@ast-grep/napi-darwin-arm64/-/napi-darwin-arm64-0.33.1.tgz"
+  integrity sha512-HJcjxDhF1THn6VlUMpYFQoZBWWMk3flBJpLEDWLjH3Umk7/4tQvaJeKwhl32Snegj35p9SHGz1cS8D2k1nDsEg==
+
+"@ast-grep/napi@^0.33.1":
+  version "0.33.1"
+  resolved "https://registry.npmjs.org/@ast-grep/napi/-/napi-0.33.1.tgz"
+  integrity sha512-AfUsqmEa8NoYq1QhY2LWKCgKRBrCW89WB2D7t4hhTwXcfBB+CWRtY11vUughpfGLrdyziPst7kpdFzI9TC9Efw==
+  optionalDependencies:
+    "@ast-grep/napi-darwin-arm64" "0.33.1"
+    "@ast-grep/napi-darwin-x64" "0.33.1"
+    "@ast-grep/napi-linux-arm64-gnu" "0.33.1"
+    "@ast-grep/napi-linux-arm64-musl" "0.33.1"
+    "@ast-grep/napi-linux-x64-gnu" "0.33.1"
+    "@ast-grep/napi-linux-x64-musl" "0.33.1"
+    "@ast-grep/napi-win32-arm64-msvc" "0.33.1"
+    "@ast-grep/napi-win32-ia32-msvc" "0.33.1"
+    "@ast-grep/napi-win32-x64-msvc" "0.33.1"
+
+"@atproto-labs/did-resolver@0.1.13":
+  version "0.1.13"
+  resolved "https://registry.npmjs.org/@atproto-labs/did-resolver/-/did-resolver-0.1.13.tgz"
+  integrity sha512-DG3YNaCKc6PAIv1Gsz3E1Kufw2t14OBxe4LdKK7KKLCNoex51hm+A5yMevShe3BSll+QosqWYIEgkPSc5xBoGQ==
+  dependencies:
+    "@atproto-labs/fetch" "0.2.3"
+    "@atproto-labs/pipe" "0.1.1"
+    "@atproto-labs/simple-store" "0.2.0"
+    "@atproto-labs/simple-store-memory" "0.1.3"
+    "@atproto/did" "0.1.5"
+    zod "^3.23.8"
+
+"@atproto-labs/fetch@0.2.3":
+  version "0.2.3"
+  resolved "https://registry.npmjs.org/@atproto-labs/fetch/-/fetch-0.2.3.tgz"
+  integrity sha512-NZtbJOCbxKUFRFKMpamT38PUQMY0hX0p7TG5AEYOPhZKZEP7dHZ1K2s1aB8MdVH0qxmqX7nQleNrrvLf09Zfdw==
+  dependencies:
+    "@atproto-labs/pipe" "0.1.1"
+
+"@atproto-labs/handle-resolver@0.1.8":
+  version "0.1.8"
+  resolved "https://registry.npmjs.org/@atproto-labs/handle-resolver/-/handle-resolver-0.1.8.tgz"
+  integrity sha512-Y0ckccoCGDo/3g4thPkgp9QcORmc+qqEaCBCYCZYtfLIQp4775u22wd+4fyEyJP4DqoReKacninkICgRGfs3dQ==
+  dependencies:
+    "@atproto-labs/simple-store" "0.2.0"
+    "@atproto-labs/simple-store-memory" "0.1.3"
+    "@atproto/did" "0.1.5"
+    zod "^3.23.8"
+
+"@atproto-labs/identity-resolver@0.1.17":
+  version "0.1.17"
+  resolved "https://registry.npmjs.org/@atproto-labs/identity-resolver/-/identity-resolver-0.1.17.tgz"
+  integrity sha512-EaH9Lm8M85IKRx+oWZ4tppYRVH8u+MYpEz1kjzYeM3ttZ2xcqKVmYHiOIgd5YPCVV2EIfXKnlM4soHQ+rZ1c6A==
+  dependencies:
+    "@atproto-labs/did-resolver" "0.1.13"
+    "@atproto-labs/handle-resolver" "0.1.8"
+    "@atproto/syntax" "0.4.0"
+
+"@atproto-labs/pipe@0.1.1":
+  version "0.1.1"
+  resolved "https://registry.npmjs.org/@atproto-labs/pipe/-/pipe-0.1.1.tgz"
+  integrity sha512-hdNw2oUs2B6BN1lp+32pF7cp8EMKuIN5Qok2Vvv/aOpG/3tNSJ9YkvfI0k6Zd188LeDDYRUpYpxcoFIcGH/FNg==
+
+"@atproto-labs/simple-store-memory@0.1.3":
+  version "0.1.3"
+  resolved "https://registry.npmjs.org/@atproto-labs/simple-store-memory/-/simple-store-memory-0.1.3.tgz"
+  integrity sha512-jkitT9+AtU+0b28DoN92iURLaCt/q/q4yX8q6V+9LSwYlUTqKoj/5NFKvF7x6EBuG+gpUdlcycbH7e60gjOhRQ==
+  dependencies:
+    "@atproto-labs/simple-store" "0.2.0"
+    lru-cache "^10.2.0"
+
+"@atproto-labs/simple-store@0.2.0":
+  version "0.2.0"
+  resolved "https://registry.npmjs.org/@atproto-labs/simple-store/-/simple-store-0.2.0.tgz"
+  integrity sha512-0bRbAlI8Ayh03wRwncAMEAyUKtZ+AuTS1jgPrfym1WVOAOiottI/ZmgccqLl6w5MbxVcClNQF7WYGKvGwGoIhA==
+
+"@atproto/api@^0.15.6":
+  version "0.15.12"
+  resolved "https://registry.npmjs.org/@atproto/api/-/api-0.15.12.tgz"
+  integrity sha512-51IHenZMA+Ekfe2OlZL/mTFqvZQU93jI4xsLvTFhGc4tSQYCHV9r/AJTANPZLFrhm9GfWZ0n90r/9IQl9eicjg==
+  dependencies:
+    "@atproto/common-web" "^0.4.2"
+    "@atproto/lexicon" "^0.4.11"
+    "@atproto/syntax" "^0.4.0"
+    "@atproto/xrpc" "^0.7.0"
+    await-lock "^2.2.2"
+    multiformats "^9.9.0"
+    tlds "^1.234.0"
+    zod "^3.23.8"
+
+"@atproto/common-web@^0.4.2":
+  version "0.4.2"
+  resolved "https://registry.npmjs.org/@atproto/common-web/-/common-web-0.4.2.tgz"
+  integrity sha512-vrXwGNoFGogodjQvJDxAeP3QbGtawgZute2ed1XdRO0wMixLk3qewtikZm06H259QDJVu6voKC5mubml+WgQUw==
+  dependencies:
+    graphemer "^1.4.0"
+    multiformats "^9.9.0"
+    uint8arrays "3.0.0"
+    zod "^3.23.8"
+
+"@atproto/did@0.1.5":
+  version "0.1.5"
+  resolved "https://registry.npmjs.org/@atproto/did/-/did-0.1.5.tgz"
+  integrity sha512-8+1D08QdGE5TF0bB0vV8HLVrVZJeLNITpRTUVEoABNMRaUS7CoYSVb0+JNQDeJIVmqMjOL8dOjvCUDkp3gEaGQ==
+  dependencies:
+    zod "^3.23.8"
+
+"@atproto/jwk-jose@0.1.7":
+  version "0.1.7"
+  resolved "https://registry.npmjs.org/@atproto/jwk-jose/-/jwk-jose-0.1.7.tgz"
+  integrity sha512-TVObTvJVTb0NE6YdcMPzLZPkfUb4WUxEpGQqDvbGnO+dJue6L4lUfIGfcIqybfHlE7Smsz/KCb7llRyR3M889Q==
+  dependencies:
+    "@atproto/jwk" "0.2.0"
+    jose "^5.2.0"
+
+"@atproto/jwk-webcrypto@0.1.7":
+  version "0.1.7"
+  resolved "https://registry.npmjs.org/@atproto/jwk-webcrypto/-/jwk-webcrypto-0.1.7.tgz"
+  integrity sha512-QgustAJBGL91A9GXWQ3b+m7AcjDWP8oqSJDSx+3puBpqkenMZ22prILsUdZc+uBWAri5u8dRQVz12MAQkowO2A==
+  dependencies:
+    "@atproto/jwk" "0.2.0"
+    "@atproto/jwk-jose" "0.1.7"
+    zod "^3.23.8"
+
+"@atproto/jwk@0.2.0":
+  version "0.2.0"
+  resolved "https://registry.npmjs.org/@atproto/jwk/-/jwk-0.2.0.tgz"
+  integrity sha512-foOxExbw04XCaoLaGdv9BQj0Ac7snZsk6IpQjOsjYatf+i62Pi9bUkZ0MAoA75HPk8ZmKoDnbA60uBMmiOPPHQ==
+  dependencies:
+    multiformats "^9.9.0"
+    zod "^3.23.8"
+
+"@atproto/lexicon@^0.4.11":
+  version "0.4.11"
+  resolved "https://registry.npmjs.org/@atproto/lexicon/-/lexicon-0.4.11.tgz"
+  integrity sha512-btefdnvNz2Ao2I+qbmj0F06HC8IlrM/IBz6qOBS50r0S6uDf5tOO+Mv2tSVdimFkdzyDdLtBI1sV36ONxz2cOw==
+  dependencies:
+    "@atproto/common-web" "^0.4.2"
+    "@atproto/syntax" "^0.4.0"
+    iso-datestring-validator "^2.2.2"
+    multiformats "^9.9.0"
+    zod "^3.23.8"
+
+"@atproto/oauth-client-browser@^0.3.16":
+  version "0.3.20"
+  resolved "https://registry.npmjs.org/@atproto/oauth-client-browser/-/oauth-client-browser-0.3.20.tgz"
+  integrity sha512-PP1DbZjJjFUodQswvOfIfPyB0bJ5EhBjcLxFf2xevBYpBuuMlaF21znewKT/m9dAvBiDjBDZD71gqAtLfMnoUA==
+  dependencies:
+    "@atproto-labs/did-resolver" "0.1.13"
+    "@atproto-labs/handle-resolver" "0.1.8"
+    "@atproto-labs/simple-store" "0.2.0"
+    "@atproto/did" "0.1.5"
+    "@atproto/jwk" "0.2.0"
+    "@atproto/jwk-webcrypto" "0.1.7"
+    "@atproto/oauth-client" "0.3.20"
+    "@atproto/oauth-types" "0.2.8"
+
+"@atproto/oauth-client@0.3.20":
+  version "0.3.20"
+  resolved "https://registry.npmjs.org/@atproto/oauth-client/-/oauth-client-0.3.20.tgz"
+  integrity sha512-aclxN2vD5ldc9YiQtX6z4S5g5lU12sz297gzuTxBFUYiS3bh7dxU8j/cbD/BDvXIiVRzzzc5kOgE1CgT9XZ2mg==
+  dependencies:
+    "@atproto-labs/did-resolver" "0.1.13"
+    "@atproto-labs/fetch" "0.2.3"
+    "@atproto-labs/handle-resolver" "0.1.8"
+    "@atproto-labs/identity-resolver" "0.1.17"
+    "@atproto-labs/simple-store" "0.2.0"
+    "@atproto-labs/simple-store-memory" "0.1.3"
+    "@atproto/did" "0.1.5"
+    "@atproto/jwk" "0.2.0"
+    "@atproto/oauth-types" "0.2.8"
+    "@atproto/xrpc" "0.7.0"
+    multiformats "^9.9.0"
+    zod "^3.23.8"
+
+"@atproto/oauth-types@0.2.8":
+  version "0.2.8"
+  resolved "https://registry.npmjs.org/@atproto/oauth-types/-/oauth-types-0.2.8.tgz"
+  integrity sha512-xcYI2JmhrWwscePDoaKeDawVCCZkcvBqrBFMpMk4gf/OujH0pNSKBD/aWsayc6WvujVbTqwrG2hwPLfRqzJbwg==
+  dependencies:
+    "@atproto/jwk" "0.2.0"
+    zod "^3.23.8"
+
+"@atproto/syntax@^0.4.0", "@atproto/syntax@0.4.0":
+  version "0.4.0"
+  resolved "https://registry.npmjs.org/@atproto/syntax/-/syntax-0.4.0.tgz"
+  integrity sha512-b9y5ceHS8YKOfP3mdKmwAx5yVj9294UN7FG2XzP6V5aKUdFazEYRnR9m5n5ZQFKa3GNvz7de9guZCJ/sUTcOAA==
+
+"@atproto/xrpc@^0.7.0", "@atproto/xrpc@0.7.0":
+  version "0.7.0"
+  resolved "https://registry.npmjs.org/@atproto/xrpc/-/xrpc-0.7.0.tgz"
+  integrity sha512-SfhP9dGx2qclaScFDb58Jnrmim5nk4geZXCqg6sB0I/KZhZEkr9iIx1hLCp+sxkIfEsmEJjeWO4B0rjUIJW5cw==
+  dependencies:
+    "@atproto/lexicon" "^0.4.11"
+    zod "^3.23.8"
+
+"@aws-crypto/crc32@5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/crc32/-/crc32-5.2.0.tgz"
+  integrity sha512-nLbCWqQNgUiwwtFsen1AdzAtvuLRsQS8rYgMuxCrdKf9kOssamGLuPwyTY9wyYblNr9+1XM8v6zoDTPPSIeANg==
+  dependencies:
+    "@aws-crypto/util" "^5.2.0"
+    "@aws-sdk/types" "^3.222.0"
+    tslib "^2.6.2"
+
+"@aws-crypto/crc32c@5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/crc32c/-/crc32c-5.2.0.tgz"
+  integrity sha512-+iWb8qaHLYKrNvGRbiYRHSdKRWhto5XlZUEBwDjYNf+ly5SVYG6zEoYIdxvf5R3zyeP16w4PLBn3rH1xc74Rag==
+  dependencies:
+    "@aws-crypto/util" "^5.2.0"
+    "@aws-sdk/types" "^3.222.0"
+    tslib "^2.6.2"
+
+"@aws-crypto/ie11-detection@^3.0.0":
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/ie11-detection/-/ie11-detection-3.0.0.tgz"
+  integrity sha512-341lBBkiY1DfDNKai/wXM3aujNBkXR7tq1URPQDL9wi3AUbI80NR74uF1TXHMm7po1AcnFk8iu2S2IeU/+/A+Q==
+  dependencies:
+    tslib "^1.11.1"
+
+"@aws-crypto/sha1-browser@5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/sha1-browser/-/sha1-browser-5.2.0.tgz"
+  integrity sha512-OH6lveCFfcDjX4dbAvCFSYUjJZjDr/3XJ3xHtjn3Oj5b9RjojQo8npoLeA/bNwkOkrSQ0wgrHzXk4tDRxGKJeg==
+  dependencies:
+    "@aws-crypto/supports-web-crypto" "^5.2.0"
+    "@aws-crypto/util" "^5.2.0"
+    "@aws-sdk/types" "^3.222.0"
+    "@aws-sdk/util-locate-window" "^3.0.0"
+    "@smithy/util-utf8" "^2.0.0"
+    tslib "^2.6.2"
+
+"@aws-crypto/sha256-browser@3.0.0":
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/sha256-browser/-/sha256-browser-3.0.0.tgz"
+  integrity sha512-8VLmW2B+gjFbU5uMeqtQM6Nj0/F1bro80xQXCW6CQBWgosFWXTx77aeOF5CAIAmbOK64SdMBJdNr6J41yP5mvQ==
+  dependencies:
+    "@aws-crypto/ie11-detection" "^3.0.0"
+    "@aws-crypto/sha256-js" "^3.0.0"
+    "@aws-crypto/supports-web-crypto" "^3.0.0"
+    "@aws-crypto/util" "^3.0.0"
+    "@aws-sdk/types" "^3.222.0"
+    "@aws-sdk/util-locate-window" "^3.0.0"
+    "@aws-sdk/util-utf8-browser" "^3.0.0"
+    tslib "^1.11.1"
+
+"@aws-crypto/sha256-browser@5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/sha256-browser/-/sha256-browser-5.2.0.tgz"
+  integrity sha512-AXfN/lGotSQwu6HNcEsIASo7kWXZ5HYWvfOmSNKDsEqC4OashTp8alTmaz+F7TC2L083SFv5RdB+qU3Vs1kZqw==
+  dependencies:
+    "@aws-crypto/sha256-js" "^5.2.0"
+    "@aws-crypto/supports-web-crypto" "^5.2.0"
+    "@aws-crypto/util" "^5.2.0"
+    "@aws-sdk/types" "^3.222.0"
+    "@aws-sdk/util-locate-window" "^3.0.0"
+    "@smithy/util-utf8" "^2.0.0"
+    tslib "^2.6.2"
+
+"@aws-crypto/sha256-js@^3.0.0", "@aws-crypto/sha256-js@3.0.0":
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/sha256-js/-/sha256-js-3.0.0.tgz"
+  integrity sha512-PnNN7os0+yd1XvXAy23CFOmTbMaDxgxXtTKHybrJ39Y8kGzBATgBFibWJKH6BhytLI/Zyszs87xCOBNyBig6vQ==
+  dependencies:
+    "@aws-crypto/util" "^3.0.0"
+    "@aws-sdk/types" "^3.222.0"
+    tslib "^1.11.1"
+
+"@aws-crypto/sha256-js@^5.2.0", "@aws-crypto/sha256-js@5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/sha256-js/-/sha256-js-5.2.0.tgz"
+  integrity sha512-FFQQyu7edu4ufvIZ+OadFpHHOt+eSTBaYaki44c+akjg7qZg9oOQeLlk77F6tSYqjDAFClrHJk9tMf0HdVyOvA==
+  dependencies:
+    "@aws-crypto/util" "^5.2.0"
+    "@aws-sdk/types" "^3.222.0"
+    tslib "^2.6.2"
+
+"@aws-crypto/supports-web-crypto@^3.0.0":
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/supports-web-crypto/-/supports-web-crypto-3.0.0.tgz"
+  integrity sha512-06hBdMwUAb2WFTuGG73LSC0wfPu93xWwo5vL2et9eymgmu3Id5vFAHBbajVWiGhPO37qcsdCap/FqXvJGJWPIg==
+  dependencies:
+    tslib "^1.11.1"
+
+"@aws-crypto/supports-web-crypto@^5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/supports-web-crypto/-/supports-web-crypto-5.2.0.tgz"
+  integrity sha512-iAvUotm021kM33eCdNfwIN//F77/IADDSs58i+MDaOqFrVjZo9bAal0NK7HurRuWLLpF1iLX7gbWrjHjeo+YFg==
+  dependencies:
+    tslib "^2.6.2"
+
+"@aws-crypto/util@^3.0.0":
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/util/-/util-3.0.0.tgz"
+  integrity sha512-2OJlpeJpCR48CC8r+uKVChzs9Iungj9wkZrl8Z041DWEWvyIHILYKCPNzJghKsivj+S3mLo6BVc7mBNzdxA46w==
+  dependencies:
+    "@aws-sdk/types" "^3.222.0"
+    "@aws-sdk/util-utf8-browser" "^3.0.0"
+    tslib "^1.11.1"
+
+"@aws-crypto/util@^5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/util/-/util-5.2.0.tgz"
+  integrity sha512-4RkU9EsI6ZpBve5fseQlGNUWKMa1RLPQ1dnjnQoe07ldfIzcsGb5hC5W0Dm7u423KWzawlrpbjXBrXCEv9zazQ==
+  dependencies:
+    "@aws-sdk/types" "^3.222.0"
+    "@smithy/util-utf8" "^2.0.0"
+    tslib "^2.6.2"
+
+"@aws-crypto/util@5.2.0":
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/@aws-crypto/util/-/util-5.2.0.tgz"
+  integrity sha512-4RkU9EsI6ZpBve5fseQlGNUWKMa1RLPQ1dnjnQoe07ldfIzcsGb5hC5W0Dm7u423KWzawlrpbjXBrXCEv9zazQ==
+  dependencies:
+    "@aws-sdk/types" "^3.222.0"
+    "@smithy/util-utf8" "^2.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/client-cloudfront@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-cloudfront/-/client-cloudfront-3.398.0.tgz"
+  integrity sha512-kISKhqN1k48TaMPbLgq9jj7mO2jvbJdhirvfu4JW3jhFhENnkY0oCwTPvR4Q6Ne2as6GFAMo2XZDZq4rxC7YDw==
+  dependencies:
+    "@aws-crypto/sha256-browser" "3.0.0"
+    "@aws-crypto/sha256-js" "3.0.0"
+    "@aws-sdk/client-sts" "3.398.0"
+    "@aws-sdk/credential-provider-node" "3.398.0"
+    "@aws-sdk/middleware-host-header" "3.398.0"
+    "@aws-sdk/middleware-logger" "3.398.0"
+    "@aws-sdk/middleware-recursion-detection" "3.398.0"
+    "@aws-sdk/middleware-signing" "3.398.0"
+    "@aws-sdk/middleware-user-agent" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@aws-sdk/util-endpoints" "3.398.0"
+    "@aws-sdk/util-user-agent-browser" "3.398.0"
+    "@aws-sdk/util-user-agent-node" "3.398.0"
+    "@aws-sdk/xml-builder" "3.310.0"
+    "@smithy/config-resolver" "^2.0.5"
+    "@smithy/fetch-http-handler" "^2.0.5"
+    "@smithy/hash-node" "^2.0.5"
+    "@smithy/invalid-dependency" "^2.0.5"
+    "@smithy/middleware-content-length" "^2.0.5"
+    "@smithy/middleware-endpoint" "^2.0.5"
+    "@smithy/middleware-retry" "^2.0.5"
+    "@smithy/middleware-serde" "^2.0.5"
+    "@smithy/middleware-stack" "^2.0.0"
+    "@smithy/node-config-provider" "^2.0.5"
+    "@smithy/node-http-handler" "^2.0.5"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/smithy-client" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    "@smithy/url-parser" "^2.0.5"
+    "@smithy/util-base64" "^2.0.0"
+    "@smithy/util-body-length-browser" "^2.0.0"
+    "@smithy/util-body-length-node" "^2.1.0"
+    "@smithy/util-defaults-mode-browser" "^2.0.5"
+    "@smithy/util-defaults-mode-node" "^2.0.5"
+    "@smithy/util-retry" "^2.0.0"
+    "@smithy/util-stream" "^2.0.5"
+    "@smithy/util-utf8" "^2.0.0"
+    "@smithy/util-waiter" "^2.0.5"
+    fast-xml-parser "4.2.5"
+    tslib "^2.5.0"
+
+"@aws-sdk/client-dynamodb@^3.398.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-dynamodb/-/client-dynamodb-3.825.0.tgz"
+  integrity sha512-cTtop7gPBJPgD5YaNoHqTvZXtU4gjF0q1ZdaWvEk+5vRRJcm77n4/nyBvaJz3ivkx+AJHjI6iGlxRTaV29BOBg==
+  dependencies:
+    "@aws-crypto/sha256-browser" "5.2.0"
+    "@aws-crypto/sha256-js" "5.2.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/credential-provider-node" "3.825.0"
+    "@aws-sdk/middleware-endpoint-discovery" "3.821.0"
+    "@aws-sdk/middleware-host-header" "3.821.0"
+    "@aws-sdk/middleware-logger" "3.821.0"
+    "@aws-sdk/middleware-recursion-detection" "3.821.0"
+    "@aws-sdk/middleware-user-agent" "3.825.0"
+    "@aws-sdk/region-config-resolver" "3.821.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-endpoints" "3.821.0"
+    "@aws-sdk/util-user-agent-browser" "3.821.0"
+    "@aws-sdk/util-user-agent-node" "3.825.0"
+    "@smithy/config-resolver" "^4.1.4"
+    "@smithy/core" "^3.5.2"
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/hash-node" "^4.0.4"
+    "@smithy/invalid-dependency" "^4.0.4"
+    "@smithy/middleware-content-length" "^4.0.4"
+    "@smithy/middleware-endpoint" "^4.1.10"
+    "@smithy/middleware-retry" "^4.1.11"
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/middleware-stack" "^4.0.4"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-body-length-node" "^4.0.0"
+    "@smithy/util-defaults-mode-browser" "^4.0.18"
+    "@smithy/util-defaults-mode-node" "^4.0.18"
+    "@smithy/util-endpoints" "^3.0.6"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-retry" "^4.0.5"
+    "@smithy/util-utf8" "^4.0.0"
+    "@smithy/util-waiter" "^4.0.5"
+    "@types/uuid" "^9.0.1"
+    tslib "^2.6.2"
+    uuid "^9.0.1"
+
+"@aws-sdk/client-lambda@^3.398.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-lambda/-/client-lambda-3.825.0.tgz"
+  integrity sha512-C/nyWm4aEVBisnAMAUZK1qrXH01YG8sMHzCwa2CwWp88uPlDmvfyq73i7rsWcG1pUIOw/a5Qk7Zc2zf+1Fat+g==
+  dependencies:
+    "@aws-crypto/sha256-browser" "5.2.0"
+    "@aws-crypto/sha256-js" "5.2.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/credential-provider-node" "3.825.0"
+    "@aws-sdk/middleware-host-header" "3.821.0"
+    "@aws-sdk/middleware-logger" "3.821.0"
+    "@aws-sdk/middleware-recursion-detection" "3.821.0"
+    "@aws-sdk/middleware-user-agent" "3.825.0"
+    "@aws-sdk/region-config-resolver" "3.821.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-endpoints" "3.821.0"
+    "@aws-sdk/util-user-agent-browser" "3.821.0"
+    "@aws-sdk/util-user-agent-node" "3.825.0"
+    "@smithy/config-resolver" "^4.1.4"
+    "@smithy/core" "^3.5.2"
+    "@smithy/eventstream-serde-browser" "^4.0.4"
+    "@smithy/eventstream-serde-config-resolver" "^4.1.2"
+    "@smithy/eventstream-serde-node" "^4.0.4"
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/hash-node" "^4.0.4"
+    "@smithy/invalid-dependency" "^4.0.4"
+    "@smithy/middleware-content-length" "^4.0.4"
+    "@smithy/middleware-endpoint" "^4.1.10"
+    "@smithy/middleware-retry" "^4.1.11"
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/middleware-stack" "^4.0.4"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-body-length-node" "^4.0.0"
+    "@smithy/util-defaults-mode-browser" "^4.0.18"
+    "@smithy/util-defaults-mode-node" "^4.0.18"
+    "@smithy/util-endpoints" "^3.0.6"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-retry" "^4.0.5"
+    "@smithy/util-stream" "^4.2.2"
+    "@smithy/util-utf8" "^4.0.0"
+    "@smithy/util-waiter" "^4.0.5"
+    tslib "^2.6.2"
+
+"@aws-sdk/client-s3@^3.398.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-s3/-/client-s3-3.825.0.tgz"
+  integrity sha512-253AYBQW2Tk5ZGUU+5XyrJzrIth3WGXfHm3q6Xuqm/kz29mEyiOatHgrrTdxmIlWOA7VFZnqx16JTy2UnWd9wA==
+  dependencies:
+    "@aws-crypto/sha1-browser" "5.2.0"
+    "@aws-crypto/sha256-browser" "5.2.0"
+    "@aws-crypto/sha256-js" "5.2.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/credential-provider-node" "3.825.0"
+    "@aws-sdk/middleware-bucket-endpoint" "3.821.0"
+    "@aws-sdk/middleware-expect-continue" "3.821.0"
+    "@aws-sdk/middleware-flexible-checksums" "3.825.0"
+    "@aws-sdk/middleware-host-header" "3.821.0"
+    "@aws-sdk/middleware-location-constraint" "3.821.0"
+    "@aws-sdk/middleware-logger" "3.821.0"
+    "@aws-sdk/middleware-recursion-detection" "3.821.0"
+    "@aws-sdk/middleware-sdk-s3" "3.825.0"
+    "@aws-sdk/middleware-ssec" "3.821.0"
+    "@aws-sdk/middleware-user-agent" "3.825.0"
+    "@aws-sdk/region-config-resolver" "3.821.0"
+    "@aws-sdk/signature-v4-multi-region" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-endpoints" "3.821.0"
+    "@aws-sdk/util-user-agent-browser" "3.821.0"
+    "@aws-sdk/util-user-agent-node" "3.825.0"
+    "@aws-sdk/xml-builder" "3.821.0"
+    "@smithy/config-resolver" "^4.1.4"
+    "@smithy/core" "^3.5.2"
+    "@smithy/eventstream-serde-browser" "^4.0.4"
+    "@smithy/eventstream-serde-config-resolver" "^4.1.2"
+    "@smithy/eventstream-serde-node" "^4.0.4"
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/hash-blob-browser" "^4.0.4"
+    "@smithy/hash-node" "^4.0.4"
+    "@smithy/hash-stream-node" "^4.0.4"
+    "@smithy/invalid-dependency" "^4.0.4"
+    "@smithy/md5-js" "^4.0.4"
+    "@smithy/middleware-content-length" "^4.0.4"
+    "@smithy/middleware-endpoint" "^4.1.10"
+    "@smithy/middleware-retry" "^4.1.11"
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/middleware-stack" "^4.0.4"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-body-length-node" "^4.0.0"
+    "@smithy/util-defaults-mode-browser" "^4.0.18"
+    "@smithy/util-defaults-mode-node" "^4.0.18"
+    "@smithy/util-endpoints" "^3.0.6"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-retry" "^4.0.5"
+    "@smithy/util-stream" "^4.2.2"
+    "@smithy/util-utf8" "^4.0.0"
+    "@smithy/util-waiter" "^4.0.5"
+    tslib "^2.6.2"
+
+"@aws-sdk/client-sqs@^3.398.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-sqs/-/client-sqs-3.825.0.tgz"
+  integrity sha512-OcbGV57SmFOKu+THRK2By9o2KQ9AvyCS9e6ZhPXaFPoOmeu2kWllLn9OpGBvJ2pR/+BzZbjmr3fOFiUeDcZyLw==
+  dependencies:
+    "@aws-crypto/sha256-browser" "5.2.0"
+    "@aws-crypto/sha256-js" "5.2.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/credential-provider-node" "3.825.0"
+    "@aws-sdk/middleware-host-header" "3.821.0"
+    "@aws-sdk/middleware-logger" "3.821.0"
+    "@aws-sdk/middleware-recursion-detection" "3.821.0"
+    "@aws-sdk/middleware-sdk-sqs" "3.825.0"
+    "@aws-sdk/middleware-user-agent" "3.825.0"
+    "@aws-sdk/region-config-resolver" "3.821.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-endpoints" "3.821.0"
+    "@aws-sdk/util-user-agent-browser" "3.821.0"
+    "@aws-sdk/util-user-agent-node" "3.825.0"
+    "@smithy/config-resolver" "^4.1.4"
+    "@smithy/core" "^3.5.2"
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/hash-node" "^4.0.4"
+    "@smithy/invalid-dependency" "^4.0.4"
+    "@smithy/md5-js" "^4.0.4"
+    "@smithy/middleware-content-length" "^4.0.4"
+    "@smithy/middleware-endpoint" "^4.1.10"
+    "@smithy/middleware-retry" "^4.1.11"
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/middleware-stack" "^4.0.4"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-body-length-node" "^4.0.0"
+    "@smithy/util-defaults-mode-browser" "^4.0.18"
+    "@smithy/util-defaults-mode-node" "^4.0.18"
+    "@smithy/util-endpoints" "^3.0.6"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-retry" "^4.0.5"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/client-sso@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-sso/-/client-sso-3.398.0.tgz"
+  integrity sha512-CygL0jhfibw4kmWXG/3sfZMFNjcXo66XUuPC4BqZBk8Rj5vFoxp1vZeMkDLzTIk97Nvo5J5Bh+QnXKhub6AckQ==
+  dependencies:
+    "@aws-crypto/sha256-browser" "3.0.0"
+    "@aws-crypto/sha256-js" "3.0.0"
+    "@aws-sdk/middleware-host-header" "3.398.0"
+    "@aws-sdk/middleware-logger" "3.398.0"
+    "@aws-sdk/middleware-recursion-detection" "3.398.0"
+    "@aws-sdk/middleware-user-agent" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@aws-sdk/util-endpoints" "3.398.0"
+    "@aws-sdk/util-user-agent-browser" "3.398.0"
+    "@aws-sdk/util-user-agent-node" "3.398.0"
+    "@smithy/config-resolver" "^2.0.5"
+    "@smithy/fetch-http-handler" "^2.0.5"
+    "@smithy/hash-node" "^2.0.5"
+    "@smithy/invalid-dependency" "^2.0.5"
+    "@smithy/middleware-content-length" "^2.0.5"
+    "@smithy/middleware-endpoint" "^2.0.5"
+    "@smithy/middleware-retry" "^2.0.5"
+    "@smithy/middleware-serde" "^2.0.5"
+    "@smithy/middleware-stack" "^2.0.0"
+    "@smithy/node-config-provider" "^2.0.5"
+    "@smithy/node-http-handler" "^2.0.5"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/smithy-client" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    "@smithy/url-parser" "^2.0.5"
+    "@smithy/util-base64" "^2.0.0"
+    "@smithy/util-body-length-browser" "^2.0.0"
+    "@smithy/util-body-length-node" "^2.1.0"
+    "@smithy/util-defaults-mode-browser" "^2.0.5"
+    "@smithy/util-defaults-mode-node" "^2.0.5"
+    "@smithy/util-retry" "^2.0.0"
+    "@smithy/util-utf8" "^2.0.0"
+    tslib "^2.5.0"
+
+"@aws-sdk/client-sso@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-sso/-/client-sso-3.825.0.tgz"
+  integrity sha512-U0J2RQUsxiin+uEYR8atMByojuvhtWvvEVSD2MhSUUnCa7BSu/H+4SbREBvnGDJ2nezrYh59bkSQBlp9c3Z9gg==
+  dependencies:
+    "@aws-crypto/sha256-browser" "5.2.0"
+    "@aws-crypto/sha256-js" "5.2.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/middleware-host-header" "3.821.0"
+    "@aws-sdk/middleware-logger" "3.821.0"
+    "@aws-sdk/middleware-recursion-detection" "3.821.0"
+    "@aws-sdk/middleware-user-agent" "3.825.0"
+    "@aws-sdk/region-config-resolver" "3.821.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-endpoints" "3.821.0"
+    "@aws-sdk/util-user-agent-browser" "3.821.0"
+    "@aws-sdk/util-user-agent-node" "3.825.0"
+    "@smithy/config-resolver" "^4.1.4"
+    "@smithy/core" "^3.5.2"
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/hash-node" "^4.0.4"
+    "@smithy/invalid-dependency" "^4.0.4"
+    "@smithy/middleware-content-length" "^4.0.4"
+    "@smithy/middleware-endpoint" "^4.1.10"
+    "@smithy/middleware-retry" "^4.1.11"
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/middleware-stack" "^4.0.4"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-body-length-node" "^4.0.0"
+    "@smithy/util-defaults-mode-browser" "^4.0.18"
+    "@smithy/util-defaults-mode-node" "^4.0.18"
+    "@smithy/util-endpoints" "^3.0.6"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-retry" "^4.0.5"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/client-sts@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/client-sts/-/client-sts-3.398.0.tgz"
+  integrity sha512-/3Pa9wLMvBZipKraq3AtbmTfXW6q9kyvhwOno64f1Fz7kFb8ijQFMGoATS70B2pGEZTlxkUqJFWDiisT6Q6dFg==
+  dependencies:
+    "@aws-crypto/sha256-browser" "3.0.0"
+    "@aws-crypto/sha256-js" "3.0.0"
+    "@aws-sdk/credential-provider-node" "3.398.0"
+    "@aws-sdk/middleware-host-header" "3.398.0"
+    "@aws-sdk/middleware-logger" "3.398.0"
+    "@aws-sdk/middleware-recursion-detection" "3.398.0"
+    "@aws-sdk/middleware-sdk-sts" "3.398.0"
+    "@aws-sdk/middleware-signing" "3.398.0"
+    "@aws-sdk/middleware-user-agent" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@aws-sdk/util-endpoints" "3.398.0"
+    "@aws-sdk/util-user-agent-browser" "3.398.0"
+    "@aws-sdk/util-user-agent-node" "3.398.0"
+    "@smithy/config-resolver" "^2.0.5"
+    "@smithy/fetch-http-handler" "^2.0.5"
+    "@smithy/hash-node" "^2.0.5"
+    "@smithy/invalid-dependency" "^2.0.5"
+    "@smithy/middleware-content-length" "^2.0.5"
+    "@smithy/middleware-endpoint" "^2.0.5"
+    "@smithy/middleware-retry" "^2.0.5"
+    "@smithy/middleware-serde" "^2.0.5"
+    "@smithy/middleware-stack" "^2.0.0"
+    "@smithy/node-config-provider" "^2.0.5"
+    "@smithy/node-http-handler" "^2.0.5"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/smithy-client" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    "@smithy/url-parser" "^2.0.5"
+    "@smithy/util-base64" "^2.0.0"
+    "@smithy/util-body-length-browser" "^2.0.0"
+    "@smithy/util-body-length-node" "^2.1.0"
+    "@smithy/util-defaults-mode-browser" "^2.0.5"
+    "@smithy/util-defaults-mode-node" "^2.0.5"
+    "@smithy/util-retry" "^2.0.0"
+    "@smithy/util-utf8" "^2.0.0"
+    fast-xml-parser "4.2.5"
+    tslib "^2.5.0"
+
+"@aws-sdk/core@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/core/-/core-3.825.0.tgz"
+  integrity sha512-UsdK6l62skh6mqY/La4xvehNj5sUl/eZ2N+8mNTHZKW4U+tiRESdrw1t/Z3r/NUAu7Tbmp+DHbUu+5K1BBY6YQ==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/xml-builder" "3.821.0"
+    "@smithy/core" "^3.5.2"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/signature-v4" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-utf8" "^4.0.0"
+    fast-xml-parser "4.4.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/credential-provider-env@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-env/-/credential-provider-env-3.398.0.tgz"
+  integrity sha512-Z8Yj5z7FroAsR6UVML+XUdlpoqEe9Dnle8c2h8/xWwIC2feTfIBhjLhRVxfbpbM1pLgBSNEcZ7U8fwq5l7ESVQ==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/credential-provider-env@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-env/-/credential-provider-env-3.825.0.tgz"
+  integrity sha512-Ptkbhj4K1un+GIz5fmTLVCFtWv9rcbaCLgdZszudo/ZqLP0QzAoACADGYFFkPGYr2o51COKkgKPhHWl7FNEq6A==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/credential-provider-http@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-http/-/credential-provider-http-3.825.0.tgz"
+  integrity sha512-r0V0rlNCjnFLfYfUqP6TlwAo+YgWxIkrgUb/K6mV2XCBElbFZlc9oPzMOJCmHF/+D6S60FLlMC9AnFopnEZ3/A==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-stream" "^4.2.2"
+    tslib "^2.6.2"
+
+"@aws-sdk/credential-provider-ini@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-ini/-/credential-provider-ini-3.398.0.tgz"
+  integrity sha512-AsK1lStK3nB9Cn6S6ODb1ktGh7SRejsNVQVKX3t5d3tgOaX+aX1Iwy8FzM/ZEN8uCloeRifUGIY9uQFygg5mSw==
+  dependencies:
+    "@aws-sdk/credential-provider-env" "3.398.0"
+    "@aws-sdk/credential-provider-process" "3.398.0"
+    "@aws-sdk/credential-provider-sso" "3.398.0"
+    "@aws-sdk/credential-provider-web-identity" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/credential-provider-imds" "^2.0.0"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/shared-ini-file-loader" "^2.0.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/credential-provider-ini@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-ini/-/credential-provider-ini-3.825.0.tgz"
+  integrity sha512-HDYopAiIGTLLhybI8jEuKGWdVUnKkkotwXHwvu8ttL5qgs13A6a/iWiREe71fmYH2fGT2URJE9+xeHa2oxohyQ==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/credential-provider-env" "3.825.0"
+    "@aws-sdk/credential-provider-http" "3.825.0"
+    "@aws-sdk/credential-provider-process" "3.825.0"
+    "@aws-sdk/credential-provider-sso" "3.825.0"
+    "@aws-sdk/credential-provider-web-identity" "3.825.0"
+    "@aws-sdk/nested-clients" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/credential-provider-imds" "^4.0.6"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/shared-ini-file-loader" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/credential-provider-node@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-node/-/credential-provider-node-3.398.0.tgz"
+  integrity sha512-odmI/DSKfuWUYeDnGTCEHBbC8/MwnF6yEq874zl6+owoVv0ZsYP8qBHfiJkYqrwg7wQ7Pi40sSAPC1rhesGwzg==
+  dependencies:
+    "@aws-sdk/credential-provider-env" "3.398.0"
+    "@aws-sdk/credential-provider-ini" "3.398.0"
+    "@aws-sdk/credential-provider-process" "3.398.0"
+    "@aws-sdk/credential-provider-sso" "3.398.0"
+    "@aws-sdk/credential-provider-web-identity" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/credential-provider-imds" "^2.0.0"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/shared-ini-file-loader" "^2.0.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/credential-provider-node@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-node/-/credential-provider-node-3.825.0.tgz"
+  integrity sha512-qWMrrUgWFQN7nkMdQYzWF/Z/fhUctCjwTQQD/qNSs42qt3sxmC00SZcqwPn9N8S9R/hLmu5z6fefVF4o20nGng==
+  dependencies:
+    "@aws-sdk/credential-provider-env" "3.825.0"
+    "@aws-sdk/credential-provider-http" "3.825.0"
+    "@aws-sdk/credential-provider-ini" "3.825.0"
+    "@aws-sdk/credential-provider-process" "3.825.0"
+    "@aws-sdk/credential-provider-sso" "3.825.0"
+    "@aws-sdk/credential-provider-web-identity" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/credential-provider-imds" "^4.0.6"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/shared-ini-file-loader" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/credential-provider-process@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-process/-/credential-provider-process-3.398.0.tgz"
+  integrity sha512-WrkBL1W7TXN508PA9wRXPFtzmGpVSW98gDaHEaa8GolAPHMPa5t2QcC/z/cFpglzrcVv8SA277zu9Z8tELdZhg==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/shared-ini-file-loader" "^2.0.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/credential-provider-process@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-process/-/credential-provider-process-3.825.0.tgz"
+  integrity sha512-QQoOBQAXuBfD6BCg61Hl5EkdrLyFSQCNRHVLjAO5WYQGyiPb9iTZPqo9sPwyOnCMpZE1k2EOwQ+FsnZh0xSa3Q==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/shared-ini-file-loader" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/credential-provider-sso@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-sso/-/credential-provider-sso-3.398.0.tgz"
+  integrity sha512-2Dl35587xbnzR/GGZqA2MnFs8+kS4wbHQO9BioU0okA+8NRueohNMdrdQmQDdSNK4BfIpFspiZmFkXFNyEAfgw==
+  dependencies:
+    "@aws-sdk/client-sso" "3.398.0"
+    "@aws-sdk/token-providers" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/shared-ini-file-loader" "^2.0.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/credential-provider-sso@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-sso/-/credential-provider-sso-3.825.0.tgz"
+  integrity sha512-ppwsN8tuwwJKvNnllkrhIx7AQv4r5uiNf5FTIkyeJ+3p67wgJeJye+0SP64IEkdmG7YxCaU2YkdSvyHud+D5og==
+  dependencies:
+    "@aws-sdk/client-sso" "3.825.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/token-providers" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/shared-ini-file-loader" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/credential-provider-web-identity@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-web-identity/-/credential-provider-web-identity-3.398.0.tgz"
+  integrity sha512-iG3905Alv9pINbQ8/MIsshgqYMbWx+NDQWpxbIW3W0MkSH3iAqdVpSCteYidYX9G/jv2Um1nW3y360ib20bvNg==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/credential-provider-web-identity@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/credential-provider-web-identity/-/credential-provider-web-identity-3.825.0.tgz"
+  integrity sha512-cyL5xHqtvBUpflkmdQSkvjD/t+Dl/ZSXvPnc9KF79xDpuraZ5tFP1l0B6rIEu7dUzUh8XG+7m2CZ6TEs6QU33Q==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/nested-clients" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/endpoint-cache@3.804.0":
+  version "3.804.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/endpoint-cache/-/endpoint-cache-3.804.0.tgz"
+  integrity sha512-TQVDkA/lV6ua75ELZaichMzlp6x7tDa1bqdy/+0ZftmODPtKXuOOEcJxmdN7Ui/YRo1gkRz2D9txYy7IlNg1Og==
+  dependencies:
+    mnemonist "0.38.3"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-bucket-endpoint@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-bucket-endpoint/-/middleware-bucket-endpoint-3.821.0.tgz"
+  integrity sha512-cebgeytKlWOgGczLo3BPvNY9XlzAzGZQANSysgJ2/8PSldmUpXRIF+GKPXDVhXeInWYHIfB8zZi3RqrPoXcNYQ==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-arn-parser" "3.804.0"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-config-provider" "^4.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-endpoint-discovery@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-endpoint-discovery/-/middleware-endpoint-discovery-3.821.0.tgz"
+  integrity sha512-8EguERzvpzTN2WrPaspK/F9GSkAzBQbecgIaCL49rJWKAso+ewmVVPnrXGzbeGVXTk4G0XuWSjt8wqUzZyt7wQ==
+  dependencies:
+    "@aws-sdk/endpoint-cache" "3.804.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-expect-continue@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-expect-continue/-/middleware-expect-continue-3.821.0.tgz"
+  integrity sha512-zAOoSZKe1njOrtynvK6ZORU57YGv5I7KP4+rwOvUN3ZhJbQ7QPf8gKtFUCYAPRMegaXCKF/ADPtDZBAmM+zZ9g==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-flexible-checksums@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-flexible-checksums/-/middleware-flexible-checksums-3.825.0.tgz"
+  integrity sha512-Vt64mztz63koTBu7S0bV1+9Djb9Swy2kAz1N36e7ALl8EgsJz0kQr4qfndbjgKkLt+D0of5APhpJlIzV/Cy05A==
+  dependencies:
+    "@aws-crypto/crc32" "5.2.0"
+    "@aws-crypto/crc32c" "5.2.0"
+    "@aws-crypto/util" "5.2.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/is-array-buffer" "^4.0.0"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-stream" "^4.2.2"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-host-header@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-host-header/-/middleware-host-header-3.398.0.tgz"
+  integrity sha512-m+5laWdBaxIZK2ko0OwcCHJZJ5V1MgEIt8QVQ3k4/kOkN9ICjevOYmba751pHoTnbOYB7zQd6D2OT3EYEEsUcA==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/middleware-host-header@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-host-header/-/middleware-host-header-3.821.0.tgz"
+  integrity sha512-xSMR+sopSeWGx5/4pAGhhfMvGBHioVBbqGvDs6pG64xfNwM5vq5s5v6D04e2i+uSTj4qGa71dLUs5I0UzAK3sw==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-location-constraint@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-location-constraint/-/middleware-location-constraint-3.821.0.tgz"
+  integrity sha512-sKrm80k0t3R0on8aA/WhWFoMaAl4yvdk+riotmMElLUpcMcRXAd1+600uFVrxJqZdbrKQ0mjX0PjT68DlkYXLg==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-logger@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-logger/-/middleware-logger-3.398.0.tgz"
+  integrity sha512-CiJjW+FL12elS6Pn7/UVjVK8HWHhXMfvHZvOwx/Qkpy340sIhkuzOO6fZEruECDTZhl2Wqn81XdJ1ZQ4pRKpCg==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/middleware-logger@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-logger/-/middleware-logger-3.821.0.tgz"
+  integrity sha512-0cvI0ipf2tGx7fXYEEN5fBeZDz2RnHyb9xftSgUsEq7NBxjV0yTZfLJw6Za5rjE6snC80dRN8+bTNR1tuG89zA==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-recursion-detection@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-recursion-detection/-/middleware-recursion-detection-3.398.0.tgz"
+  integrity sha512-7QpOqPQAZNXDXv6vsRex4R8dLniL0E/80OPK4PPFsrCh9btEyhN9Begh4i1T+5lL28hmYkztLOkTQ2N5J3hgRQ==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/middleware-recursion-detection@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-recursion-detection/-/middleware-recursion-detection-3.821.0.tgz"
+  integrity sha512-efmaifbhBoqKG3bAoEfDdcM8hn1psF+4qa7ykWuYmfmah59JBeqHLfz5W9m9JoTwoKPkFcVLWZxnyZzAnVBOIg==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-sdk-s3@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-sdk-s3/-/middleware-sdk-s3-3.825.0.tgz"
+  integrity sha512-Da8B+olXXNpLNeW195o329nTQsqeXxg+ygI30vDRkEWctQ+a0nkYEkxe/VU/Ph83kCnY76/Zy9KDLizQqCVfkw==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-arn-parser" "3.804.0"
+    "@smithy/core" "^3.5.2"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/signature-v4" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-config-provider" "^4.0.0"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-stream" "^4.2.2"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-sdk-sqs@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-sdk-sqs/-/middleware-sdk-sqs-3.825.0.tgz"
+  integrity sha512-lCMFrc9PLBcbJGfy3vJpMsLxibYmCHUzvcWdZY6VVAlDKghcbOMNX/8+V4/EZm137zlY6TQRj+2sdH++ofOQMw==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-hex-encoding" "^4.0.0"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-sdk-sts@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-sdk-sts/-/middleware-sdk-sts-3.398.0.tgz"
+  integrity sha512-+JH76XHEgfVihkY+GurohOQ5Z83zVN1nYcQzwCFnCDTh4dG4KwhnZKG+WPw6XJECocY0R+H0ivofeALHvVWJtQ==
+  dependencies:
+    "@aws-sdk/middleware-signing" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/middleware-signing@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-signing/-/middleware-signing-3.398.0.tgz"
+  integrity sha512-O0KqXAix1TcvZBFt1qoFkHMUNJOSgjJTYS7lFTRKSwgsD27bdW2TM2r9R8DAccWFt5Amjkdt+eOwQMIXPGTm8w==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/signature-v4" "^2.0.0"
+    "@smithy/types" "^2.2.2"
+    "@smithy/util-middleware" "^2.0.0"
+    tslib "^2.5.0"
+
+"@aws-sdk/middleware-ssec@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-ssec/-/middleware-ssec-3.821.0.tgz"
+  integrity sha512-YYi1Hhr2AYiU/24cQc8HIB+SWbQo6FBkMYojVuz/zgrtkFmALxENGF/21OPg7f/QWd+eadZJRxCjmRwh5F2Cxg==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/middleware-user-agent@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-user-agent/-/middleware-user-agent-3.398.0.tgz"
+  integrity sha512-nF1jg0L+18b5HvTcYzwyFgfZQQMELJINFqI0mi4yRKaX7T5a3aGp5RVLGGju/6tAGTuFbfBoEhkhU3kkxexPYQ==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@aws-sdk/util-endpoints" "3.398.0"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/middleware-user-agent@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/middleware-user-agent/-/middleware-user-agent-3.825.0.tgz"
+  integrity sha512-3ZZOPU3GE5cqKl6VFDwiL8KIvlrrQJ4rgYkeiF+m5kA0eXV2xFOwoLgm3AmPB+6kfo9HQ0N74KKJV0teS5nO6Q==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-endpoints" "3.821.0"
+    "@smithy/core" "^3.5.2"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/nested-clients@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/nested-clients/-/nested-clients-3.825.0.tgz"
+  integrity sha512-OuV2pypFAv52Lty8eXWVWyyOywVmMAsgH6Gq3SA06pHEtcE+ghVIW9ByegecyfMRUpedAiovARKNy0pfGX05Pg==
+  dependencies:
+    "@aws-crypto/sha256-browser" "5.2.0"
+    "@aws-crypto/sha256-js" "5.2.0"
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/middleware-host-header" "3.821.0"
+    "@aws-sdk/middleware-logger" "3.821.0"
+    "@aws-sdk/middleware-recursion-detection" "3.821.0"
+    "@aws-sdk/middleware-user-agent" "3.825.0"
+    "@aws-sdk/region-config-resolver" "3.821.0"
+    "@aws-sdk/types" "3.821.0"
+    "@aws-sdk/util-endpoints" "3.821.0"
+    "@aws-sdk/util-user-agent-browser" "3.821.0"
+    "@aws-sdk/util-user-agent-node" "3.825.0"
+    "@smithy/config-resolver" "^4.1.4"
+    "@smithy/core" "^3.5.2"
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/hash-node" "^4.0.4"
+    "@smithy/invalid-dependency" "^4.0.4"
+    "@smithy/middleware-content-length" "^4.0.4"
+    "@smithy/middleware-endpoint" "^4.1.10"
+    "@smithy/middleware-retry" "^4.1.11"
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/middleware-stack" "^4.0.4"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/smithy-client" "^4.4.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-body-length-node" "^4.0.0"
+    "@smithy/util-defaults-mode-browser" "^4.0.18"
+    "@smithy/util-defaults-mode-node" "^4.0.18"
+    "@smithy/util-endpoints" "^3.0.6"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-retry" "^4.0.5"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/region-config-resolver@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/region-config-resolver/-/region-config-resolver-3.821.0.tgz"
+  integrity sha512-t8og+lRCIIy5nlId0bScNpCkif8sc0LhmtaKsbm0ZPm3sCa/WhCbSZibjbZ28FNjVCV+p0D9RYZx0VDDbtWyjw==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-config-provider" "^4.0.0"
+    "@smithy/util-middleware" "^4.0.4"
+    tslib "^2.6.2"
+
+"@aws-sdk/signature-v4-multi-region@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/signature-v4-multi-region/-/signature-v4-multi-region-3.825.0.tgz"
+  integrity sha512-kqPyZempdp96SLwQmv1WTVDifH4npohVOvZNBPT/xY1U2lDAhX7741+LM4Jfq7tbs6y37+OEcQ9ZBjToWxrJ3g==
+  dependencies:
+    "@aws-sdk/middleware-sdk-s3" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/signature-v4" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/token-providers@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/token-providers/-/token-providers-3.398.0.tgz"
+  integrity sha512-nrYgjzavGCKJL/48Vt0EL+OlIc5UZLfNGpgyUW9cv3XZwl+kXV0QB+HH0rHZZLfpbBgZ2RBIJR9uD5ieu/6hpQ==
+  dependencies:
+    "@aws-crypto/sha256-browser" "3.0.0"
+    "@aws-crypto/sha256-js" "3.0.0"
+    "@aws-sdk/middleware-host-header" "3.398.0"
+    "@aws-sdk/middleware-logger" "3.398.0"
+    "@aws-sdk/middleware-recursion-detection" "3.398.0"
+    "@aws-sdk/middleware-user-agent" "3.398.0"
+    "@aws-sdk/types" "3.398.0"
+    "@aws-sdk/util-endpoints" "3.398.0"
+    "@aws-sdk/util-user-agent-browser" "3.398.0"
+    "@aws-sdk/util-user-agent-node" "3.398.0"
+    "@smithy/config-resolver" "^2.0.5"
+    "@smithy/fetch-http-handler" "^2.0.5"
+    "@smithy/hash-node" "^2.0.5"
+    "@smithy/invalid-dependency" "^2.0.5"
+    "@smithy/middleware-content-length" "^2.0.5"
+    "@smithy/middleware-endpoint" "^2.0.5"
+    "@smithy/middleware-retry" "^2.0.5"
+    "@smithy/middleware-serde" "^2.0.5"
+    "@smithy/middleware-stack" "^2.0.0"
+    "@smithy/node-config-provider" "^2.0.5"
+    "@smithy/node-http-handler" "^2.0.5"
+    "@smithy/property-provider" "^2.0.0"
+    "@smithy/protocol-http" "^2.0.5"
+    "@smithy/shared-ini-file-loader" "^2.0.0"
+    "@smithy/smithy-client" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    "@smithy/url-parser" "^2.0.5"
+    "@smithy/util-base64" "^2.0.0"
+    "@smithy/util-body-length-browser" "^2.0.0"
+    "@smithy/util-body-length-node" "^2.1.0"
+    "@smithy/util-defaults-mode-browser" "^2.0.5"
+    "@smithy/util-defaults-mode-node" "^2.0.5"
+    "@smithy/util-retry" "^2.0.0"
+    "@smithy/util-utf8" "^2.0.0"
+    tslib "^2.5.0"
+
+"@aws-sdk/token-providers@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/token-providers/-/token-providers-3.825.0.tgz"
+  integrity sha512-a3HbF6h1Gq2vA+mGlxFe3op65wNK6dBRmp3GFwsPVQ+OFTbZJi86FCljMfBrv+BGYUkp503/IPC49wuRHOdcZA==
+  dependencies:
+    "@aws-sdk/core" "3.825.0"
+    "@aws-sdk/nested-clients" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/shared-ini-file-loader" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/types@^3.222.0", "@aws-sdk/types@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/types/-/types-3.398.0.tgz"
+  integrity sha512-r44fkS+vsEgKCuEuTV+TIk0t0m5ZlXHNjSDYEUvzLStbbfUFiNus/YG4UCa0wOk9R7VuQI67badsvvPeVPCGDQ==
+  dependencies:
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/types@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/types/-/types-3.821.0.tgz"
+  integrity sha512-Znroqdai1a90TlxGaJ+FK1lwC0fHpo97Xjsp5UKGR5JODYm7f9+/fF17ebO1KdoBr/Rm0UIFiF5VmI8ts9F1eA==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/util-arn-parser@3.804.0":
+  version "3.804.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-arn-parser/-/util-arn-parser-3.804.0.tgz"
+  integrity sha512-wmBJqn1DRXnZu3b4EkE6CWnoWMo1ZMvlfkqU5zPz67xx1GMaXlDCchFvKAXMjk4jn/L1O3tKnoFDNsoLV1kgNQ==
+  dependencies:
+    tslib "^2.6.2"
+
+"@aws-sdk/util-endpoints@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-endpoints/-/util-endpoints-3.398.0.tgz"
+  integrity sha512-Fy0gLYAei/Rd6BrXG4baspCnWTUSd0NdokU1pZh4KlfEAEN1i8SPPgfiO5hLk7+2inqtCmqxVJlfqbMVe9k4bw==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    tslib "^2.5.0"
+
+"@aws-sdk/util-endpoints@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-endpoints/-/util-endpoints-3.821.0.tgz"
+  integrity sha512-Uknt/zUZnLE76zaAAPEayOeF5/4IZ2puTFXvcSCWHsi9m3tqbb9UozlnlVqvCZLCRWfQryZQoG2W4XSS3qgk5A==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-endpoints" "^3.0.6"
+    tslib "^2.6.2"
+
+"@aws-sdk/util-locate-window@^3.0.0":
+  version "3.804.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-locate-window/-/util-locate-window-3.804.0.tgz"
+  integrity sha512-zVoRfpmBVPodYlnMjgVjfGoEZagyRF5IPn3Uo6ZvOZp24chnW/FRstH7ESDHDDRga4z3V+ElUQHKpFDXWyBW5A==
+  dependencies:
+    tslib "^2.6.2"
+
+"@aws-sdk/util-user-agent-browser@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-user-agent-browser/-/util-user-agent-browser-3.398.0.tgz"
+  integrity sha512-A3Tzx1tkDHlBT+IgxmsMCHbV8LM7SwwCozq2ZjJRx0nqw3MCrrcxQFXldHeX/gdUMO+0Oocb7HGSnVODTq+0EA==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/types" "^2.2.2"
+    bowser "^2.11.0"
+    tslib "^2.5.0"
+
+"@aws-sdk/util-user-agent-browser@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-user-agent-browser/-/util-user-agent-browser-3.821.0.tgz"
+  integrity sha512-irWZHyM0Jr1xhC+38OuZ7JB6OXMLPZlj48thElpsO1ZSLRkLZx5+I7VV6k3sp2yZ7BYbKz/G2ojSv4wdm7XTLw==
+  dependencies:
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/types" "^4.3.1"
+    bowser "^2.11.0"
+    tslib "^2.6.2"
+
+"@aws-sdk/util-user-agent-node@3.398.0":
+  version "3.398.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-user-agent-node/-/util-user-agent-node-3.398.0.tgz"
+  integrity sha512-RTVQofdj961ej4//fEkppFf4KXqKGMTCqJYghx3G0C/MYXbg7MGl7LjfNGtJcboRE8pfHHQ/TUWBDA7RIAPPlQ==
+  dependencies:
+    "@aws-sdk/types" "3.398.0"
+    "@smithy/node-config-provider" "^2.0.5"
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@aws-sdk/util-user-agent-node@3.825.0":
+  version "3.825.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-user-agent-node/-/util-user-agent-node-3.825.0.tgz"
+  integrity sha512-RfB0w9YJSsFGsbrzOQ1VE2O4NwR6gxelUvmz8PzuerPCg4iD4JW7hSCmnoAEi51Xnq0bNeCsnhzXJzIlPe04jA==
+  dependencies:
+    "@aws-sdk/middleware-user-agent" "3.825.0"
+    "@aws-sdk/types" "3.821.0"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@aws-sdk/util-utf8-browser@^3.0.0":
+  version "3.259.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/util-utf8-browser/-/util-utf8-browser-3.259.0.tgz"
+  integrity sha512-UvFa/vR+e19XookZF8RzFZBrw2EUkQWxiBW0yYQAhvk3C+QVGl0H3ouca8LDBlBfQKXwmW3huo/59H8rwb1wJw==
+  dependencies:
+    tslib "^2.3.1"
+
+"@aws-sdk/xml-builder@3.310.0":
+  version "3.310.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/xml-builder/-/xml-builder-3.310.0.tgz"
+  integrity sha512-TqELu4mOuSIKQCqj63fGVs86Yh+vBx5nHRpWKNUNhB2nPTpfbziTs5c1X358be3peVWA4wPxW7Nt53KIg1tnNw==
+  dependencies:
+    tslib "^2.5.0"
+
+"@aws-sdk/xml-builder@3.821.0":
+  version "3.821.0"
+  resolved "https://registry.npmjs.org/@aws-sdk/xml-builder/-/xml-builder-3.821.0.tgz"
+  integrity sha512-DIIotRnefVL6DiaHtO6/21DhJ4JZnnIwdNbpwiAhdt/AVbttcE4yw925gsjur0OGv5BTYXQXU3YnANBYnZjuQA==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@babel/runtime@^7.13.10", "@babel/runtime@^7.5.5", "@babel/runtime@^7.8.7":
+  version "7.27.6"
+  resolved "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz"
+  integrity sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==
+
+"@cloudflare/kv-asset-handler@0.3.4":
+  version "0.3.4"
+  resolved "https://registry.npmjs.org/@cloudflare/kv-asset-handler/-/kv-asset-handler-0.3.4.tgz"
+  integrity sha512-YLPHc8yASwjNkmcDMQMY35yiWjoKAKnhUbPRszBRS0YgH+IXtsMp61j+yTcnCE3oO2DgP0U3iejLC8FTtKDC8Q==
+  dependencies:
+    mime "^3.0.0"
+
+"@cloudflare/unenv-preset@2.0.2":
+  version "2.0.2"
+  resolved "https://registry.npmjs.org/@cloudflare/unenv-preset/-/unenv-preset-2.0.2.tgz"
+  integrity sha512-nyzYnlZjjV5xT3LizahG1Iu6mnrCaxglJ04rZLpDwlDVDZ7v46lNsfxhV3A/xtfgQuSHmLnc6SVI+KwBpc3Lwg==
+
+"@cloudflare/workerd-darwin-arm64@1.20250408.0":
+  version "1.20250408.0"
+  resolved "https://registry.npmjs.org/@cloudflare/workerd-darwin-arm64/-/workerd-darwin-arm64-1.20250408.0.tgz"
+  integrity sha512-5XZ2Oykr8bSo7zBmERtHh18h5BZYC/6H1YFWVxEj3PtalF3+6SHsO4KZsbGvDml9Pu7sHV277jiZE5eny8Hlyw==
+
+"@cloudflare/workers-types@^4.20250109.0":
+  version "4.20250605.0"
+  resolved "https://registry.npmjs.org/@cloudflare/workers-types/-/workers-types-4.20250605.0.tgz"
+  integrity sha512-e3/ZCXcpmk3jUNfq/2gyVYqeOqUhuQ0hsSdohSGscCgTkUI37QraVeCAOQtciKPDFXKOkaGGkmxg+RLYunbKuw==
+
+"@cspotcode/source-map-support@0.8.1":
+  version "0.8.1"
+  resolved "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz"
+  integrity sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==
+  dependencies:
+    "@jridgewell/trace-mapping" "0.3.9"
+
+"@dotenvx/dotenvx@1.31.0":
+  version "1.31.0"
+  resolved "https://registry.npmjs.org/@dotenvx/dotenvx/-/dotenvx-1.31.0.tgz"
+  integrity sha512-GeDxvtjiRuoyWVU9nQneId879zIyNdL05bS7RKiqMkfBSKpHMWHLoRyRqjYWLaXmX/llKO1hTlqHDmatkQAjPA==
+  dependencies:
+    commander "^11.1.0"
+    dotenv "^16.4.5"
+    eciesjs "^0.4.10"
+    execa "^5.1.1"
+    fdir "^6.2.0"
+    ignore "^5.3.0"
+    object-treeify "1.1.33"
+    picomatch "^4.0.2"
+    which "^4.0.0"
+
+"@ecies/ciphers@^0.2.3":
+  version "0.2.3"
+  resolved "https://registry.npmjs.org/@ecies/ciphers/-/ciphers-0.2.3.tgz"
+  integrity sha512-tapn6XhOueMwht3E2UzY0ZZjYokdaw9XtL9kEyjhQ/Fb9vL9xTFbOaI+fV0AWvTpYu4BNloC6getKW6NtSg4mA==
+
+"@esbuild-plugins/node-globals-polyfill@0.2.3":
+  version "0.2.3"
+  resolved "https://registry.npmjs.org/@esbuild-plugins/node-globals-polyfill/-/node-globals-polyfill-0.2.3.tgz"
+  integrity sha512-r3MIryXDeXDOZh7ih1l/yE9ZLORCd5e8vWg02azWRGj5SPTuoh69A2AIyn0Z31V/kHBfZ4HgWJ+OK3GTTwLmnw==
+
+"@esbuild-plugins/node-modules-polyfill@0.2.2":
+  version "0.2.2"
+  resolved "https://registry.npmjs.org/@esbuild-plugins/node-modules-polyfill/-/node-modules-polyfill-0.2.2.tgz"
+  integrity sha512-LXV7QsWJxRuMYvKbiznh+U1ilIop3g2TeKRzUxOG5X3YITc8JyyTa90BmLwqqv0YnX4v32CSlG+vsziZp9dMvA==
+  dependencies:
+    escape-string-regexp "^4.0.0"
+    rollup-plugin-node-polyfills "^0.2.1"
+
+"@esbuild-plugins/node-resolve@0.2.2":
+  version "0.2.2"
+  resolved "https://registry.npmjs.org/@esbuild-plugins/node-resolve/-/node-resolve-0.2.2.tgz"
+  integrity sha512-+t5FdX3ATQlb53UFDBRb4nqjYBz492bIrnVWvpQHpzZlu9BQL5HasMZhqc409ygUwOWCXZhrWr6NyZ6T6Y+cxw==
+  dependencies:
+    "@types/resolve" "^1.17.1"
+    debug "^4.3.1"
+    escape-string-regexp "^4.0.0"
+    resolve "^1.19.0"
+
+"@esbuild/darwin-arm64@0.17.19":
+  version "0.17.19"
+  resolved "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.17.19.tgz"
+  integrity sha512-80wEoCfF/hFKM6WE1FyBHc9SfUblloAWx6FJkFWTWiCoht9Mc0ARGEM47e67W9rI09YoUxJL68WHfDRYEAvOhg==
+
+"@esbuild/darwin-arm64@0.19.2":
+  version "0.19.2"
+  resolved "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.19.2.tgz"
+  integrity sha512-Ora8JokrvrzEPEpZO18ZYXkH4asCdc1DLdcVy8TGf5eWtPO1Ie4WroEJzwI52ZGtpODy3+m0a2yEX9l+KUn0tA==
+
+"@eslint-community/eslint-utils@^4.2.0", "@eslint-community/eslint-utils@^4.7.0":
+  version "4.7.0"
+  resolved "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz"
+  integrity sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==
+  dependencies:
+    eslint-visitor-keys "^3.4.3"
+
+"@eslint-community/regexpp@^4.10.0", "@eslint-community/regexpp@^4.12.1":
+  version "4.12.1"
+  resolved "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz"
+  integrity sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==
+
+"@eslint/config-array@^0.20.0":
+  version "0.20.0"
+  resolved "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.20.0.tgz"
+  integrity sha512-fxlS1kkIjx8+vy2SjuCB94q3htSNrufYTXubwiBFeaQHbH6Ipi43gFJq2zCMt6PHhImH3Xmr0NksKDvchWlpQQ==
+  dependencies:
+    "@eslint/object-schema" "^2.1.6"
+    debug "^4.3.1"
+    minimatch "^3.1.2"
+
+"@eslint/config-helpers@^0.2.1":
+  version "0.2.2"
+  resolved "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.2.2.tgz"
+  integrity sha512-+GPzk8PlG0sPpzdU5ZvIRMPidzAnZDl/s9L+y13iodqvb8leL53bTannOrQ/Im7UkpsmFU5Ily5U60LWixnmLg==
+
+"@eslint/core@^0.14.0":
+  version "0.14.0"
+  resolved "https://registry.npmjs.org/@eslint/core/-/core-0.14.0.tgz"
+  integrity sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==
+  dependencies:
+    "@types/json-schema" "^7.0.15"
+
+"@eslint/eslintrc@^3", "@eslint/eslintrc@^3.3.1":
+  version "3.3.1"
+  resolved "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz"
+  integrity sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==
+  dependencies:
+    ajv "^6.12.4"
+    debug "^4.3.2"
+    espree "^10.0.1"
+    globals "^14.0.0"
+    ignore "^5.2.0"
+    import-fresh "^3.2.1"
+    js-yaml "^4.1.0"
+    minimatch "^3.1.2"
+    strip-json-comments "^3.1.1"
+
+"@eslint/js@9.28.0":
+  version "9.28.0"
+  resolved "https://registry.npmjs.org/@eslint/js/-/js-9.28.0.tgz"
+  integrity sha512-fnqSjGWd/CoIp4EXIxWVK/sHA6DOHN4+8Ix2cX5ycOY7LG0UY8nHCU5pIp2eaE1Mc7Qd8kHspYNzYXT2ojPLzg==
+
+"@eslint/object-schema@^2.1.6":
+  version "2.1.6"
+  resolved "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz"
+  integrity sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==
+
+"@eslint/plugin-kit@^0.3.1":
+  version "0.3.1"
+  resolved "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.1.tgz"
+  integrity sha512-0J+zgWxHN+xXONWIyPWKFMgVuJoZuGiIFu8yxk7RJjxkzpGmyja5wRFqZIVtjDVOQpV+Rw0iOAjYPE2eQyjr0w==
+  dependencies:
+    "@eslint/core" "^0.14.0"
+    levn "^0.4.1"
+
+"@fastify/busboy@^2.0.0":
+  version "2.1.1"
+  resolved "https://registry.npmjs.org/@fastify/busboy/-/busboy-2.1.1.tgz"
+  integrity sha512-vBZP4NlzfOlerQTnba4aqZoMhE/a9HY7HRqoOPaETQcSQuWEIyZMHGfVu6w9wGtGK5fED5qRs2DteVCjOH60sA==
+
+"@floating-ui/core@^1.7.1":
+  version "1.7.1"
+  resolved "https://registry.npmjs.org/@floating-ui/core/-/core-1.7.1.tgz"
+  integrity sha512-azI0DrjMMfIug/ExbBaeDVJXcY0a7EPvPjb2xAJPa4HeimBX+Z18HK8QQR3jb6356SnDDdxx+hinMLcJEDdOjw==
+  dependencies:
+    "@floating-ui/utils" "^0.2.9"
+
+"@floating-ui/dom@^1.0.0":
+  version "1.7.1"
+  resolved "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.1.tgz"
+  integrity sha512-cwsmW/zyw5ltYTUeeYJ60CnQuPqmGwuGVhG9w0PRaRKkAyi38BT5CKrpIbb+jtahSwUl04cWzSx9ZOIxeS6RsQ==
+  dependencies:
+    "@floating-ui/core" "^1.7.1"
+    "@floating-ui/utils" "^0.2.9"
+
+"@floating-ui/react-dom@^2.0.0":
+  version "2.1.3"
+  resolved "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.3.tgz"
+  integrity sha512-huMBfiU9UnQ2oBwIhgzyIiSpVgvlDstU8CX0AF+wS+KzmYMs0J2a3GwuFHV1Lz+jlrQGeC1fF+Nv0QoumyV0bA==
+  dependencies:
+    "@floating-ui/dom" "^1.0.0"
+
+"@floating-ui/utils@^0.2.9":
+  version "0.2.9"
+  resolved "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.9.tgz"
+  integrity sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==
+
+"@hookform/resolvers@^3.10.0":
+  version "3.10.0"
+  resolved "https://registry.npmjs.org/@hookform/resolvers/-/resolvers-3.10.0.tgz"
+  integrity sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==
+
+"@humanfs/core@^0.19.1":
+  version "0.19.1"
+  resolved "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz"
+  integrity sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==
+
+"@humanfs/node@^0.16.6":
+  version "0.16.6"
+  resolved "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz"
+  integrity sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==
+  dependencies:
+    "@humanfs/core" "^0.19.1"
+    "@humanwhocodes/retry" "^0.3.0"
+
+"@humanwhocodes/module-importer@^1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz"
+  integrity sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==
+
+"@humanwhocodes/retry@^0.3.0":
+  version "0.3.1"
+  resolved "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz"
+  integrity sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==
+
+"@humanwhocodes/retry@^0.4.2":
+  version "0.4.3"
+  resolved "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz"
+  integrity sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==
+
+"@img/sharp-darwin-arm64@0.33.5":
+  version "0.33.5"
+  resolved "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.33.5.tgz"
+  integrity sha512-UT4p+iz/2H4twwAoLCqfA9UH5pI6DggwKEGuaPy7nCVQ8ZsiY5PIcrRvD1DzuY3qYL07NtIQcWnBSY/heikIFQ==
+  optionalDependencies:
+    "@img/sharp-libvips-darwin-arm64" "1.0.4"
+
+"@img/sharp-libvips-darwin-arm64@1.0.4":
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.0.4.tgz"
+  integrity sha512-XblONe153h0O2zuFfTAbQYAX2JhYmDHeWikp1LM9Hul9gVPjFY427k6dFEcOL72O01QxQsWi761svJ/ev9xEDg==
+
+"@isaacs/cliui@^8.0.2":
+  version "8.0.2"
+  resolved "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz"
+  integrity sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==
+  dependencies:
+    string-width "^5.1.2"
+    string-width-cjs "npm:string-width@^4.2.0"
+    strip-ansi "^7.0.1"
+    strip-ansi-cjs "npm:strip-ansi@^6.0.1"
+    wrap-ansi "^8.1.0"
+    wrap-ansi-cjs "npm:wrap-ansi@^7.0.0"
+
+"@jridgewell/gen-mapping@^0.3.2", "@jridgewell/gen-mapping@^0.3.5":
+  version "0.3.8"
+  resolved "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz"
+  integrity sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==
+  dependencies:
+    "@jridgewell/set-array" "^1.2.1"
+    "@jridgewell/sourcemap-codec" "^1.4.10"
+    "@jridgewell/trace-mapping" "^0.3.24"
+
+"@jridgewell/resolve-uri@^3.0.3", "@jridgewell/resolve-uri@^3.1.0":
+  version "3.1.2"
+  resolved "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz"
+  integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==
+
+"@jridgewell/set-array@^1.2.1":
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz"
+  integrity sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==
+
+"@jridgewell/source-map@^0.3.2":
+  version "0.3.6"
+  resolved "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.6.tgz"
+  integrity sha512-1ZJTZebgqllO79ue2bm3rIGud/bOe0pP5BjSRCRxxYkEZS8STV7zN84UBbiYu7jy+eCKSnVIUgoWWE/tt+shMQ==
+  dependencies:
+    "@jridgewell/gen-mapping" "^0.3.5"
+    "@jridgewell/trace-mapping" "^0.3.25"
+
+"@jridgewell/sourcemap-codec@^1.4.10", "@jridgewell/sourcemap-codec@^1.4.14":
+  version "1.5.0"
+  resolved "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz"
+  integrity sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==
+
+"@jridgewell/trace-mapping@^0.3.24", "@jridgewell/trace-mapping@^0.3.25":
+  version "0.3.25"
+  resolved "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz"
+  integrity sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==
+  dependencies:
+    "@jridgewell/resolve-uri" "^3.1.0"
+    "@jridgewell/sourcemap-codec" "^1.4.14"
+
+"@jridgewell/trace-mapping@0.3.9":
+  version "0.3.9"
+  resolved "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz"
+  integrity sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==
+  dependencies:
+    "@jridgewell/resolve-uri" "^3.0.3"
+    "@jridgewell/sourcemap-codec" "^1.4.10"
+
+"@next/env@15.1.4":
+  version "15.1.4"
+  resolved "https://registry.npmjs.org/@next/env/-/env-15.1.4.tgz"
+  integrity sha512-2fZ5YZjedi5AGaeoaC0B20zGntEHRhi2SdWcu61i48BllODcAmmtj8n7YarSPt4DaTsJaBFdxQAVEVzgmx2Zpw==
+
+"@next/eslint-plugin-next@15.1.4":
+  version "15.1.4"
+  resolved "https://registry.npmjs.org/@next/eslint-plugin-next/-/eslint-plugin-next-15.1.4.tgz"
+  integrity sha512-HwlEXwCK3sr6zmVGEvWBjW9tBFs1Oe6hTmTLoFQtpm4As5HCdu8jfSE0XJOp7uhfEGLniIx8yrGxEWwNnY0fmQ==
+  dependencies:
+    fast-glob "3.3.1"
+
+"@next/swc-darwin-arm64@15.1.4":
+  version "15.1.4"
+  resolved "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.1.4.tgz"
+  integrity sha512-wBEMBs+np+R5ozN1F8Y8d/Dycns2COhRnkxRc+rvnbXke5uZBHkUGFgWxfTXn5rx7OLijuUhyfB+gC/ap58dDw==
+
+"@noble/ciphers@^1.3.0":
+  version "1.3.0"
+  resolved "https://registry.npmjs.org/@noble/ciphers/-/ciphers-1.3.0.tgz"
+  integrity sha512-2I0gnIVPtfnMw9ee9h1dJG7tp81+8Ob3OJb3Mv37rx5L40/b0i7djjCVvGOVqc9AEIQyvyu1i6ypKdFw8R8gQw==
+
+"@noble/curves@^1.9.1":
+  version "1.9.2"
+  resolved "https://registry.npmjs.org/@noble/curves/-/curves-1.9.2.tgz"
+  integrity sha512-HxngEd2XUcg9xi20JkwlLCtYwfoFw4JGkuZpT+WlsPD4gB/cxkvTD8fSsoAnphGZhFdZYKeQIPCuFlWPm1uE0g==
+  dependencies:
+    "@noble/hashes" "1.8.0"
+
+"@noble/hashes@^1.8.0", "@noble/hashes@1.8.0":
+  version "1.8.0"
+  resolved "https://registry.npmjs.org/@noble/hashes/-/hashes-1.8.0.tgz"
+  integrity sha512-jCs9ldd7NwzpgXDIf6P3+NrHh9/sD6CQdxHyjQI+h/6rDNo88ypBxxz45UDuZHz9r3tNz7N/VInSVoVdtXEI4A==
+
+"@node-minify/core@^8.0.6":
+  version "8.0.6"
+  resolved "https://registry.npmjs.org/@node-minify/core/-/core-8.0.6.tgz"
+  integrity sha512-/vxN46ieWDLU67CmgbArEvOb41zlYFOkOtr9QW9CnTrBLuTyGgkyNWC2y5+khvRw3Br58p2B5ZVSx/PxCTru6g==
+  dependencies:
+    "@node-minify/utils" "8.0.6"
+    glob "9.3.5"
+    mkdirp "1.0.4"
+
+"@node-minify/terser@^8.0.6":
+  version "8.0.6"
+  resolved "https://registry.npmjs.org/@node-minify/terser/-/terser-8.0.6.tgz"
+  integrity sha512-grQ1ipham743ch2c3++C8Isk6toJnxJSyDiwUI/IWUCh4CZFD6aYVw6UAY40IpCnjrq5aXGwiv5OZJn6Pr0hvg==
+  dependencies:
+    "@node-minify/utils" "8.0.6"
+    terser "5.16.9"
+
+"@node-minify/utils@8.0.6":
+  version "8.0.6"
+  resolved "https://registry.npmjs.org/@node-minify/utils/-/utils-8.0.6.tgz"
+  integrity sha512-csY4qcR7jUwiZmkreNTJhcypQfts2aY2CK+a+rXgXUImZiZiySh0FvwHjRnlqWKvg+y6ae9lHFzDRjBTmqlTIQ==
+  dependencies:
+    gzip-size "6.0.0"
+
+"@nodelib/fs.scandir@2.1.5":
+  version "2.1.5"
+  resolved "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz"
+  integrity sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==
+  dependencies:
+    "@nodelib/fs.stat" "2.0.5"
+    run-parallel "^1.1.9"
+
+"@nodelib/fs.stat@^2.0.2", "@nodelib/fs.stat@2.0.5":
+  version "2.0.5"
+  resolved "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz"
+  integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==
+
+"@nodelib/fs.walk@^1.2.3":
+  version "1.2.8"
+  resolved "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz"
+  integrity sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==
+  dependencies:
+    "@nodelib/fs.scandir" "2.1.5"
+    fastq "^1.6.0"
+
+"@nolyfill/is-core-module@1.0.39":
+  version "1.0.39"
+  resolved "https://registry.npmjs.org/@nolyfill/is-core-module/-/is-core-module-1.0.39.tgz"
+  integrity sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==
+
+"@opennextjs/aws@https://pkg.pr.new/@opennextjs/aws@704":
+  version "3.4.0"
+  resolved "https://pkg.pr.new/@opennextjs/aws@704"
+  integrity sha512-ie8YrysaSbReMUUGcrRT+UO2SwB9YtoOLUA4AYJQqFlYQ4wvH1eW+ZwU6iVUWtwQ13tcPEJN/RhDIy2WlFcALA==
+  dependencies:
+    "@aws-sdk/client-cloudfront" "3.398.0"
+    "@aws-sdk/client-dynamodb" "^3.398.0"
+    "@aws-sdk/client-lambda" "^3.398.0"
+    "@aws-sdk/client-s3" "^3.398.0"
+    "@aws-sdk/client-sqs" "^3.398.0"
+    "@esbuild-plugins/node-resolve" "0.2.2"
+    "@node-minify/core" "^8.0.6"
+    "@node-minify/terser" "^8.0.6"
+    "@tsconfig/node18" "^1.0.1"
+    aws4fetch "^1.0.18"
+    chalk "^5.3.0"
+    esbuild "0.19.2"
+    express "5.0.1"
+    path-to-regexp "^6.3.0"
+    promise.series "^0.2.0"
+    urlpattern-polyfill "^10.0.0"
+
+"@opennextjs/cloudflare@^0.3.8":
+  version "0.3.10"
+  resolved "https://registry.npmjs.org/@opennextjs/cloudflare/-/cloudflare-0.3.10.tgz"
+  integrity sha512-jMBYLT7gshfnpxweWwDcZODX5glTmVcTTWvZd4Hbcw1/2ZtpmhwmyM9wnGTHzfnvL3LjOxkN1b+UVcKJrnuhfA==
+  dependencies:
+    "@ast-grep/napi" "^0.33.1"
+    "@dotenvx/dotenvx" "1.31.0"
+    "@opennextjs/aws" "https://pkg.pr.new/@opennextjs/aws@704"
+    enquirer "^2.4.1"
+    glob "^11.0.0"
+    ts-morph "^23.0.0"
+    yaml "^2.7.0"
+
+"@pkgjs/parseargs@^0.11.0":
+  version "0.11.0"
+  resolved "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz"
+  integrity sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==
+
+"@radix-ui/number@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/number/-/number-1.1.1.tgz"
+  integrity sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==
+
+"@radix-ui/primitive@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.0.1.tgz"
+  integrity sha512-yQ8oGX2GVsEYMWGxcovu1uGWPCxV5BFfeeYxqPmuAzUyLT9qmaMXSAhXpb0WrspIeqYzdJpkh2vHModJPgRIaw==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+
+"@radix-ui/primitive@1.1.2":
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz"
+  integrity sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==
+
+"@radix-ui/react-accordion@^1.2.2":
+  version "1.2.11"
+  resolved "https://registry.npmjs.org/@radix-ui/react-accordion/-/react-accordion-1.2.11.tgz"
+  integrity sha512-l3W5D54emV2ues7jjeG1xcyN7S3jnK3zE2zHqgn0CmMsy9lNJwmgcrmaxS+7ipw15FAivzKNzH3d5EcGoFKw0A==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collapsible" "1.1.11"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-alert-dialog@^1.1.4":
+  version "1.1.14"
+  resolved "https://registry.npmjs.org/@radix-ui/react-alert-dialog/-/react-alert-dialog-1.1.14.tgz"
+  integrity sha512-IOZfZ3nPvN6lXpJTBCunFQPRSvK8MDgSc1FB85xnIpUKOw9en0dJj8JmCAxV7BiZdtYlUpmrQjoTFkVYtdoWzQ==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-dialog" "1.1.14"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-slot" "1.2.3"
+
+"@radix-ui/react-arrow@1.1.7":
+  version "1.1.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.7.tgz"
+  integrity sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==
+  dependencies:
+    "@radix-ui/react-primitive" "2.1.3"
+
+"@radix-ui/react-aspect-ratio@^1.1.1":
+  version "1.1.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-aspect-ratio/-/react-aspect-ratio-1.1.7.tgz"
+  integrity sha512-Yq6lvO9HQyPwev1onK1daHCHqXVLzPhSVjmsNjCa2Zcxy2f7uJD2itDtxknv6FzAKCwD1qQkeVDmX/cev13n/g==
+  dependencies:
+    "@radix-ui/react-primitive" "2.1.3"
+
+"@radix-ui/react-avatar@^1.1.2":
+  version "1.1.10"
+  resolved "https://registry.npmjs.org/@radix-ui/react-avatar/-/react-avatar-1.1.10.tgz"
+  integrity sha512-V8piFfWapM5OmNCXTzVQY+E1rDa53zY+MQ4Y7356v4fFz6vqCyUtIz2rUD44ZEdwg78/jKmMJHj07+C/Z/rcog==
+  dependencies:
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-is-hydrated" "0.1.0"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-checkbox@^1.1.3":
+  version "1.3.2"
+  resolved "https://registry.npmjs.org/@radix-ui/react-checkbox/-/react-checkbox-1.3.2.tgz"
+  integrity sha512-yd+dI56KZqawxKZrJ31eENUwqc1QSqg4OZ15rybGjF2ZNwMO+wCyHzAVLRp9qoYJf7kYy0YpZ2b0JCzJ42HZpA==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-previous" "1.1.1"
+    "@radix-ui/react-use-size" "1.1.1"
+
+"@radix-ui/react-collapsible@^1.1.2", "@radix-ui/react-collapsible@1.1.11":
+  version "1.1.11"
+  resolved "https://registry.npmjs.org/@radix-ui/react-collapsible/-/react-collapsible-1.1.11.tgz"
+  integrity sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-collection@1.1.7":
+  version "1.1.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz"
+  integrity sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==
+  dependencies:
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-slot" "1.2.3"
+
+"@radix-ui/react-compose-refs@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.0.1.tgz"
+  integrity sha512-fDSBgd44FKHa1FRMU59qBMPFcl2PZE+2nmqunj+BWFyYYjnhIDWL2ItDs3rrbJDQOtzt5nIebLCQc4QRfz6LJw==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+
+"@radix-ui/react-compose-refs@1.1.2":
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz"
+  integrity sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==
+
+"@radix-ui/react-context-menu@^2.2.4":
+  version "2.2.15"
+  resolved "https://registry.npmjs.org/@radix-ui/react-context-menu/-/react-context-menu-2.2.15.tgz"
+  integrity sha512-UsQUMjcYTsBjTSXw0P3GO0werEQvUY2plgRQuKoCTtkNr45q1DiL51j4m7gxhABzZ0BadoXNsIbg7F3KwiUBbw==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-menu" "2.1.15"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-context@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.0.1.tgz"
+  integrity sha512-ebbrdFoYTcuZ0v4wG5tedGnp9tzcV8awzsxYph7gXUyvnNLuTIcCk1q17JEbnVhXAKG9oX3KtchwiMIAYp9NLg==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+
+"@radix-ui/react-context@1.1.2":
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz"
+  integrity sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==
+
+"@radix-ui/react-dialog@^1.1.1", "@radix-ui/react-dialog@^1.1.4", "@radix-ui/react-dialog@1.1.14":
+  version "1.1.14"
+  resolved "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.1.14.tgz"
+  integrity sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-focus-guards" "1.1.2"
+    "@radix-ui/react-focus-scope" "1.1.7"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-portal" "1.1.9"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-slot" "1.2.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    aria-hidden "^1.2.4"
+    react-remove-scroll "^2.6.3"
+
+"@radix-ui/react-dialog@1.0.5":
+  version "1.0.5"
+  resolved "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.0.5.tgz"
+  integrity sha512-GjWJX/AUpB703eEBanuBnIWdIXg6NvJFCXcNlSZk4xdszCdhrJgBoUd1cGk67vFO+WdA2pfI/plOpqz/5GUP6Q==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/primitive" "1.0.1"
+    "@radix-ui/react-compose-refs" "1.0.1"
+    "@radix-ui/react-context" "1.0.1"
+    "@radix-ui/react-dismissable-layer" "1.0.5"
+    "@radix-ui/react-focus-guards" "1.0.1"
+    "@radix-ui/react-focus-scope" "1.0.4"
+    "@radix-ui/react-id" "1.0.1"
+    "@radix-ui/react-portal" "1.0.4"
+    "@radix-ui/react-presence" "1.0.1"
+    "@radix-ui/react-primitive" "1.0.3"
+    "@radix-ui/react-slot" "1.0.2"
+    "@radix-ui/react-use-controllable-state" "1.0.1"
+    aria-hidden "^1.1.1"
+    react-remove-scroll "2.5.5"
+
+"@radix-ui/react-direction@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz"
+  integrity sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==
+
+"@radix-ui/react-dismissable-layer@1.0.5":
+  version "1.0.5"
+  resolved "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.0.5.tgz"
+  integrity sha512-aJeDjQhywg9LBu2t/At58hCvr7pEm0o2Ke1x33B+MhjNmmZ17sy4KImo0KPLgsnc/zN7GPdce8Cnn0SWvwZO7g==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/primitive" "1.0.1"
+    "@radix-ui/react-compose-refs" "1.0.1"
+    "@radix-ui/react-primitive" "1.0.3"
+    "@radix-ui/react-use-callback-ref" "1.0.1"
+    "@radix-ui/react-use-escape-keydown" "1.0.3"
+
+"@radix-ui/react-dismissable-layer@1.1.10":
+  version "1.1.10"
+  resolved "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.1.10.tgz"
+  integrity sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-escape-keydown" "1.1.1"
+
+"@radix-ui/react-dropdown-menu@^2.1.4":
+  version "2.1.15"
+  resolved "https://registry.npmjs.org/@radix-ui/react-dropdown-menu/-/react-dropdown-menu-2.1.15.tgz"
+  integrity sha512-mIBnOjgwo9AH3FyKaSWoSu/dYj6VdhJ7frEPiGTeXCdUFHjl9h3mFh2wwhEtINOmYXWhdpf1rY2minFsmaNgVQ==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-menu" "2.1.15"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-focus-guards@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.0.1.tgz"
+  integrity sha512-Rect2dWbQ8waGzhMavsIbmSVCgYxkXLxxR3ZvCX79JOglzdEy4JXMb98lq4hPxUbLr77nP0UOGf4rcMU+s1pUA==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+
+"@radix-ui/react-focus-guards@1.1.2":
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.1.2.tgz"
+  integrity sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==
+
+"@radix-ui/react-focus-scope@1.0.4":
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.0.4.tgz"
+  integrity sha512-sL04Mgvf+FmyvZeYfNu1EPAaaxD+aw7cYeIB9L9Fvq8+urhltTRaEo5ysKOpHuKPclsZcSUMKlN05x4u+CINpA==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-compose-refs" "1.0.1"
+    "@radix-ui/react-primitive" "1.0.3"
+    "@radix-ui/react-use-callback-ref" "1.0.1"
+
+"@radix-ui/react-focus-scope@1.1.7":
+  version "1.1.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.1.7.tgz"
+  integrity sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==
+  dependencies:
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+
+"@radix-ui/react-hover-card@^1.1.4":
+  version "1.1.14"
+  resolved "https://registry.npmjs.org/@radix-ui/react-hover-card/-/react-hover-card-1.1.14.tgz"
+  integrity sha512-CPYZ24Mhirm+g6D8jArmLzjYu4Eyg3TTUHswR26QgzXBHBe64BO/RHOJKzmF/Dxb4y4f9PKyJdwm/O/AhNkb+Q==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-popper" "1.2.7"
+    "@radix-ui/react-portal" "1.1.9"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-id@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.0.1.tgz"
+  integrity sha512-tI7sT/kqYp8p96yGWY1OAnLHrqDgzHefRBKQ2YAkBS5ja7QLcZ9Z/uY7bEjPUatf8RomoXM8/1sMj1IJaE5UzQ==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-use-layout-effect" "1.0.1"
+
+"@radix-ui/react-id@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz"
+  integrity sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==
+  dependencies:
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-label@^2.1.1":
+  version "2.1.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.7.tgz"
+  integrity sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==
+  dependencies:
+    "@radix-ui/react-primitive" "2.1.3"
+
+"@radix-ui/react-menu@2.1.15":
+  version "2.1.15"
+  resolved "https://registry.npmjs.org/@radix-ui/react-menu/-/react-menu-2.1.15.tgz"
+  integrity sha512-tVlmA3Vb9n8SZSd+YSbuFR66l87Wiy4du+YE+0hzKQEANA+7cWKH1WgqcEX4pXqxUFQKrWQGHdvEfw00TjFiew==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-focus-guards" "1.1.2"
+    "@radix-ui/react-focus-scope" "1.1.7"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-popper" "1.2.7"
+    "@radix-ui/react-portal" "1.1.9"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-roving-focus" "1.1.10"
+    "@radix-ui/react-slot" "1.2.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    aria-hidden "^1.2.4"
+    react-remove-scroll "^2.6.3"
+
+"@radix-ui/react-menubar@^1.1.4":
+  version "1.1.15"
+  resolved "https://registry.npmjs.org/@radix-ui/react-menubar/-/react-menubar-1.1.15.tgz"
+  integrity sha512-Z71C7LGD+YDYo3TV81paUs8f3Zbmkvg6VLRQpKYfzioOE6n7fOhA3ApK/V/2Odolxjoc4ENk8AYCjohCNayd5A==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-menu" "2.1.15"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-roving-focus" "1.1.10"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-navigation-menu@^1.2.3":
+  version "1.2.13"
+  resolved "https://registry.npmjs.org/@radix-ui/react-navigation-menu/-/react-navigation-menu-1.2.13.tgz"
+  integrity sha512-WG8wWfDiJlSF5hELjwfjSGOXcBR/ZMhBFCGYe8vERpC39CQYZeq1PQ2kaYHdye3V95d06H89KGMsVCIE4LWo3g==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+    "@radix-ui/react-use-previous" "1.1.1"
+    "@radix-ui/react-visually-hidden" "1.2.3"
+
+"@radix-ui/react-popover@^1.1.4":
+  version "1.1.14"
+  resolved "https://registry.npmjs.org/@radix-ui/react-popover/-/react-popover-1.1.14.tgz"
+  integrity sha512-ODz16+1iIbGUfFEfKx2HTPKizg2MN39uIOV8MXeHnmdd3i/N9Wt7vU46wbHsqA0xoaQyXVcs0KIlBdOA2Y95bw==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-focus-guards" "1.1.2"
+    "@radix-ui/react-focus-scope" "1.1.7"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-popper" "1.2.7"
+    "@radix-ui/react-portal" "1.1.9"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-slot" "1.2.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    aria-hidden "^1.2.4"
+    react-remove-scroll "^2.6.3"
+
+"@radix-ui/react-popper@1.2.7":
+  version "1.2.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-popper/-/react-popper-1.2.7.tgz"
+  integrity sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==
+  dependencies:
+    "@floating-ui/react-dom" "^2.0.0"
+    "@radix-ui/react-arrow" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+    "@radix-ui/react-use-rect" "1.1.1"
+    "@radix-ui/react-use-size" "1.1.1"
+    "@radix-ui/rect" "1.1.1"
+
+"@radix-ui/react-portal@1.0.4":
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.0.4.tgz"
+  integrity sha512-Qki+C/EuGUVCQTOTD5vzJzJuMUlewbzuKyUy+/iHM2uwGiru9gZeBJtHAPKAEkB5KWGi9mP/CHKcY0wt1aW45Q==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-primitive" "1.0.3"
+
+"@radix-ui/react-portal@1.1.9":
+  version "1.1.9"
+  resolved "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.1.9.tgz"
+  integrity sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==
+  dependencies:
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-presence@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.0.1.tgz"
+  integrity sha512-UXLW4UAbIY5ZjcvzjfRFo5gxva8QirC9hF7wRE4U5gz+TP0DbRk+//qyuAQ1McDxBt1xNMBTaciFGvEmJvAZCg==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-compose-refs" "1.0.1"
+    "@radix-ui/react-use-layout-effect" "1.0.1"
+
+"@radix-ui/react-presence@1.1.4":
+  version "1.1.4"
+  resolved "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.4.tgz"
+  integrity sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==
+  dependencies:
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-primitive@1.0.3":
+  version "1.0.3"
+  resolved "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-1.0.3.tgz"
+  integrity sha512-yi58uVyoAcK/Nq1inRY56ZSjKypBNKTa/1mcL8qdl6oJeEaDbOldlzrGn7P6Q3Id5d+SYNGc5AJgc4vGhjs5+g==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-slot" "1.0.2"
+
+"@radix-ui/react-primitive@2.1.3":
+  version "2.1.3"
+  resolved "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz"
+  integrity sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==
+  dependencies:
+    "@radix-ui/react-slot" "1.2.3"
+
+"@radix-ui/react-progress@^1.1.1":
+  version "1.1.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-progress/-/react-progress-1.1.7.tgz"
+  integrity sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==
+  dependencies:
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+
+"@radix-ui/react-radio-group@^1.2.2":
+  version "1.3.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-radio-group/-/react-radio-group-1.3.7.tgz"
+  integrity sha512-9w5XhD0KPOrm92OTTE0SysH3sYzHsSTHNvZgUBo/VZ80VdYyB5RneDbc0dKpURS24IxkoFRu/hI0i4XyfFwY6g==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-roving-focus" "1.1.10"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-previous" "1.1.1"
+    "@radix-ui/react-use-size" "1.1.1"
+
+"@radix-ui/react-roving-focus@1.1.10":
+  version "1.1.10"
+  resolved "https://registry.npmjs.org/@radix-ui/react-roving-focus/-/react-roving-focus-1.1.10.tgz"
+  integrity sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-scroll-area@^1.2.2":
+  version "1.2.9"
+  resolved "https://registry.npmjs.org/@radix-ui/react-scroll-area/-/react-scroll-area-1.2.9.tgz"
+  integrity sha512-YSjEfBXnhUELsO2VzjdtYYD4CfQjvao+lhhrX5XsHD7/cyUNzljF1FHEbgTPN7LH2MClfwRMIsYlqTYpKTTe2A==
+  dependencies:
+    "@radix-ui/number" "1.1.1"
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-select@^2.1.4":
+  version "2.2.5"
+  resolved "https://registry.npmjs.org/@radix-ui/react-select/-/react-select-2.2.5.tgz"
+  integrity sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==
+  dependencies:
+    "@radix-ui/number" "1.1.1"
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-focus-guards" "1.1.2"
+    "@radix-ui/react-focus-scope" "1.1.7"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-popper" "1.2.7"
+    "@radix-ui/react-portal" "1.1.9"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-slot" "1.2.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+    "@radix-ui/react-use-previous" "1.1.1"
+    "@radix-ui/react-visually-hidden" "1.2.3"
+    aria-hidden "^1.2.4"
+    react-remove-scroll "^2.6.3"
+
+"@radix-ui/react-separator@^1.1.1":
+  version "1.1.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-separator/-/react-separator-1.1.7.tgz"
+  integrity sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==
+  dependencies:
+    "@radix-ui/react-primitive" "2.1.3"
+
+"@radix-ui/react-slider@^1.2.2":
+  version "1.3.5"
+  resolved "https://registry.npmjs.org/@radix-ui/react-slider/-/react-slider-1.3.5.tgz"
+  integrity sha512-rkfe2pU2NBAYfGaxa3Mqosi7VZEWX5CxKaanRv0vZd4Zhl9fvQrg0VM93dv3xGLGfrHuoTRF3JXH8nb9g+B3fw==
+  dependencies:
+    "@radix-ui/number" "1.1.1"
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+    "@radix-ui/react-use-previous" "1.1.1"
+    "@radix-ui/react-use-size" "1.1.1"
+
+"@radix-ui/react-slot@^1.1.1", "@radix-ui/react-slot@1.2.3":
+  version "1.2.3"
+  resolved "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz"
+  integrity sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==
+  dependencies:
+    "@radix-ui/react-compose-refs" "1.1.2"
+
+"@radix-ui/react-slot@1.0.2":
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.0.2.tgz"
+  integrity sha512-YeTpuq4deV+6DusvVUW4ivBgnkHwECUu0BiN43L5UCDFgdhsRUWAghhTF5MbvNTPzmiFOx90asDSUjWuCNapwg==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-compose-refs" "1.0.1"
+
+"@radix-ui/react-switch@^1.1.2":
+  version "1.2.5"
+  resolved "https://registry.npmjs.org/@radix-ui/react-switch/-/react-switch-1.2.5.tgz"
+  integrity sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-previous" "1.1.1"
+    "@radix-ui/react-use-size" "1.1.1"
+
+"@radix-ui/react-tabs@^1.1.2":
+  version "1.1.12"
+  resolved "https://registry.npmjs.org/@radix-ui/react-tabs/-/react-tabs-1.1.12.tgz"
+  integrity sha512-GTVAlRVrQrSw3cEARM0nAx73ixrWDPNZAruETn3oHCNP6SbZ/hNxdxp+u7VkIEv3/sFoLq1PfcHrl7Pnp0CDpw==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-roving-focus" "1.1.10"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-toast@^1.2.4":
+  version "1.2.14"
+  resolved "https://registry.npmjs.org/@radix-ui/react-toast/-/react-toast-1.2.14.tgz"
+  integrity sha512-nAP5FBxBJGQ/YfUB+r+O6USFVkWq3gAInkxyEnmvEV5jtSbfDhfa4hwX8CraCnbjMLsE7XSf/K75l9xXY7joWg==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-collection" "1.1.7"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-portal" "1.1.9"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+    "@radix-ui/react-visually-hidden" "1.2.3"
+
+"@radix-ui/react-toggle-group@^1.1.1":
+  version "1.1.10"
+  resolved "https://registry.npmjs.org/@radix-ui/react-toggle-group/-/react-toggle-group-1.1.10.tgz"
+  integrity sha512-kiU694Km3WFLTC75DdqgM/3Jauf3rD9wxeS9XtyWFKsBUeZA337lC+6uUazT7I1DhanZ5gyD5Stf8uf2dbQxOQ==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-direction" "1.1.1"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-roving-focus" "1.1.10"
+    "@radix-ui/react-toggle" "1.1.9"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-toggle@^1.1.1", "@radix-ui/react-toggle@1.1.9":
+  version "1.1.9"
+  resolved "https://registry.npmjs.org/@radix-ui/react-toggle/-/react-toggle-1.1.9.tgz"
+  integrity sha512-ZoFkBBz9zv9GWer7wIjvdRxmh2wyc2oKWw6C6CseWd6/yq1DK/l5lJ+wnsmFwJZbBYqr02mrf8A2q/CVCuM3ZA==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+
+"@radix-ui/react-tooltip@^1.1.6":
+  version "1.2.7"
+  resolved "https://registry.npmjs.org/@radix-ui/react-tooltip/-/react-tooltip-1.2.7.tgz"
+  integrity sha512-Ap+fNYwKTYJ9pzqW+Xe2HtMRbQ/EeWkj2qykZ6SuEV4iS/o1bZI5ssJbk4D2r8XuDuOBVz/tIx2JObtuqU+5Zw==
+  dependencies:
+    "@radix-ui/primitive" "1.1.2"
+    "@radix-ui/react-compose-refs" "1.1.2"
+    "@radix-ui/react-context" "1.1.2"
+    "@radix-ui/react-dismissable-layer" "1.1.10"
+    "@radix-ui/react-id" "1.1.1"
+    "@radix-ui/react-popper" "1.2.7"
+    "@radix-ui/react-portal" "1.1.9"
+    "@radix-ui/react-presence" "1.1.4"
+    "@radix-ui/react-primitive" "2.1.3"
+    "@radix-ui/react-slot" "1.2.3"
+    "@radix-ui/react-use-controllable-state" "1.2.2"
+    "@radix-ui/react-visually-hidden" "1.2.3"
+
+"@radix-ui/react-use-callback-ref@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.0.1.tgz"
+  integrity sha512-D94LjX4Sp0xJFVaoQOd3OO9k7tpBYNOXdVhkltUbGv2Qb9OXdrg/CpsjlZv7ia14Sylv398LswWBVVu5nqKzAQ==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+
+"@radix-ui/react-use-callback-ref@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.1.tgz"
+  integrity sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==
+
+"@radix-ui/react-use-controllable-state@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.0.1.tgz"
+  integrity sha512-Svl5GY5FQeN758fWKrjM6Qb7asvXeiZltlT4U2gVfl8Gx5UAv2sMR0LWo8yhsIZh2oQ0eFdZ59aoOOMV7b47VA==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-use-callback-ref" "1.0.1"
+
+"@radix-ui/react-use-controllable-state@1.2.2":
+  version "1.2.2"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz"
+  integrity sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==
+  dependencies:
+    "@radix-ui/react-use-effect-event" "0.0.2"
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-use-effect-event@0.0.2":
+  version "0.0.2"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz"
+  integrity sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==
+  dependencies:
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-use-escape-keydown@1.0.3":
+  version "1.0.3"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.0.3.tgz"
+  integrity sha512-vyL82j40hcFicA+M4Ex7hVkB9vHgSse1ZWomAqV2Je3RleKGO5iM8KMOEtfoSB0PnIelMd2lATjTGMYqN5ylTg==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+    "@radix-ui/react-use-callback-ref" "1.0.1"
+
+"@radix-ui/react-use-escape-keydown@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.1.1.tgz"
+  integrity sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==
+  dependencies:
+    "@radix-ui/react-use-callback-ref" "1.1.1"
+
+"@radix-ui/react-use-is-hydrated@0.1.0":
+  version "0.1.0"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-is-hydrated/-/react-use-is-hydrated-0.1.0.tgz"
+  integrity sha512-U+UORVEq+cTnRIaostJv9AGdV3G6Y+zbVd+12e18jQ5A3c0xL03IhnHuiU4UV69wolOQp5GfR58NW/EgdQhwOA==
+  dependencies:
+    use-sync-external-store "^1.5.0"
+
+"@radix-ui/react-use-layout-effect@1.0.1":
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.0.1.tgz"
+  integrity sha512-v/5RegiJWYdoCvMnITBkNNx6bCj20fiaJnWtRkU18yITptraXjffz5Qbn05uOiQnOvi+dbkznkoaMltz1GnszQ==
+  dependencies:
+    "@babel/runtime" "^7.13.10"
+
+"@radix-ui/react-use-layout-effect@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz"
+  integrity sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==
+
+"@radix-ui/react-use-previous@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-previous/-/react-use-previous-1.1.1.tgz"
+  integrity sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==
+
+"@radix-ui/react-use-rect@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-rect/-/react-use-rect-1.1.1.tgz"
+  integrity sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==
+  dependencies:
+    "@radix-ui/rect" "1.1.1"
+
+"@radix-ui/react-use-size@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/react-use-size/-/react-use-size-1.1.1.tgz"
+  integrity sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==
+  dependencies:
+    "@radix-ui/react-use-layout-effect" "1.1.1"
+
+"@radix-ui/react-visually-hidden@1.2.3":
+  version "1.2.3"
+  resolved "https://registry.npmjs.org/@radix-ui/react-visually-hidden/-/react-visually-hidden-1.2.3.tgz"
+  integrity sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==
+  dependencies:
+    "@radix-ui/react-primitive" "2.1.3"
+
+"@radix-ui/rect@1.1.1":
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/@radix-ui/rect/-/rect-1.1.1.tgz"
+  integrity sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==
+
+"@rtsao/scc@^1.1.0":
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz"
+  integrity sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==
+
+"@rushstack/eslint-patch@^1.10.3":
+  version "1.11.0"
+  resolved "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.11.0.tgz"
+  integrity sha512-zxnHvoMQVqewTJr/W4pKjF0bMGiKJv1WX7bSrkl46Hg0QjESbzBROWK0Wg4RphzSOS5Jiy7eFimmM3UgMrMZbQ==
+
+"@smithy/abort-controller@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/abort-controller/-/abort-controller-2.2.0.tgz"
+  integrity sha512-wRlta7GuLWpTqtFfGo+nZyOO1vEvewdNR1R4rTxpC8XU6vG/NDyrFBhwLZsqg1NUoR1noVaXJPC/7ZK47QCySw==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/abort-controller@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/abort-controller/-/abort-controller-4.0.4.tgz"
+  integrity sha512-gJnEjZMvigPDQWHrW3oPrFhQtkrgqBkyjj3pCIdF3A5M6vsZODG93KNlfJprv6bp4245bdT32fsHK4kkH3KYDA==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/chunked-blob-reader-native@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/chunked-blob-reader-native/-/chunked-blob-reader-native-4.0.0.tgz"
+  integrity sha512-R9wM2yPmfEMsUmlMlIgSzOyICs0x9uu7UTHoccMyt7BWw8shcGM8HqB355+BZCPBcySvbTYMs62EgEQkNxz2ig==
+  dependencies:
+    "@smithy/util-base64" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/chunked-blob-reader@^5.0.0":
+  version "5.0.0"
+  resolved "https://registry.npmjs.org/@smithy/chunked-blob-reader/-/chunked-blob-reader-5.0.0.tgz"
+  integrity sha512-+sKqDBQqb036hh4NPaUiEkYFkTUGYzRsn3EuFhyfQfMy6oGHEUJDurLP9Ufb5dasr/XiAmPNMr6wa9afjQB+Gw==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/config-resolver@^2.0.5", "@smithy/config-resolver@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/config-resolver/-/config-resolver-2.2.0.tgz"
+  integrity sha512-fsiMgd8toyUba6n1WRmr+qACzXltpdDkPTAaDqc8QqPBUzO+/JKwL6bUBseHVi8tu9l+3JOK+tSf7cay+4B3LA==
+  dependencies:
+    "@smithy/node-config-provider" "^2.3.0"
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-config-provider" "^2.3.0"
+    "@smithy/util-middleware" "^2.2.0"
+    tslib "^2.6.2"
+
+"@smithy/config-resolver@^4.1.4":
+  version "4.1.4"
+  resolved "https://registry.npmjs.org/@smithy/config-resolver/-/config-resolver-4.1.4.tgz"
+  integrity sha512-prmU+rDddxHOH0oNcwemL+SwnzcG65sBF2yXRO7aeXIn/xTlq2pX7JLVbkBnVLowHLg4/OL4+jBmv9hVrVGS+w==
+  dependencies:
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-config-provider" "^4.0.0"
+    "@smithy/util-middleware" "^4.0.4"
+    tslib "^2.6.2"
+
+"@smithy/core@^3.5.2", "@smithy/core@^3.5.3":
+  version "3.5.3"
+  resolved "https://registry.npmjs.org/@smithy/core/-/core-3.5.3.tgz"
+  integrity sha512-xa5byV9fEguZNofCclv6v9ra0FYh5FATQW/da7FQUVTic94DfrN/NvmKZjrMyzbpqfot9ZjBaO8U1UeTbmSLuA==
+  dependencies:
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-body-length-browser" "^4.0.0"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-stream" "^4.2.2"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/credential-provider-imds@^2.0.0", "@smithy/credential-provider-imds@^2.3.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/credential-provider-imds/-/credential-provider-imds-2.3.0.tgz"
+  integrity sha512-BWB9mIukO1wjEOo1Ojgl6LrG4avcaC7T/ZP6ptmAaW4xluhSIPZhY+/PI5YKzlk+jsm+4sQZB45Bt1OfMeQa3w==
+  dependencies:
+    "@smithy/node-config-provider" "^2.3.0"
+    "@smithy/property-provider" "^2.2.0"
+    "@smithy/types" "^2.12.0"
+    "@smithy/url-parser" "^2.2.0"
+    tslib "^2.6.2"
+
+"@smithy/credential-provider-imds@^4.0.6":
+  version "4.0.6"
+  resolved "https://registry.npmjs.org/@smithy/credential-provider-imds/-/credential-provider-imds-4.0.6.tgz"
+  integrity sha512-hKMWcANhUiNbCJouYkZ9V3+/Qf9pteR1dnwgdyzR09R4ODEYx8BbUysHwRSyex4rZ9zapddZhLFTnT4ZijR4pw==
+  dependencies:
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    tslib "^2.6.2"
+
+"@smithy/eventstream-codec@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/eventstream-codec/-/eventstream-codec-4.0.4.tgz"
+  integrity sha512-7XoWfZqWb/QoR/rAU4VSi0mWnO2vu9/ltS6JZ5ZSZv0eovLVfDfu0/AX4ub33RsJTOth3TiFWSHS5YdztvFnig==
+  dependencies:
+    "@aws-crypto/crc32" "5.2.0"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-hex-encoding" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/eventstream-serde-browser@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/eventstream-serde-browser/-/eventstream-serde-browser-4.0.4.tgz"
+  integrity sha512-3fb/9SYaYqbpy/z/H3yIi0bYKyAa89y6xPmIqwr2vQiUT2St+avRt8UKwsWt9fEdEasc5d/V+QjrviRaX1JRFA==
+  dependencies:
+    "@smithy/eventstream-serde-universal" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/eventstream-serde-config-resolver@^4.1.2":
+  version "4.1.2"
+  resolved "https://registry.npmjs.org/@smithy/eventstream-serde-config-resolver/-/eventstream-serde-config-resolver-4.1.2.tgz"
+  integrity sha512-JGtambizrWP50xHgbzZI04IWU7LdI0nh/wGbqH3sJesYToMi2j/DcoElqyOcqEIG/D4tNyxgRuaqBXWE3zOFhQ==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/eventstream-serde-node@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/eventstream-serde-node/-/eventstream-serde-node-4.0.4.tgz"
+  integrity sha512-RD6UwNZ5zISpOWPuhVgRz60GkSIp0dy1fuZmj4RYmqLVRtejFqQ16WmfYDdoSoAjlp1LX+FnZo+/hkdmyyGZ1w==
+  dependencies:
+    "@smithy/eventstream-serde-universal" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/eventstream-serde-universal@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/eventstream-serde-universal/-/eventstream-serde-universal-4.0.4.tgz"
+  integrity sha512-UeJpOmLGhq1SLox79QWw/0n2PFX+oPRE1ZyRMxPIaFEfCqWaqpB7BU9C8kpPOGEhLF7AwEqfFbtwNxGy4ReENA==
+  dependencies:
+    "@smithy/eventstream-codec" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/fetch-http-handler@^2.0.5", "@smithy/fetch-http-handler@^2.5.0":
+  version "2.5.0"
+  resolved "https://registry.npmjs.org/@smithy/fetch-http-handler/-/fetch-http-handler-2.5.0.tgz"
+  integrity sha512-BOWEBeppWhLn/no/JxUL/ghTfANTjT7kg3Ww2rPqTUY9R4yHPXxJ9JhMe3Z03LN3aPwiwlpDIUcVw1xDyHqEhw==
+  dependencies:
+    "@smithy/protocol-http" "^3.3.0"
+    "@smithy/querystring-builder" "^2.2.0"
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-base64" "^2.3.0"
+    tslib "^2.6.2"
+
+"@smithy/fetch-http-handler@^5.0.4":
+  version "5.0.4"
+  resolved "https://registry.npmjs.org/@smithy/fetch-http-handler/-/fetch-http-handler-5.0.4.tgz"
+  integrity sha512-AMtBR5pHppYMVD7z7G+OlHHAcgAN7v0kVKEpHuTO4Gb199Gowh0taYi9oDStFeUhetkeP55JLSVlTW1n9rFtUw==
+  dependencies:
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/querystring-builder" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-base64" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/hash-blob-browser@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/hash-blob-browser/-/hash-blob-browser-4.0.4.tgz"
+  integrity sha512-WszRiACJiQV3QG6XMV44i5YWlkrlsM5Yxgz4jvsksuu7LDXA6wAtypfPajtNTadzpJy3KyJPoWehYpmZGKUFIQ==
+  dependencies:
+    "@smithy/chunked-blob-reader" "^5.0.0"
+    "@smithy/chunked-blob-reader-native" "^4.0.0"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/hash-node@^2.0.5":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/hash-node/-/hash-node-2.2.0.tgz"
+  integrity sha512-zLWaC/5aWpMrHKpoDF6nqpNtBhlAYKF/7+9yMN7GpdR8CzohnWfGtMznPybnwSS8saaXBMxIGwJqR4HmRp6b3g==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-buffer-from" "^2.2.0"
+    "@smithy/util-utf8" "^2.3.0"
+    tslib "^2.6.2"
+
+"@smithy/hash-node@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/hash-node/-/hash-node-4.0.4.tgz"
+  integrity sha512-qnbTPUhCVnCgBp4z4BUJUhOEkVwxiEi1cyFM+Zj6o+aY8OFGxUQleKWq8ltgp3dujuhXojIvJWdoqpm6dVO3lQ==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-buffer-from" "^4.0.0"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/hash-stream-node@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/hash-stream-node/-/hash-stream-node-4.0.4.tgz"
+  integrity sha512-wHo0d8GXyVmpmMh/qOR0R7Y46/G1y6OR8U+bSTB4ppEzRxd1xVAQ9xOE9hOc0bSjhz0ujCPAbfNLkLrpa6cevg==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/invalid-dependency@^2.0.5":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/invalid-dependency/-/invalid-dependency-2.2.0.tgz"
+  integrity sha512-nEDASdbKFKPXN2O6lOlTgrEEOO9NHIeO+HVvZnkqc8h5U9g3BIhWsvzFo+UcUbliMHvKNPD/zVxDrkP1Sbgp8Q==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/invalid-dependency@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/invalid-dependency/-/invalid-dependency-4.0.4.tgz"
+  integrity sha512-bNYMi7WKTJHu0gn26wg8OscncTt1t2b8KcsZxvOv56XA6cyXtOAAAaNP7+m45xfppXfOatXF3Sb1MNsLUgVLTw==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/is-array-buffer@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/is-array-buffer/-/is-array-buffer-2.2.0.tgz"
+  integrity sha512-GGP3O9QFD24uGeAXYUjwSTXARoqpZykHadOmA8G5vfJPK0/DC67qa//0qvqrJzL1xc8WQWX7/yc7fwudjPHPhA==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/is-array-buffer@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/is-array-buffer/-/is-array-buffer-4.0.0.tgz"
+  integrity sha512-saYhF8ZZNoJDTvJBEWgeBccCg+yvp1CX+ed12yORU3NilJScfc6gfch2oVb4QgxZrGUx3/ZJlb+c/dJbyupxlw==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/md5-js@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/md5-js/-/md5-js-4.0.4.tgz"
+  integrity sha512-uGLBVqcOwrLvGh/v/jw423yWHq/ofUGK1W31M2TNspLQbUV1Va0F5kTxtirkoHawODAZcjXTSGi7JwbnPcDPJg==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/middleware-content-length@^2.0.5":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/middleware-content-length/-/middleware-content-length-2.2.0.tgz"
+  integrity sha512-5bl2LG1Ah/7E5cMSC+q+h3IpVHMeOkG0yLRyQT1p2aMJkSrZG7RlXHPuAgb7EyaFeidKEnnd/fNaLLaKlHGzDQ==
+  dependencies:
+    "@smithy/protocol-http" "^3.3.0"
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/middleware-content-length@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/middleware-content-length/-/middleware-content-length-4.0.4.tgz"
+  integrity sha512-F7gDyfI2BB1Kc+4M6rpuOLne5LOcEknH1n6UQB69qv+HucXBR1rkzXBnQTB2q46sFy1PM/zuSJOB532yc8bg3w==
+  dependencies:
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/middleware-endpoint@^2.0.5", "@smithy/middleware-endpoint@^2.5.1":
+  version "2.5.1"
+  resolved "https://registry.npmjs.org/@smithy/middleware-endpoint/-/middleware-endpoint-2.5.1.tgz"
+  integrity sha512-1/8kFp6Fl4OsSIVTWHnNjLnTL8IqpIb/D3sTSczrKFnrE9VMNWxnrRKNvpUHOJ6zpGD5f62TPm7+17ilTJpiCQ==
+  dependencies:
+    "@smithy/middleware-serde" "^2.3.0"
+    "@smithy/node-config-provider" "^2.3.0"
+    "@smithy/shared-ini-file-loader" "^2.4.0"
+    "@smithy/types" "^2.12.0"
+    "@smithy/url-parser" "^2.2.0"
+    "@smithy/util-middleware" "^2.2.0"
+    tslib "^2.6.2"
+
+"@smithy/middleware-endpoint@^4.1.10", "@smithy/middleware-endpoint@^4.1.11":
+  version "4.1.11"
+  resolved "https://registry.npmjs.org/@smithy/middleware-endpoint/-/middleware-endpoint-4.1.11.tgz"
+  integrity sha512-zDogwtRLzKl58lVS8wPcARevFZNBOOqnmzWWxVe9XiaXU2CADFjvJ9XfNibgkOWs08sxLuSr81NrpY4mgp9OwQ==
+  dependencies:
+    "@smithy/core" "^3.5.3"
+    "@smithy/middleware-serde" "^4.0.8"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/shared-ini-file-loader" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    "@smithy/url-parser" "^4.0.4"
+    "@smithy/util-middleware" "^4.0.4"
+    tslib "^2.6.2"
+
+"@smithy/middleware-retry@^2.0.5":
+  version "2.3.1"
+  resolved "https://registry.npmjs.org/@smithy/middleware-retry/-/middleware-retry-2.3.1.tgz"
+  integrity sha512-P2bGufFpFdYcWvqpyqqmalRtwFUNUA8vHjJR5iGqbfR6mp65qKOLcUd6lTr4S9Gn/enynSrSf3p3FVgVAf6bXA==
+  dependencies:
+    "@smithy/node-config-provider" "^2.3.0"
+    "@smithy/protocol-http" "^3.3.0"
+    "@smithy/service-error-classification" "^2.1.5"
+    "@smithy/smithy-client" "^2.5.1"
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-middleware" "^2.2.0"
+    "@smithy/util-retry" "^2.2.0"
+    tslib "^2.6.2"
+    uuid "^9.0.1"
+
+"@smithy/middleware-retry@^4.1.11":
+  version "4.1.12"
+  resolved "https://registry.npmjs.org/@smithy/middleware-retry/-/middleware-retry-4.1.12.tgz"
+  integrity sha512-wvIH70c4e91NtRxdaLZF+mbLZ/HcC6yg7ySKUiufL6ESp6zJUSnJucZ309AvG9nqCFHSRB5I6T3Ez1Q9wCh0Ww==
+  dependencies:
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/service-error-classification" "^4.0.5"
+    "@smithy/smithy-client" "^4.4.3"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-retry" "^4.0.5"
+    tslib "^2.6.2"
+    uuid "^9.0.1"
+
+"@smithy/middleware-serde@^2.0.5", "@smithy/middleware-serde@^2.3.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/middleware-serde/-/middleware-serde-2.3.0.tgz"
+  integrity sha512-sIADe7ojwqTyvEQBe1nc/GXB9wdHhi9UwyX0lTyttmUWDJLP655ZYE1WngnNyXREme8I27KCaUhyhZWRXL0q7Q==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/middleware-serde@^4.0.8":
+  version "4.0.8"
+  resolved "https://registry.npmjs.org/@smithy/middleware-serde/-/middleware-serde-4.0.8.tgz"
+  integrity sha512-iSSl7HJoJaGyMIoNn2B7czghOVwJ9nD7TMvLhMWeSB5vt0TnEYyRRqPJu/TqW76WScaNvYYB8nRoiBHR9S1Ddw==
+  dependencies:
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/middleware-stack@^2.0.0", "@smithy/middleware-stack@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/middleware-stack/-/middleware-stack-2.2.0.tgz"
+  integrity sha512-Qntc3jrtwwrsAC+X8wms8zhrTr0sFXnyEGhZd9sLtsJ/6gGQKFzNB+wWbOcpJd7BR8ThNCoKt76BuQahfMvpeA==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/middleware-stack@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/middleware-stack/-/middleware-stack-4.0.4.tgz"
+  integrity sha512-kagK5ggDrBUCCzI93ft6DjteNSfY8Ulr83UtySog/h09lTIOAJ/xUSObutanlPT0nhoHAkpmW9V5K8oPyLh+QA==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/node-config-provider@^2.0.5", "@smithy/node-config-provider@^2.3.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/node-config-provider/-/node-config-provider-2.3.0.tgz"
+  integrity sha512-0elK5/03a1JPWMDPaS726Iw6LpQg80gFut1tNpPfxFuChEEklo2yL823V94SpTZTxmKlXFtFgsP55uh3dErnIg==
+  dependencies:
+    "@smithy/property-provider" "^2.2.0"
+    "@smithy/shared-ini-file-loader" "^2.4.0"
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/node-config-provider@^4.1.3":
+  version "4.1.3"
+  resolved "https://registry.npmjs.org/@smithy/node-config-provider/-/node-config-provider-4.1.3.tgz"
+  integrity sha512-HGHQr2s59qaU1lrVH6MbLlmOBxadtzTsoO4c+bF5asdgVik3I8o7JIOzoeqWc5MjVa+vD36/LWE0iXKpNqooRw==
+  dependencies:
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/shared-ini-file-loader" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/node-http-handler@^2.0.5", "@smithy/node-http-handler@^2.5.0":
+  version "2.5.0"
+  resolved "https://registry.npmjs.org/@smithy/node-http-handler/-/node-http-handler-2.5.0.tgz"
+  integrity sha512-mVGyPBzkkGQsPoxQUbxlEfRjrj6FPyA3u3u2VXGr9hT8wilsoQdZdvKpMBFMB8Crfhv5dNkKHIW0Yyuc7eABqA==
+  dependencies:
+    "@smithy/abort-controller" "^2.2.0"
+    "@smithy/protocol-http" "^3.3.0"
+    "@smithy/querystring-builder" "^2.2.0"
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/node-http-handler@^4.0.6":
+  version "4.0.6"
+  resolved "https://registry.npmjs.org/@smithy/node-http-handler/-/node-http-handler-4.0.6.tgz"
+  integrity sha512-NqbmSz7AW2rvw4kXhKGrYTiJVDHnMsFnX4i+/FzcZAfbOBauPYs2ekuECkSbtqaxETLLTu9Rl/ex6+I2BKErPA==
+  dependencies:
+    "@smithy/abort-controller" "^4.0.4"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/querystring-builder" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/property-provider@^2.0.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/property-provider/-/property-provider-2.2.0.tgz"
+  integrity sha512-+xiil2lFhtTRzXkx8F053AV46QnIw6e7MV8od5Mi68E1ICOjCeCHw2XfLnDEUHnT9WGUIkwcqavXjfwuJbGlpg==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/property-provider@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/property-provider/-/property-provider-2.2.0.tgz"
+  integrity sha512-+xiil2lFhtTRzXkx8F053AV46QnIw6e7MV8od5Mi68E1ICOjCeCHw2XfLnDEUHnT9WGUIkwcqavXjfwuJbGlpg==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/property-provider@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/property-provider/-/property-provider-4.0.4.tgz"
+  integrity sha512-qHJ2sSgu4FqF4U/5UUp4DhXNmdTrgmoAai6oQiM+c5RZ/sbDwJ12qxB1M6FnP+Tn/ggkPZf9ccn4jqKSINaquw==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/protocol-http@^2.0.5":
+  version "2.0.5"
+  resolved "https://registry.npmjs.org/@smithy/protocol-http/-/protocol-http-2.0.5.tgz"
+  integrity sha512-d2hhHj34mA2V86doiDfrsy2fNTnUOowGaf9hKb0hIPHqvcnShU4/OSc4Uf1FwHkAdYF3cFXTrj5VGUYbEuvMdw==
+  dependencies:
+    "@smithy/types" "^2.2.2"
+    tslib "^2.5.0"
+
+"@smithy/protocol-http@^3.3.0":
+  version "3.3.0"
+  resolved "https://registry.npmjs.org/@smithy/protocol-http/-/protocol-http-3.3.0.tgz"
+  integrity sha512-Xy5XK1AFWW2nlY/biWZXu6/krgbaf2dg0q492D8M5qthsnU2H+UgFeZLbM76FnH7s6RO/xhQRkj+T6KBO3JzgQ==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/protocol-http@^5.1.2":
+  version "5.1.2"
+  resolved "https://registry.npmjs.org/@smithy/protocol-http/-/protocol-http-5.1.2.tgz"
+  integrity sha512-rOG5cNLBXovxIrICSBm95dLqzfvxjEmuZx4KK3hWwPFHGdW3lxY0fZNXfv2zebfRO7sJZ5pKJYHScsqopeIWtQ==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/querystring-builder@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/querystring-builder/-/querystring-builder-2.2.0.tgz"
+  integrity sha512-L1kSeviUWL+emq3CUVSgdogoM/D9QMFaqxL/dd0X7PCNWmPXqt+ExtrBjqT0V7HLN03Vs9SuiLrG3zy3JGnE5A==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-uri-escape" "^2.2.0"
+    tslib "^2.6.2"
+
+"@smithy/querystring-builder@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/querystring-builder/-/querystring-builder-4.0.4.tgz"
+  integrity sha512-SwREZcDnEYoh9tLNgMbpop+UTGq44Hl9tdj3rf+yeLcfH7+J8OXEBaMc2kDxtyRHu8BhSg9ADEx0gFHvpJgU8w==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-uri-escape" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/querystring-parser@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/querystring-parser/-/querystring-parser-2.2.0.tgz"
+  integrity sha512-BvHCDrKfbG5Yhbpj4vsbuPV2GgcpHiAkLeIlcA1LtfpMz3jrqizP1+OguSNSj1MwBHEiN+jwNisXLGdajGDQJA==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/querystring-parser@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/querystring-parser/-/querystring-parser-4.0.4.tgz"
+  integrity sha512-6yZf53i/qB8gRHH/l2ZwUG5xgkPgQF15/KxH0DdXMDHjesA9MeZje/853ifkSY0x4m5S+dfDZ+c4x439PF0M2w==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/service-error-classification@^2.1.5":
+  version "2.1.5"
+  resolved "https://registry.npmjs.org/@smithy/service-error-classification/-/service-error-classification-2.1.5.tgz"
+  integrity sha512-uBDTIBBEdAQryvHdc5W8sS5YX7RQzF683XrHePVdFmAgKiMofU15FLSM0/HU03hKTnazdNRFa0YHS7+ArwoUSQ==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+
+"@smithy/service-error-classification@^4.0.5":
+  version "4.0.5"
+  resolved "https://registry.npmjs.org/@smithy/service-error-classification/-/service-error-classification-4.0.5.tgz"
+  integrity sha512-LvcfhrnCBvCmTee81pRlh1F39yTS/+kYleVeLCwNtkY8wtGg8V/ca9rbZZvYIl8OjlMtL6KIjaiL/lgVqHD2nA==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+
+"@smithy/shared-ini-file-loader@^2.0.0", "@smithy/shared-ini-file-loader@^2.4.0":
+  version "2.4.0"
+  resolved "https://registry.npmjs.org/@smithy/shared-ini-file-loader/-/shared-ini-file-loader-2.4.0.tgz"
+  integrity sha512-WyujUJL8e1B6Z4PBfAqC/aGY1+C7T0w20Gih3yrvJSk97gpiVfB+y7c46T4Nunk+ZngLq0rOIdeVeIklk0R3OA==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/shared-ini-file-loader@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/shared-ini-file-loader/-/shared-ini-file-loader-4.0.4.tgz"
+  integrity sha512-63X0260LoFBjrHifPDs+nM9tV0VMkOTl4JRMYNuKh/f5PauSjowTfvF3LogfkWdcPoxsA9UjqEOgjeYIbhb7Nw==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/signature-v4@^2.0.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/signature-v4/-/signature-v4-2.3.0.tgz"
+  integrity sha512-ui/NlpILU+6HAQBfJX8BBsDXuKSNrjTSuOYArRblcrErwKFutjrCNb/OExfVRyj9+26F9J+ZmfWT+fKWuDrH3Q==
+  dependencies:
+    "@smithy/is-array-buffer" "^2.2.0"
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-hex-encoding" "^2.2.0"
+    "@smithy/util-middleware" "^2.2.0"
+    "@smithy/util-uri-escape" "^2.2.0"
+    "@smithy/util-utf8" "^2.3.0"
+    tslib "^2.6.2"
+
+"@smithy/signature-v4@^5.1.2":
+  version "5.1.2"
+  resolved "https://registry.npmjs.org/@smithy/signature-v4/-/signature-v4-5.1.2.tgz"
+  integrity sha512-d3+U/VpX7a60seHziWnVZOHuEgJlclufjkS6zhXvxcJgkJq4UWdH5eOBLzHRMx6gXjsdT9h6lfpmLzbrdupHgQ==
+  dependencies:
+    "@smithy/is-array-buffer" "^4.0.0"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-hex-encoding" "^4.0.0"
+    "@smithy/util-middleware" "^4.0.4"
+    "@smithy/util-uri-escape" "^4.0.0"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/smithy-client@^2.0.5", "@smithy/smithy-client@^2.5.1":
+  version "2.5.1"
+  resolved "https://registry.npmjs.org/@smithy/smithy-client/-/smithy-client-2.5.1.tgz"
+  integrity sha512-jrbSQrYCho0yDaaf92qWgd+7nAeap5LtHTI51KXqmpIFCceKU3K9+vIVTUH72bOJngBMqa4kyu1VJhRcSrk/CQ==
+  dependencies:
+    "@smithy/middleware-endpoint" "^2.5.1"
+    "@smithy/middleware-stack" "^2.2.0"
+    "@smithy/protocol-http" "^3.3.0"
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-stream" "^2.2.0"
+    tslib "^2.6.2"
+
+"@smithy/smithy-client@^4.4.2", "@smithy/smithy-client@^4.4.3":
+  version "4.4.3"
+  resolved "https://registry.npmjs.org/@smithy/smithy-client/-/smithy-client-4.4.3.tgz"
+  integrity sha512-xxzNYgA0HD6ETCe5QJubsxP0hQH3QK3kbpJz3QrosBCuIWyEXLR/CO5hFb2OeawEKUxMNhz3a1nuJNN2np2RMA==
+  dependencies:
+    "@smithy/core" "^3.5.3"
+    "@smithy/middleware-endpoint" "^4.1.11"
+    "@smithy/middleware-stack" "^4.0.4"
+    "@smithy/protocol-http" "^5.1.2"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-stream" "^4.2.2"
+    tslib "^2.6.2"
+
+"@smithy/types@^2.12.0", "@smithy/types@^2.2.2":
+  version "2.12.0"
+  resolved "https://registry.npmjs.org/@smithy/types/-/types-2.12.0.tgz"
+  integrity sha512-QwYgloJ0sVNBeBuBs65cIkTbfzV/Q6ZNPCJ99EICFEdJYG50nGIY/uYXp+TbsdJReIuPr0a0kXmCvren3MbRRw==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/types@^4.3.1":
+  version "4.3.1"
+  resolved "https://registry.npmjs.org/@smithy/types/-/types-4.3.1.tgz"
+  integrity sha512-UqKOQBL2x6+HWl3P+3QqFD4ncKq0I8Nuz9QItGv5WuKuMHuuwlhvqcZCoXGfc+P1QmfJE7VieykoYYmrOoFJxA==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/url-parser@^2.0.5", "@smithy/url-parser@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/url-parser/-/url-parser-2.2.0.tgz"
+  integrity sha512-hoA4zm61q1mNTpksiSWp2nEl1dt3j726HdRhiNgVJQMj7mLp7dprtF57mOB6JvEk/x9d2bsuL5hlqZbBuHQylQ==
+  dependencies:
+    "@smithy/querystring-parser" "^2.2.0"
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/url-parser@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/url-parser/-/url-parser-4.0.4.tgz"
+  integrity sha512-eMkc144MuN7B0TDA4U2fKs+BqczVbk3W+qIvcoCY6D1JY3hnAdCuhCZODC+GAeaxj0p6Jroz4+XMUn3PCxQQeQ==
+  dependencies:
+    "@smithy/querystring-parser" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/util-base64@^2.0.0", "@smithy/util-base64@^2.3.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/util-base64/-/util-base64-2.3.0.tgz"
+  integrity sha512-s3+eVwNeJuXUwuMbusncZNViuhv2LjVJ1nMwTqSA0XAC7gjKhqqxRdJPhR8+YrkoZ9IiIbFk/yK6ACe/xlF+hw==
+  dependencies:
+    "@smithy/util-buffer-from" "^2.2.0"
+    "@smithy/util-utf8" "^2.3.0"
+    tslib "^2.6.2"
+
+"@smithy/util-base64@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-base64/-/util-base64-4.0.0.tgz"
+  integrity sha512-CvHfCmO2mchox9kjrtzoHkWHxjHZzaFojLc8quxXY7WAAMAg43nuxwv95tATVgQFNDwd4M9S1qFzj40Ul41Kmg==
+  dependencies:
+    "@smithy/util-buffer-from" "^4.0.0"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/util-body-length-browser@^2.0.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-body-length-browser/-/util-body-length-browser-2.2.0.tgz"
+  integrity sha512-dtpw9uQP7W+n3vOtx0CfBD5EWd7EPdIdsQnWTDoFf77e3VUf05uA7R7TGipIo8e4WL2kuPdnsr3hMQn9ziYj5w==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-body-length-browser@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-body-length-browser/-/util-body-length-browser-4.0.0.tgz"
+  integrity sha512-sNi3DL0/k64/LO3A256M+m3CDdG6V7WKWHdAiBBMUN8S3hK3aMPhwnPik2A/a2ONN+9doY9UxaLfgqsIRg69QA==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-body-length-node@^2.1.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/util-body-length-node/-/util-body-length-node-2.3.0.tgz"
+  integrity sha512-ITWT1Wqjubf2CJthb0BuT9+bpzBfXeMokH/AAa5EJQgbv9aPMVfnM76iFIZVFf50hYXGbtiV71BHAthNWd6+dw==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-body-length-node@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-body-length-node/-/util-body-length-node-4.0.0.tgz"
+  integrity sha512-q0iDP3VsZzqJyje8xJWEJCNIu3lktUGVoSy1KB0UWym2CL1siV3artm+u1DFYTLejpsrdGyCSWBdGNjJzfDPjg==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-buffer-from@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-buffer-from/-/util-buffer-from-2.2.0.tgz"
+  integrity sha512-IJdWBbTcMQ6DA0gdNhh/BwrLkDR+ADW5Kr1aZmd4k3DIF6ezMV4R2NIAmT08wQJ3yUK82thHWmC/TnK/wpMMIA==
+  dependencies:
+    "@smithy/is-array-buffer" "^2.2.0"
+    tslib "^2.6.2"
+
+"@smithy/util-buffer-from@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-buffer-from/-/util-buffer-from-4.0.0.tgz"
+  integrity sha512-9TOQ7781sZvddgO8nxueKi3+yGvkY35kotA0Y6BWRajAv8jjmigQ1sBwz0UX47pQMYXJPahSKEKYFgt+rXdcug==
+  dependencies:
+    "@smithy/is-array-buffer" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/util-config-provider@^2.3.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/util-config-provider/-/util-config-provider-2.3.0.tgz"
+  integrity sha512-HZkzrRcuFN1k70RLqlNK4FnPXKOpkik1+4JaBoHNJn+RnJGYqaa3c5/+XtLOXhlKzlRgNvyaLieHTW2VwGN0VQ==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-config-provider@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-config-provider/-/util-config-provider-4.0.0.tgz"
+  integrity sha512-L1RBVzLyfE8OXH+1hsJ8p+acNUSirQnWQ6/EgpchV88G6zGBTDPdXiiExei6Z1wR2RxYvxY/XLw6AMNCCt8H3w==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-defaults-mode-browser@^2.0.5":
+  version "2.2.1"
+  resolved "https://registry.npmjs.org/@smithy/util-defaults-mode-browser/-/util-defaults-mode-browser-2.2.1.tgz"
+  integrity sha512-RtKW+8j8skk17SYowucwRUjeh4mCtnm5odCL0Lm2NtHQBsYKrNW0od9Rhopu9wF1gHMfHeWF7i90NwBz/U22Kw==
+  dependencies:
+    "@smithy/property-provider" "^2.2.0"
+    "@smithy/smithy-client" "^2.5.1"
+    "@smithy/types" "^2.12.0"
+    bowser "^2.11.0"
+    tslib "^2.6.2"
+
+"@smithy/util-defaults-mode-browser@^4.0.18":
+  version "4.0.19"
+  resolved "https://registry.npmjs.org/@smithy/util-defaults-mode-browser/-/util-defaults-mode-browser-4.0.19.tgz"
+  integrity sha512-mvLMh87xSmQrV5XqnUYEPoiFFeEGYeAKIDDKdhE2ahqitm8OHM3aSvhqL6rrK6wm1brIk90JhxDf5lf2hbrLbQ==
+  dependencies:
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/smithy-client" "^4.4.3"
+    "@smithy/types" "^4.3.1"
+    bowser "^2.11.0"
+    tslib "^2.6.2"
+
+"@smithy/util-defaults-mode-node@^2.0.5":
+  version "2.3.1"
+  resolved "https://registry.npmjs.org/@smithy/util-defaults-mode-node/-/util-defaults-mode-node-2.3.1.tgz"
+  integrity sha512-vkMXHQ0BcLFysBMWgSBLSk3+leMpFSyyFj8zQtv5ZyUBx8/owVh1/pPEkzmW/DR/Gy/5c8vjLDD9gZjXNKbrpA==
+  dependencies:
+    "@smithy/config-resolver" "^2.2.0"
+    "@smithy/credential-provider-imds" "^2.3.0"
+    "@smithy/node-config-provider" "^2.3.0"
+    "@smithy/property-provider" "^2.2.0"
+    "@smithy/smithy-client" "^2.5.1"
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/util-defaults-mode-node@^4.0.18":
+  version "4.0.19"
+  resolved "https://registry.npmjs.org/@smithy/util-defaults-mode-node/-/util-defaults-mode-node-4.0.19.tgz"
+  integrity sha512-8tYnx+LUfj6m+zkUUIrIQJxPM1xVxfRBvoGHua7R/i6qAxOMjqR6CpEpDwKoIs1o0+hOjGvkKE23CafKL0vJ9w==
+  dependencies:
+    "@smithy/config-resolver" "^4.1.4"
+    "@smithy/credential-provider-imds" "^4.0.6"
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/property-provider" "^4.0.4"
+    "@smithy/smithy-client" "^4.4.3"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/util-endpoints@^3.0.6":
+  version "3.0.6"
+  resolved "https://registry.npmjs.org/@smithy/util-endpoints/-/util-endpoints-3.0.6.tgz"
+  integrity sha512-YARl3tFL3WgPuLzljRUnrS2ngLiUtkwhQtj8PAL13XZSyUiNLQxwG3fBBq3QXFqGFUXepIN73pINp3y8c2nBmA==
+  dependencies:
+    "@smithy/node-config-provider" "^4.1.3"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/util-hex-encoding@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-hex-encoding/-/util-hex-encoding-2.2.0.tgz"
+  integrity sha512-7iKXR+/4TpLK194pVjKiasIyqMtTYJsgKgM242Y9uzt5dhHnUDvMNb+3xIhRJ9QhvqGii/5cRUt4fJn3dtXNHQ==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-hex-encoding@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-hex-encoding/-/util-hex-encoding-4.0.0.tgz"
+  integrity sha512-Yk5mLhHtfIgW2W2WQZWSg5kuMZCVbvhFmC7rV4IO2QqnZdbEFPmQnCcGMAX2z/8Qj3B9hYYNjZOhWym+RwhePw==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-middleware@^2.0.0", "@smithy/util-middleware@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-middleware/-/util-middleware-2.2.0.tgz"
+  integrity sha512-L1qpleXf9QD6LwLCJ5jddGkgWyuSvWBkJwWAZ6kFkdifdso+sk3L3O1HdmPvCdnCK3IS4qWyPxev01QMnfHSBw==
+  dependencies:
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/util-middleware@^4.0.4":
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/@smithy/util-middleware/-/util-middleware-4.0.4.tgz"
+  integrity sha512-9MLKmkBmf4PRb0ONJikCbCwORACcil6gUWojwARCClT7RmLzF04hUR4WdRprIXal7XVyrddadYNfp2eF3nrvtQ==
+  dependencies:
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/util-retry@^2.0.0", "@smithy/util-retry@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-retry/-/util-retry-2.2.0.tgz"
+  integrity sha512-q9+pAFPTfftHXRytmZ7GzLFFrEGavqapFc06XxzZFcSIGERXMerXxCitjOG1prVDR9QdjqotF40SWvbqcCpf8g==
+  dependencies:
+    "@smithy/service-error-classification" "^2.1.5"
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/util-retry@^4.0.5":
+  version "4.0.5"
+  resolved "https://registry.npmjs.org/@smithy/util-retry/-/util-retry-4.0.5.tgz"
+  integrity sha512-V7MSjVDTlEt/plmOFBn1762Dyu5uqMrV2Pl2X0dYk4XvWfdWJNe9Bs5Bzb56wkCuiWjSfClVMGcsuKrGj7S/yg==
+  dependencies:
+    "@smithy/service-error-classification" "^4.0.5"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@smithy/util-stream@^2.0.5", "@smithy/util-stream@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-stream/-/util-stream-2.2.0.tgz"
+  integrity sha512-17faEXbYWIRst1aU9SvPZyMdWmqIrduZjVOqCPMIsWFNxs5yQQgFrJL6b2SdiCzyW9mJoDjFtgi53xx7EH+BXA==
+  dependencies:
+    "@smithy/fetch-http-handler" "^2.5.0"
+    "@smithy/node-http-handler" "^2.5.0"
+    "@smithy/types" "^2.12.0"
+    "@smithy/util-base64" "^2.3.0"
+    "@smithy/util-buffer-from" "^2.2.0"
+    "@smithy/util-hex-encoding" "^2.2.0"
+    "@smithy/util-utf8" "^2.3.0"
+    tslib "^2.6.2"
+
+"@smithy/util-stream@^4.2.2":
+  version "4.2.2"
+  resolved "https://registry.npmjs.org/@smithy/util-stream/-/util-stream-4.2.2.tgz"
+  integrity sha512-aI+GLi7MJoVxg24/3J1ipwLoYzgkB4kUfogZfnslcYlynj3xsQ0e7vk4TnTro9hhsS5PvX1mwmkRqqHQjwcU7w==
+  dependencies:
+    "@smithy/fetch-http-handler" "^5.0.4"
+    "@smithy/node-http-handler" "^4.0.6"
+    "@smithy/types" "^4.3.1"
+    "@smithy/util-base64" "^4.0.0"
+    "@smithy/util-buffer-from" "^4.0.0"
+    "@smithy/util-hex-encoding" "^4.0.0"
+    "@smithy/util-utf8" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/util-uri-escape@^2.2.0":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-uri-escape/-/util-uri-escape-2.2.0.tgz"
+  integrity sha512-jtmJMyt1xMD/d8OtbVJ2gFZOSKc+ueYJZPW20ULW1GOp/q/YIM0wNh+u8ZFao9UaIGz4WoPW8hC64qlWLIfoDA==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-uri-escape@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-uri-escape/-/util-uri-escape-4.0.0.tgz"
+  integrity sha512-77yfbCbQMtgtTylO9itEAdpPXSog3ZxMe09AEhm0dU0NLTalV70ghDZFR+Nfi1C60jnJoh/Re4090/DuZh2Omg==
+  dependencies:
+    tslib "^2.6.2"
+
+"@smithy/util-utf8@^2.0.0", "@smithy/util-utf8@^2.3.0":
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/@smithy/util-utf8/-/util-utf8-2.3.0.tgz"
+  integrity sha512-R8Rdn8Hy72KKcebgLiv8jQcQkXoLMOGGv5uI1/k0l+snqkOzQ1R0ChUBCxWMlBsFMekWjq0wRudIweFs7sKT5A==
+  dependencies:
+    "@smithy/util-buffer-from" "^2.2.0"
+    tslib "^2.6.2"
+
+"@smithy/util-utf8@^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/@smithy/util-utf8/-/util-utf8-4.0.0.tgz"
+  integrity sha512-b+zebfKCfRdgNJDknHCob3O7FpeYQN6ZG6YLExMcasDHsCXlsXCEuiPZeLnJLpwa5dvPetGlnGCiMHuLwGvFow==
+  dependencies:
+    "@smithy/util-buffer-from" "^4.0.0"
+    tslib "^2.6.2"
+
+"@smithy/util-waiter@^2.0.5":
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/@smithy/util-waiter/-/util-waiter-2.2.0.tgz"
+  integrity sha512-IHk53BVw6MPMi2Gsn+hCng8rFA3ZmR3Rk7GllxDUW9qFJl/hiSvskn7XldkECapQVkIg/1dHpMAxI9xSTaLLSA==
+  dependencies:
+    "@smithy/abort-controller" "^2.2.0"
+    "@smithy/types" "^2.12.0"
+    tslib "^2.6.2"
+
+"@smithy/util-waiter@^4.0.5":
+  version "4.0.5"
+  resolved "https://registry.npmjs.org/@smithy/util-waiter/-/util-waiter-4.0.5.tgz"
+  integrity sha512-4QvC49HTteI1gfemu0I1syWovJgPvGn7CVUoN9ZFkdvr/cCFkrEL7qNCdx/2eICqDWEGnnr68oMdSIPCLAriSQ==
+  dependencies:
+    "@smithy/abort-controller" "^4.0.4"
+    "@smithy/types" "^4.3.1"
+    tslib "^2.6.2"
+
+"@swc/counter@0.1.3":
+  version "0.1.3"
+  resolved "https://registry.npmjs.org/@swc/counter/-/counter-0.1.3.tgz"
+  integrity sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==
+
+"@swc/helpers@0.5.15":
+  version "0.5.15"
+  resolved "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz"
+  integrity sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==
+  dependencies:
+    tslib "^2.8.0"
+
+"@ts-morph/common@~0.24.0":
+  version "0.24.0"
+  resolved "https://registry.npmjs.org/@ts-morph/common/-/common-0.24.0.tgz"
+  integrity sha512-c1xMmNHWpNselmpIqursHeOHHBTIsJLbB+NuovbTTRCNiTLEr/U9dbJ8qy0jd/O2x5pc3seWuOUN5R2IoOTp8A==
+  dependencies:
+    fast-glob "^3.3.2"
+    minimatch "^9.0.4"
+    mkdirp "^3.0.1"
+    path-browserify "^1.0.1"
+
+"@tsconfig/node18@^1.0.1":
+  version "1.0.3"
+  resolved "https://registry.npmjs.org/@tsconfig/node18/-/node18-1.0.3.tgz"
+  integrity sha512-RbwvSJQsuN9TB04AQbGULYfOGE/RnSFk/FLQ5b0NmDf5Kx2q/lABZbHQPKCO1vZ6Fiwkplu+yb9pGdLy1iGseQ==
+
+"@types/d3-array@^3.0.3":
+  version "3.2.1"
+  resolved "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz"
+  integrity sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==
+
+"@types/d3-color@*":
+  version "3.1.3"
+  resolved "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz"
+  integrity sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==
+
+"@types/d3-ease@^3.0.0":
+  version "3.0.2"
+  resolved "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz"
+  integrity sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==
+
+"@types/d3-interpolate@^3.0.1":
+  version "3.0.4"
+  resolved "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz"
+  integrity sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==
+  dependencies:
+    "@types/d3-color" "*"
+
+"@types/d3-path@*":
+  version "3.1.1"
+  resolved "https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz"
+  integrity sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==
+
+"@types/d3-scale@^4.0.2":
+  version "4.0.9"
+  resolved "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz"
+  integrity sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==
+  dependencies:
+    "@types/d3-time" "*"
+
+"@types/d3-shape@^3.1.0":
+  version "3.1.7"
+  resolved "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz"
+  integrity sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==
+  dependencies:
+    "@types/d3-path" "*"
+
+"@types/d3-time@*", "@types/d3-time@^3.0.0":
+  version "3.0.4"
+  resolved "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz"
+  integrity sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==
+
+"@types/d3-timer@^3.0.0":
+  version "3.0.2"
+  resolved "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz"
+  integrity sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==
+
+"@types/estree@^1.0.6":
+  version "1.0.7"
+  resolved "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz"
+  integrity sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==
+
+"@types/json-schema@^7.0.15":
+  version "7.0.15"
+  resolved "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz"
+  integrity sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==
+
+"@types/json5@^0.0.29":
+  version "0.0.29"
+  resolved "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz"
+  integrity sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==
+
+"@types/node@^20":
+  version "20.17.58"
+  resolved "https://registry.npmjs.org/@types/node/-/node-20.17.58.tgz"
+  integrity sha512-UvxetCgGwZ9HmsgGZ2tpStt6CiFU1bu28ftHWpDyfthsCt7OHXas0C7j0VgO3gBq8UHKI785wXmtcQVhLekcRg==
+  dependencies:
+    undici-types "~6.19.2"
+
+"@types/react-dom@^19":
+  version "19.1.6"
+  resolved "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.6.tgz"
+  integrity sha512-4hOiT/dwO8Ko0gV1m/TJZYk3y0KBnY9vzDh7W+DH17b2HFSOGgdj33dhihPeuy3l0q23+4e+hoXHV6hCC4dCXw==
+
+"@types/react@^19":
+  version "19.1.6"
+  resolved "https://registry.npmjs.org/@types/react/-/react-19.1.6.tgz"
+  integrity sha512-JeG0rEWak0N6Itr6QUx+X60uQmN+5t3j9r/OVDtWzFXKaj6kD1BwJzOksD0FF6iWxZlbE1kB0q9vtnU2ekqa1Q==
+  dependencies:
+    csstype "^3.0.2"
+
+"@types/resolve@^1.17.1":
+  version "1.20.6"
+  resolved "https://registry.npmjs.org/@types/resolve/-/resolve-1.20.6.tgz"
+  integrity sha512-A4STmOXPhMUtHH+S6ymgE2GiBSMqf4oTvcQZMcHzokuTLVYzXTB8ttjcgxOVaAp2lGwEdzZ0J+cRbbeevQj1UQ==
+
+"@types/uuid@^9.0.1":
+  version "9.0.8"
+  resolved "https://registry.npmjs.org/@types/uuid/-/uuid-9.0.8.tgz"
+  integrity sha512-jg+97EGIcY9AGHJJRaaPVgetKDsrTgbRjQ5Msgjh/DQKEFl0DtyRr/VCOyD1T2R1MNeWPK/u7JoGhlDZnKBAfA==
+
+"@typescript-eslint/eslint-plugin@^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.33.1.tgz"
+  integrity sha512-TDCXj+YxLgtvxvFlAvpoRv9MAncDLBV2oT9Bd7YBGC/b/sEURoOYuIwLI99rjWOfY3QtDzO+mk0n4AmdFExW8A==
+  dependencies:
+    "@eslint-community/regexpp" "^4.10.0"
+    "@typescript-eslint/scope-manager" "8.33.1"
+    "@typescript-eslint/type-utils" "8.33.1"
+    "@typescript-eslint/utils" "8.33.1"
+    "@typescript-eslint/visitor-keys" "8.33.1"
+    graphemer "^1.4.0"
+    ignore "^7.0.0"
+    natural-compare "^1.4.0"
+    ts-api-utils "^2.1.0"
+
+"@typescript-eslint/parser@^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.33.1.tgz"
+  integrity sha512-qwxv6dq682yVvgKKp2qWwLgRbscDAYktPptK4JPojCwwi3R9cwrvIxS4lvBpzmcqzR4bdn54Z0IG1uHFskW4dA==
+  dependencies:
+    "@typescript-eslint/scope-manager" "8.33.1"
+    "@typescript-eslint/types" "8.33.1"
+    "@typescript-eslint/typescript-estree" "8.33.1"
+    "@typescript-eslint/visitor-keys" "8.33.1"
+    debug "^4.3.4"
+
+"@typescript-eslint/project-service@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.33.1.tgz"
+  integrity sha512-DZR0efeNklDIHHGRpMpR5gJITQpu6tLr9lDJnKdONTC7vvzOlLAG/wcfxcdxEWrbiZApcoBCzXqU/Z458Za5Iw==
+  dependencies:
+    "@typescript-eslint/tsconfig-utils" "^8.33.1"
+    "@typescript-eslint/types" "^8.33.1"
+    debug "^4.3.4"
+
+"@typescript-eslint/scope-manager@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.33.1.tgz"
+  integrity sha512-dM4UBtgmzHR9bS0Rv09JST0RcHYearoEoo3pG5B6GoTR9XcyeqX87FEhPo+5kTvVfKCvfHaHrcgeJQc6mrDKrA==
+  dependencies:
+    "@typescript-eslint/types" "8.33.1"
+    "@typescript-eslint/visitor-keys" "8.33.1"
+
+"@typescript-eslint/tsconfig-utils@^8.33.1", "@typescript-eslint/tsconfig-utils@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.33.1.tgz"
+  integrity sha512-STAQsGYbHCF0/e+ShUQ4EatXQ7ceh3fBCXkNU7/MZVKulrlq1usH7t2FhxvCpuCi5O5oi1vmVaAjrGeL71OK1g==
+
+"@typescript-eslint/type-utils@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.33.1.tgz"
+  integrity sha512-1cG37d9xOkhlykom55WVwG2QRNC7YXlxMaMzqw2uPeJixBFfKWZgaP/hjAObqMN/u3fr5BrTwTnc31/L9jQ2ww==
+  dependencies:
+    "@typescript-eslint/typescript-estree" "8.33.1"
+    "@typescript-eslint/utils" "8.33.1"
+    debug "^4.3.4"
+    ts-api-utils "^2.1.0"
+
+"@typescript-eslint/types@^8.33.1", "@typescript-eslint/types@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.33.1.tgz"
+  integrity sha512-xid1WfizGhy/TKMTwhtVOgalHwPtV8T32MS9MaH50Cwvz6x6YqRIPdD2WvW0XaqOzTV9p5xdLY0h/ZusU5Lokg==
+
+"@typescript-eslint/typescript-estree@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.33.1.tgz"
+  integrity sha512-+s9LYcT8LWjdYWu7IWs7FvUxpQ/DGkdjZeE/GGulHvv8rvYwQvVaUZ6DE+j5x/prADUgSbbCWZ2nPI3usuVeOA==
+  dependencies:
+    "@typescript-eslint/project-service" "8.33.1"
+    "@typescript-eslint/tsconfig-utils" "8.33.1"
+    "@typescript-eslint/types" "8.33.1"
+    "@typescript-eslint/visitor-keys" "8.33.1"
+    debug "^4.3.4"
+    fast-glob "^3.3.2"
+    is-glob "^4.0.3"
+    minimatch "^9.0.4"
+    semver "^7.6.0"
+    ts-api-utils "^2.1.0"
+
+"@typescript-eslint/utils@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.33.1.tgz"
+  integrity sha512-52HaBiEQUaRYqAXpfzWSR2U3gxk92Kw006+xZpElaPMg3C4PgM+A5LqwoQI1f9E5aZ/qlxAZxzm42WX+vn92SQ==
+  dependencies:
+    "@eslint-community/eslint-utils" "^4.7.0"
+    "@typescript-eslint/scope-manager" "8.33.1"
+    "@typescript-eslint/types" "8.33.1"
+    "@typescript-eslint/typescript-estree" "8.33.1"
+
+"@typescript-eslint/visitor-keys@8.33.1":
+  version "8.33.1"
+  resolved "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.33.1.tgz"
+  integrity sha512-3i8NrFcZeeDHJ+7ZUuDkGT+UHq+XoFGsymNK2jZCOHcfEzRQ0BdpRtdpSx/Iyf3MHLWIcLS0COuOPibKQboIiQ==
+  dependencies:
+    "@typescript-eslint/types" "8.33.1"
+    eslint-visitor-keys "^4.2.0"
+
+"@unrs/resolver-binding-darwin-arm64@1.7.11":
+  version "1.7.11"
+  resolved "https://registry.npmjs.org/@unrs/resolver-binding-darwin-arm64/-/resolver-binding-darwin-arm64-1.7.11.tgz"
+  integrity sha512-i3/wlWjQJXMh1uiGtiv7k1EYvrrS3L1hdwmWJJiz1D8jWy726YFYPIxQWbEIVPVAgrfRR0XNlLrTQwq17cuCGw==
+
+accepts@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/accepts/-/accepts-2.0.0.tgz"
+  integrity sha512-5cvg6CtKwfgdmVqY1WIiXKc3Q1bkRqGLi+2W/6ao+6Y7gu/RCwRuAhGEzh5B4KlszSuTLgZYuqFqo5bImjNKng==
+  dependencies:
+    mime-types "^3.0.0"
+    negotiator "^1.0.0"
+
+acorn-jsx@^5.3.2:
+  version "5.3.2"
+  resolved "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz"
+  integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==
+
+acorn-walk@8.3.2:
+  version "8.3.2"
+  resolved "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.2.tgz"
+  integrity sha512-cjkyv4OtNCIeqhHrfS81QWXoCBPExR/J62oyEqepVw8WaQeSqpW2uhuLPh1m9eWhDuOo/jUXVTlifvesOWp/4A==
+
+acorn@^8.14.0, acorn@^8.5.0:
+  version "8.14.1"
+  resolved "https://registry.npmjs.org/acorn/-/acorn-8.14.1.tgz"
+  integrity sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==
+
+acorn@8.14.0:
+  version "8.14.0"
+  resolved "https://registry.npmjs.org/acorn/-/acorn-8.14.0.tgz"
+  integrity sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==
+
+ajv@^6.12.4:
+  version "6.12.6"
+  resolved "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz"
+  integrity sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==
+  dependencies:
+    fast-deep-equal "^3.1.1"
+    fast-json-stable-stringify "^2.0.0"
+    json-schema-traverse "^0.4.1"
+    uri-js "^4.2.2"
+
+ansi-colors@^4.1.1:
+  version "4.1.3"
+  resolved "https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz"
+  integrity sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==
+
+ansi-regex@^5.0.1:
+  version "5.0.1"
+  resolved "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz"
+  integrity sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==
+
+ansi-regex@^6.0.1:
+  version "6.1.0"
+  resolved "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz"
+  integrity sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==
+
+ansi-styles@^4.0.0:
+  version "4.3.0"
+  resolved "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz"
+  integrity sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==
+  dependencies:
+    color-convert "^2.0.1"
+
+ansi-styles@^4.1.0:
+  version "4.3.0"
+  resolved "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz"
+  integrity sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==
+  dependencies:
+    color-convert "^2.0.1"
+
+ansi-styles@^6.1.0:
+  version "6.2.1"
+  resolved "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz"
+  integrity sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==
+
+any-promise@^1.0.0:
+  version "1.3.0"
+  resolved "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz"
+  integrity sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==
+
+anymatch@~3.1.2:
+  version "3.1.3"
+  resolved "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz"
+  integrity sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==
+  dependencies:
+    normalize-path "^3.0.0"
+    picomatch "^2.0.4"
+
+arg@^5.0.2:
+  version "5.0.2"
+  resolved "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz"
+  integrity sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==
+
+argparse@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz"
+  integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==
+
+aria-hidden@^1.1.1, aria-hidden@^1.2.4:
+  version "1.2.6"
+  resolved "https://registry.npmjs.org/aria-hidden/-/aria-hidden-1.2.6.tgz"
+  integrity sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==
+  dependencies:
+    tslib "^2.0.0"
+
+aria-query@^5.3.2:
+  version "5.3.2"
+  resolved "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz"
+  integrity sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==
+
+array-buffer-byte-length@^1.0.1, array-buffer-byte-length@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz"
+  integrity sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==
+  dependencies:
+    call-bound "^1.0.3"
+    is-array-buffer "^3.0.5"
+
+array-includes@^3.1.6, array-includes@^3.1.8:
+  version "3.1.9"
+  resolved "https://registry.npmjs.org/array-includes/-/array-includes-3.1.9.tgz"
+  integrity sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.4"
+    define-properties "^1.2.1"
+    es-abstract "^1.24.0"
+    es-object-atoms "^1.1.1"
+    get-intrinsic "^1.3.0"
+    is-string "^1.1.1"
+    math-intrinsics "^1.1.0"
+
+array.prototype.findlast@^1.2.5:
+  version "1.2.5"
+  resolved "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz"
+  integrity sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==
+  dependencies:
+    call-bind "^1.0.7"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.2"
+    es-errors "^1.3.0"
+    es-object-atoms "^1.0.0"
+    es-shim-unscopables "^1.0.2"
+
+array.prototype.findlastindex@^1.2.5:
+  version "1.2.6"
+  resolved "https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.6.tgz"
+  integrity sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.4"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.9"
+    es-errors "^1.3.0"
+    es-object-atoms "^1.1.1"
+    es-shim-unscopables "^1.1.0"
+
+array.prototype.flat@^1.3.1, array.prototype.flat@^1.3.2:
+  version "1.3.3"
+  resolved "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz"
+  integrity sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==
+  dependencies:
+    call-bind "^1.0.8"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.5"
+    es-shim-unscopables "^1.0.2"
+
+array.prototype.flatmap@^1.3.2, array.prototype.flatmap@^1.3.3:
+  version "1.3.3"
+  resolved "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz"
+  integrity sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==
+  dependencies:
+    call-bind "^1.0.8"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.5"
+    es-shim-unscopables "^1.0.2"
+
+array.prototype.tosorted@^1.1.4:
+  version "1.1.4"
+  resolved "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz"
+  integrity sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==
+  dependencies:
+    call-bind "^1.0.7"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.3"
+    es-errors "^1.3.0"
+    es-shim-unscopables "^1.0.2"
+
+arraybuffer.prototype.slice@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz"
+  integrity sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==
+  dependencies:
+    array-buffer-byte-length "^1.0.1"
+    call-bind "^1.0.8"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.5"
+    es-errors "^1.3.0"
+    get-intrinsic "^1.2.6"
+    is-array-buffer "^3.0.4"
+
+as-table@^1.0.36:
+  version "1.0.55"
+  resolved "https://registry.npmjs.org/as-table/-/as-table-1.0.55.tgz"
+  integrity sha512-xvsWESUJn0JN421Xb9MQw6AsMHRCUknCe0Wjlxvjud80mU4E6hQf1A6NzQKcYNmYw62MfzEtXc+badstZP3JpQ==
+  dependencies:
+    printable-characters "^1.0.42"
+
+ast-types-flow@^0.0.8:
+  version "0.0.8"
+  resolved "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz"
+  integrity sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==
+
+async-function@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz"
+  integrity sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==
+
+available-typed-arrays@^1.0.7:
+  version "1.0.7"
+  resolved "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz"
+  integrity sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==
+  dependencies:
+    possible-typed-array-names "^1.0.0"
+
+await-lock@^2.2.2:
+  version "2.2.2"
+  resolved "https://registry.npmjs.org/await-lock/-/await-lock-2.2.2.tgz"
+  integrity sha512-aDczADvlvTGajTDjcjpJMqRkOF6Qdz3YbPZm/PyW6tKPkx2hlYBzxMhEywM/tU72HrVZjgl5VCdRuMlA7pZ8Gw==
+
+aws4fetch@^1.0.18:
+  version "1.0.20"
+  resolved "https://registry.npmjs.org/aws4fetch/-/aws4fetch-1.0.20.tgz"
+  integrity sha512-/djoAN709iY65ETD6LKCtyyEI04XIBP5xVvfmNxsEP0uJB5tyaGBztSryRr4HqMStr9R06PisQE7m9zDTXKu6g==
+
+axe-core@^4.10.0:
+  version "4.10.3"
+  resolved "https://registry.npmjs.org/axe-core/-/axe-core-4.10.3.tgz"
+  integrity sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==
+
+axobject-query@^4.1.0:
+  version "4.1.0"
+  resolved "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz"
+  integrity sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==
+
+balanced-match@^1.0.0:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz"
+  integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
+
+binary-extensions@^2.0.0:
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz"
+  integrity sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==
+
+blake3-wasm@2.1.5:
+  version "2.1.5"
+  resolved "https://registry.npmjs.org/blake3-wasm/-/blake3-wasm-2.1.5.tgz"
+  integrity sha512-F1+K8EbfOZE49dtoPtmxUQrpXaBIl3ICvasLh+nJta0xkz+9kF/7uet9fLnwKqhDrmj6g+6K3Tw9yQPUg2ka5g==
+
+body-parser@^2.0.1:
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/body-parser/-/body-parser-2.2.0.tgz"
+  integrity sha512-02qvAaxv8tp7fBa/mw1ga98OGm+eCbqzJOKoRt70sLmfEEi+jyBYVTDGfCL/k06/4EMk/z01gCe7HoCH/f2LTg==
+  dependencies:
+    bytes "^3.1.2"
+    content-type "^1.0.5"
+    debug "^4.4.0"
+    http-errors "^2.0.0"
+    iconv-lite "^0.6.3"
+    on-finished "^2.4.1"
+    qs "^6.14.0"
+    raw-body "^3.0.0"
+    type-is "^2.0.0"
+
+bowser@^2.11.0:
+  version "2.11.0"
+  resolved "https://registry.npmjs.org/bowser/-/bowser-2.11.0.tgz"
+  integrity sha512-AlcaJBi/pqqJBIQ8U9Mcpc9i8Aqxn88Skv5d+xBX006BY5u8N3mGLHa5Lgppa7L/HfwgwLgZ6NYs+Ag6uUmJRA==
+
+brace-expansion@^1.1.7:
+  version "1.1.11"
+  resolved "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"
+  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
+  dependencies:
+    balanced-match "^1.0.0"
+    concat-map "0.0.1"
+
+brace-expansion@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz"
+  integrity sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==
+  dependencies:
+    balanced-match "^1.0.0"
+
+braces@^3.0.3, braces@~3.0.2:
+  version "3.0.3"
+  resolved "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz"
+  integrity sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==
+  dependencies:
+    fill-range "^7.1.1"
+
+buffer-from@^1.0.0:
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz"
+  integrity sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==
+
+busboy@1.6.0:
+  version "1.6.0"
+  resolved "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz"
+  integrity sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==
+  dependencies:
+    streamsearch "^1.1.0"
+
+bytes@^3.1.2, bytes@3.1.2:
+  version "3.1.2"
+  resolved "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz"
+  integrity sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==
+
+call-bind-apply-helpers@^1.0.0, call-bind-apply-helpers@^1.0.1, call-bind-apply-helpers@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz"
+  integrity sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==
+  dependencies:
+    es-errors "^1.3.0"
+    function-bind "^1.1.2"
+
+call-bind@^1.0.7, call-bind@^1.0.8:
+  version "1.0.8"
+  resolved "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz"
+  integrity sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==
+  dependencies:
+    call-bind-apply-helpers "^1.0.0"
+    es-define-property "^1.0.0"
+    get-intrinsic "^1.2.4"
+    set-function-length "^1.2.2"
+
+call-bound@^1.0.2, call-bound@^1.0.3, call-bound@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz"
+  integrity sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==
+  dependencies:
+    call-bind-apply-helpers "^1.0.2"
+    get-intrinsic "^1.3.0"
+
+callsites@^3.0.0:
+  version "3.1.0"
+  resolved "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz"
+  integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
+
+camelcase-css@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz"
+  integrity sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==
+
+caniuse-lite@^1.0.30001579:
+  version "1.0.30001721"
+  resolved "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001721.tgz"
+  integrity sha512-cOuvmUVtKrtEaoKiO0rSc29jcjwMwX5tOHDy4MgVFEWiUXj4uBMJkwI8MDySkgXidpMiHUcviogAvFi4pA2hDQ==
+
+caniuse-lite@1.0.30001281:
+  version "1.0.30001281"
+  resolved "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001281.tgz"
+  integrity sha512-1ktfDV2+4LYxOGeAZygMyvhiPBJKV1gsqPmfGGwRbwYOzDWbsQHgBFo+2lpRTMO2gWjPWJrCMLWa2fnSVnxn0A==
+
+chalk@^4.0.0:
+  version "4.1.2"
+  resolved "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz"
+  integrity sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==
+  dependencies:
+    ansi-styles "^4.1.0"
+    supports-color "^7.1.0"
+
+chalk@^5.3.0:
+  version "5.4.1"
+  resolved "https://registry.npmjs.org/chalk/-/chalk-5.4.1.tgz"
+  integrity sha512-zgVZuo2WcZgfUEmsn6eO3kINexW8RAE4maiQ8QNs8CtpPCSyMiYsULR3HQYkm3w8FIA3SberyMJMSldGsW+U3w==
+
+chokidar@^3.6.0:
+  version "3.6.0"
+  resolved "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz"
+  integrity sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==
+  dependencies:
+    anymatch "~3.1.2"
+    braces "~3.0.2"
+    glob-parent "~5.1.2"
+    is-binary-path "~2.1.0"
+    is-glob "~4.0.1"
+    normalize-path "~3.0.0"
+    readdirp "~3.6.0"
+  optionalDependencies:
+    fsevents "~2.3.2"
+
+class-variance-authority@^0.7.1:
+  version "0.7.1"
+  resolved "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.7.1.tgz"
+  integrity sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==
+  dependencies:
+    clsx "^2.1.1"
+
+client-only@0.0.1:
+  version "0.0.1"
+  resolved "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz"
+  integrity sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==
+
+clsx@^2.0.0, clsx@^2.1.1:
+  version "2.1.1"
+  resolved "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz"
+  integrity sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==
+
+cmdk@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/cmdk/-/cmdk-1.0.0.tgz"
+  integrity sha512-gDzVf0a09TvoJ5jnuPvygTB77+XdOSwEmJ88L6XPFPlv7T3RxbP9jgenfylrAMD0+Le1aO0nVjQUzl2g+vjz5Q==
+  dependencies:
+    "@radix-ui/react-dialog" "1.0.5"
+    "@radix-ui/react-primitive" "1.0.3"
+
+code-block-writer@^13.0.1:
+  version "13.0.3"
+  resolved "https://registry.npmjs.org/code-block-writer/-/code-block-writer-13.0.3.tgz"
+  integrity sha512-Oofo0pq3IKnsFtuHqSF7TqBfr71aeyZDVJ0HpmqB7FBM2qEigL0iPONSCZSO9pE9dZTAxANe5XHG9Uy0YMv8cg==
+
+color-convert@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz"
+  integrity sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==
+  dependencies:
+    color-name "~1.1.4"
+
+color-name@^1.0.0, color-name@~1.1.4:
+  version "1.1.4"
+  resolved "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz"
+  integrity sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==
+
+color-string@^1.9.0:
+  version "1.9.1"
+  resolved "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz"
+  integrity sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==
+  dependencies:
+    color-name "^1.0.0"
+    simple-swizzle "^0.2.2"
+
+color@^4.2.3:
+  version "4.2.3"
+  resolved "https://registry.npmjs.org/color/-/color-4.2.3.tgz"
+  integrity sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==
+  dependencies:
+    color-convert "^2.0.1"
+    color-string "^1.9.0"
+
+commander@^11.1.0:
+  version "11.1.0"
+  resolved "https://registry.npmjs.org/commander/-/commander-11.1.0.tgz"
+  integrity sha512-yPVavfyCcRhmorC7rWlkHn15b4wDVgVmBA7kV4QVBsF7kv/9TKJAbAXVTxvTnwP8HHKjRCJDClKbciiYS7p0DQ==
+
+commander@^2.20.0:
+  version "2.20.3"
+  resolved "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz"
+  integrity sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==
+
+commander@^4.0.0:
+  version "4.1.1"
+  resolved "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz"
+  integrity sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==
+
+concat-map@0.0.1:
+  version "0.0.1"
+  resolved "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz"
+  integrity sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==
+
+content-disposition@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/content-disposition/-/content-disposition-1.0.0.tgz"
+  integrity sha512-Au9nRL8VNUut/XSzbQA38+M78dzP4D+eqg3gfJHMIHHYa3bg067xj1KxMUWj+VULbiZMowKngFFbKczUrNJ1mg==
+  dependencies:
+    safe-buffer "5.2.1"
+
+content-type@^1.0.5, content-type@~1.0.4:
+  version "1.0.5"
+  resolved "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz"
+  integrity sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==
+
+cookie-signature@^1.2.1:
+  version "1.2.2"
+  resolved "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.2.2.tgz"
+  integrity sha512-D76uU73ulSXrD1UXF4KE2TMxVVwhsnCgfAyTg9k8P6KGZjlXKrOLe4dJQKI3Bxi5wjesZoFXJWElNWBjPZMbhg==
+
+cookie@^0.7.1, cookie@0.7.1:
+  version "0.7.1"
+  resolved "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz"
+  integrity sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==
+
+cross-spawn@^7.0.3, cross-spawn@^7.0.6:
+  version "7.0.6"
+  resolved "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz"
+  integrity sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==
+  dependencies:
+    path-key "^3.1.0"
+    shebang-command "^2.0.0"
+    which "^2.0.1"
+
+cssesc@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz"
+  integrity sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==
+
+csstype@^3.0.2:
+  version "3.1.3"
+  resolved "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz"
+  integrity sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==
+
+"custom_bluesky_client@file:/Users/gwyn/projects/OmniSky":
+  version "0.1.0"
+  resolved "file:"
+  dependencies:
+    "@atproto/api" "^0.15.6"
+    "@atproto/oauth-client-browser" "^0.3.16"
+    "@hookform/resolvers" "^3.10.0"
+    "@radix-ui/react-accordion" "^1.2.2"
+    "@radix-ui/react-alert-dialog" "^1.1.4"
+    "@radix-ui/react-aspect-ratio" "^1.1.1"
+    "@radix-ui/react-avatar" "^1.1.2"
+    "@radix-ui/react-checkbox" "^1.1.3"
+    "@radix-ui/react-collapsible" "^1.1.2"
+    "@radix-ui/react-context-menu" "^2.2.4"
+    "@radix-ui/react-dialog" "^1.1.4"
+    "@radix-ui/react-dropdown-menu" "^2.1.4"
+    "@radix-ui/react-hover-card" "^1.1.4"
+    "@radix-ui/react-label" "^2.1.1"
+    "@radix-ui/react-menubar" "^1.1.4"
+    "@radix-ui/react-navigation-menu" "^1.2.3"
+    "@radix-ui/react-popover" "^1.1.4"
+    "@radix-ui/react-progress" "^1.1.1"
+    "@radix-ui/react-radio-group" "^1.2.2"
+    "@radix-ui/react-scroll-area" "^1.2.2"
+    "@radix-ui/react-select" "^2.1.4"
+    "@radix-ui/react-separator" "^1.1.1"
+    "@radix-ui/react-slider" "^1.2.2"
+    "@radix-ui/react-slot" "^1.1.1"
+    "@radix-ui/react-switch" "^1.1.2"
+    "@radix-ui/react-tabs" "^1.1.2"
+    "@radix-ui/react-toast" "^1.2.4"
+    "@radix-ui/react-toggle" "^1.1.1"
+    "@radix-ui/react-toggle-group" "^1.1.1"
+    "@radix-ui/react-tooltip" "^1.1.6"
+    caniuse-lite "1.0.30001281"
+    class-variance-authority "^0.7.1"
+    clsx "^2.1.1"
+    cmdk "1.0.0"
+    date-fns "^3.6.0"
+    embla-carousel-react "^8.5.2"
+    input-otp "^1.4.2"
+    lucide-react "^0.364.0"
+    next "15.1.4"
+    next-themes "^0.4.4"
+    react "^19.0.0"
+    react-day-picker "8.10.1"
+    react-dom "^19.0.0"
+    react-hook-form "^7.54.2"
+    react-resizable-panels "^2.1.7"
+    recharts "^2.12.4"
+    sonner "^1.7.2"
+    tailwind-merge "^2.6.0"
+    tailwindcss-animate "^1.0.7"
+    vaul "^1.1.2"
+    zod "^3.24.1"
+
+d3-array@^3.1.6, "d3-array@2 - 3", "d3-array@2.10.0 - 3":
+  version "3.2.4"
+  resolved "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz"
+  integrity sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==
+  dependencies:
+    internmap "1 - 2"
+
+"d3-color@1 - 3":
+  version "3.1.0"
+  resolved "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz"
+  integrity sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==
+
+d3-ease@^3.0.1:
+  version "3.0.1"
+  resolved "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz"
+  integrity sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==
+
+"d3-format@1 - 3":
+  version "3.1.0"
+  resolved "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz"
+  integrity sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==
+
+d3-interpolate@^3.0.1, "d3-interpolate@1.2.0 - 3":
+  version "3.0.1"
+  resolved "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz"
+  integrity sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==
+  dependencies:
+    d3-color "1 - 3"
+
+d3-path@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz"
+  integrity sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==
+
+d3-scale@^4.0.2:
+  version "4.0.2"
+  resolved "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz"
+  integrity sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==
+  dependencies:
+    d3-array "2.10.0 - 3"
+    d3-format "1 - 3"
+    d3-interpolate "1.2.0 - 3"
+    d3-time "2.1.1 - 3"
+    d3-time-format "2 - 4"
+
+d3-shape@^3.1.0:
+  version "3.2.0"
+  resolved "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz"
+  integrity sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==
+  dependencies:
+    d3-path "^3.1.0"
+
+"d3-time-format@2 - 4":
+  version "4.1.0"
+  resolved "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz"
+  integrity sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==
+  dependencies:
+    d3-time "1 - 3"
+
+d3-time@^3.0.0, "d3-time@1 - 3", "d3-time@2.1.1 - 3":
+  version "3.1.0"
+  resolved "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz"
+  integrity sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==
+  dependencies:
+    d3-array "2 - 3"
+
+d3-timer@^3.0.1:
+  version "3.0.1"
+  resolved "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz"
+  integrity sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==
+
+damerau-levenshtein@^1.0.8:
+  version "1.0.8"
+  resolved "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz"
+  integrity sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==
+
+data-uri-to-buffer@^2.0.0:
+  version "2.0.2"
+  resolved "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-2.0.2.tgz"
+  integrity sha512-ND9qDTLc6diwj+Xe5cdAgVTbLVdXbtxTJRXRhli8Mowuaan+0EJOtdqJ0QCHNSSPyoXGx9HX2/VMnKeC34AChA==
+
+data-view-buffer@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz"
+  integrity sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==
+  dependencies:
+    call-bound "^1.0.3"
+    es-errors "^1.3.0"
+    is-data-view "^1.0.2"
+
+data-view-byte-length@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz"
+  integrity sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==
+  dependencies:
+    call-bound "^1.0.3"
+    es-errors "^1.3.0"
+    is-data-view "^1.0.2"
+
+data-view-byte-offset@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz"
+  integrity sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==
+  dependencies:
+    call-bound "^1.0.2"
+    es-errors "^1.3.0"
+    is-data-view "^1.0.1"
+
+date-fns@^3.6.0:
+  version "3.6.0"
+  resolved "https://registry.npmjs.org/date-fns/-/date-fns-3.6.0.tgz"
+  integrity sha512-fRHTG8g/Gif+kSh50gaGEdToemgfj74aRX3swtiouboip5JDLAyDE9F11nHMIcvOaXeOC6D7SpNhi7uFyB7Uww==
+
+debug@^3.2.7:
+  version "3.2.7"
+  resolved "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz"
+  integrity sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==
+  dependencies:
+    ms "^2.1.1"
+
+debug@^4.3.1, debug@^4.3.2, debug@^4.3.4, debug@^4.3.5, debug@^4.4.0:
+  version "4.4.1"
+  resolved "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz"
+  integrity sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==
+  dependencies:
+    ms "^2.1.3"
+
+debug@4.3.6:
+  version "4.3.6"
+  resolved "https://registry.npmjs.org/debug/-/debug-4.3.6.tgz"
+  integrity sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==
+  dependencies:
+    ms "2.1.2"
+
+decimal.js-light@^2.4.1:
+  version "2.5.1"
+  resolved "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz"
+  integrity sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==
+
+deep-is@^0.1.3:
+  version "0.1.4"
+  resolved "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz"
+  integrity sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==
+
+define-data-property@^1.0.1, define-data-property@^1.1.4:
+  version "1.1.4"
+  resolved "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz"
+  integrity sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==
+  dependencies:
+    es-define-property "^1.0.0"
+    es-errors "^1.3.0"
+    gopd "^1.0.1"
+
+define-properties@^1.1.3, define-properties@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz"
+  integrity sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==
+  dependencies:
+    define-data-property "^1.0.1"
+    has-property-descriptors "^1.0.0"
+    object-keys "^1.1.1"
+
+defu@^6.1.4:
+  version "6.1.4"
+  resolved "https://registry.npmjs.org/defu/-/defu-6.1.4.tgz"
+  integrity sha512-mEQCMmwJu317oSz8CwdIOdwf3xMif1ttiM8LTufzc3g6kR+9Pe236twL8j3IYT1F7GfRgGcW6MWxzZjLIkuHIg==
+
+depd@^2.0.0, depd@2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz"
+  integrity sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==
+
+detect-libc@^2.0.3:
+  version "2.0.4"
+  resolved "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz"
+  integrity sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==
+
+detect-node-es@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/detect-node-es/-/detect-node-es-1.1.0.tgz"
+  integrity sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==
+
+didyoumean@^1.2.2:
+  version "1.2.2"
+  resolved "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz"
+  integrity sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==
+
+dlv@^1.1.3:
+  version "1.1.3"
+  resolved "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz"
+  integrity sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==
+
+doctrine@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz"
+  integrity sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==
+  dependencies:
+    esutils "^2.0.2"
+
+dom-helpers@^5.0.1:
+  version "5.2.1"
+  resolved "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz"
+  integrity sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==
+  dependencies:
+    "@babel/runtime" "^7.8.7"
+    csstype "^3.0.2"
+
+dotenv@^16.4.5:
+  version "16.5.0"
+  resolved "https://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgz"
+  integrity sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==
+
+dunder-proto@^1.0.0, dunder-proto@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz"
+  integrity sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==
+  dependencies:
+    call-bind-apply-helpers "^1.0.1"
+    es-errors "^1.3.0"
+    gopd "^1.2.0"
+
+duplexer@^0.1.2:
+  version "0.1.2"
+  resolved "https://registry.npmjs.org/duplexer/-/duplexer-0.1.2.tgz"
+  integrity sha512-jtD6YG370ZCIi/9GTaJKQxWTZD045+4R4hTk/x1UyoqadyJ9x9CgSi1RlVDQF8U2sxLLSnFkCaMihqljHIWgMg==
+
+eastasianwidth@^0.2.0:
+  version "0.2.0"
+  resolved "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz"
+  integrity sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==
+
+eciesjs@^0.4.10:
+  version "0.4.15"
+  resolved "https://registry.npmjs.org/eciesjs/-/eciesjs-0.4.15.tgz"
+  integrity sha512-r6kEJXDKecVOCj2nLMuXK/FCPeurW33+3JRpfXVbjLja3XUYFfD9I/JBreH6sUyzcm3G/YQboBjMla6poKeSdA==
+  dependencies:
+    "@ecies/ciphers" "^0.2.3"
+    "@noble/ciphers" "^1.3.0"
+    "@noble/curves" "^1.9.1"
+    "@noble/hashes" "^1.8.0"
+
+ee-first@1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz"
+  integrity sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==
+
+embla-carousel-react@^8.5.2:
+  version "8.6.0"
+  resolved "https://registry.npmjs.org/embla-carousel-react/-/embla-carousel-react-8.6.0.tgz"
+  integrity sha512-0/PjqU7geVmo6F734pmPqpyHqiM99olvyecY7zdweCw+6tKEXnrE90pBiBbMMU8s5tICemzpQ3hi5EpxzGW+JA==
+  dependencies:
+    embla-carousel "8.6.0"
+    embla-carousel-reactive-utils "8.6.0"
+
+embla-carousel-reactive-utils@8.6.0:
+  version "8.6.0"
+  resolved "https://registry.npmjs.org/embla-carousel-reactive-utils/-/embla-carousel-reactive-utils-8.6.0.tgz"
+  integrity sha512-fMVUDUEx0/uIEDM0Mz3dHznDhfX+znCCDCeIophYb1QGVM7YThSWX+wz11zlYwWFOr74b4QLGg0hrGPJeG2s4A==
+
+embla-carousel@8.6.0:
+  version "8.6.0"
+  resolved "https://registry.npmjs.org/embla-carousel/-/embla-carousel-8.6.0.tgz"
+  integrity sha512-SjWyZBHJPbqxHOzckOfo8lHisEaJWmwd23XppYFYVh10bU66/Pn5tkVkbkCMZVdbUE5eTCI2nD8OyIP4Z+uwkA==
+
+emoji-regex@^8.0.0:
+  version "8.0.0"
+  resolved "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz"
+  integrity sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==
+
+emoji-regex@^9.2.2:
+  version "9.2.2"
+  resolved "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz"
+  integrity sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==
+
+encodeurl@^2.0.0, encodeurl@~2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz"
+  integrity sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==
+
+enquirer@^2.4.1:
+  version "2.4.1"
+  resolved "https://registry.npmjs.org/enquirer/-/enquirer-2.4.1.tgz"
+  integrity sha512-rRqJg/6gd538VHvR3PSrdRBb/1Vy2YfzHqzvbhGIQpDRKIa4FgV/54b5Q1xYSxOOwKvjXweS26E0Q+nAMwp2pQ==
+  dependencies:
+    ansi-colors "^4.1.1"
+    strip-ansi "^6.0.1"
+
+es-abstract@^1.17.5, es-abstract@^1.23.2, es-abstract@^1.23.3, es-abstract@^1.23.5, es-abstract@^1.23.6, es-abstract@^1.23.9, es-abstract@^1.24.0:
+  version "1.24.0"
+  resolved "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz"
+  integrity sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==
+  dependencies:
+    array-buffer-byte-length "^1.0.2"
+    arraybuffer.prototype.slice "^1.0.4"
+    available-typed-arrays "^1.0.7"
+    call-bind "^1.0.8"
+    call-bound "^1.0.4"
+    data-view-buffer "^1.0.2"
+    data-view-byte-length "^1.0.2"
+    data-view-byte-offset "^1.0.1"
+    es-define-property "^1.0.1"
+    es-errors "^1.3.0"
+    es-object-atoms "^1.1.1"
+    es-set-tostringtag "^2.1.0"
+    es-to-primitive "^1.3.0"
+    function.prototype.name "^1.1.8"
+    get-intrinsic "^1.3.0"
+    get-proto "^1.0.1"
+    get-symbol-description "^1.1.0"
+    globalthis "^1.0.4"
+    gopd "^1.2.0"
+    has-property-descriptors "^1.0.2"
+    has-proto "^1.2.0"
+    has-symbols "^1.1.0"
+    hasown "^2.0.2"
+    internal-slot "^1.1.0"
+    is-array-buffer "^3.0.5"
+    is-callable "^1.2.7"
+    is-data-view "^1.0.2"
+    is-negative-zero "^2.0.3"
+    is-regex "^1.2.1"
+    is-set "^2.0.3"
+    is-shared-array-buffer "^1.0.4"
+    is-string "^1.1.1"
+    is-typed-array "^1.1.15"
+    is-weakref "^1.1.1"
+    math-intrinsics "^1.1.0"
+    object-inspect "^1.13.4"
+    object-keys "^1.1.1"
+    object.assign "^4.1.7"
+    own-keys "^1.0.1"
+    regexp.prototype.flags "^1.5.4"
+    safe-array-concat "^1.1.3"
+    safe-push-apply "^1.0.0"
+    safe-regex-test "^1.1.0"
+    set-proto "^1.0.0"
+    stop-iteration-iterator "^1.1.0"
+    string.prototype.trim "^1.2.10"
+    string.prototype.trimend "^1.0.9"
+    string.prototype.trimstart "^1.0.8"
+    typed-array-buffer "^1.0.3"
+    typed-array-byte-length "^1.0.3"
+    typed-array-byte-offset "^1.0.4"
+    typed-array-length "^1.0.7"
+    unbox-primitive "^1.1.0"
+    which-typed-array "^1.1.19"
+
+es-define-property@^1.0.0, es-define-property@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz"
+  integrity sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==
+
+es-errors@^1.3.0:
+  version "1.3.0"
+  resolved "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz"
+  integrity sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==
+
+es-iterator-helpers@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz"
+  integrity sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.3"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.6"
+    es-errors "^1.3.0"
+    es-set-tostringtag "^2.0.3"
+    function-bind "^1.1.2"
+    get-intrinsic "^1.2.6"
+    globalthis "^1.0.4"
+    gopd "^1.2.0"
+    has-property-descriptors "^1.0.2"
+    has-proto "^1.2.0"
+    has-symbols "^1.1.0"
+    internal-slot "^1.1.0"
+    iterator.prototype "^1.1.4"
+    safe-array-concat "^1.1.3"
+
+es-object-atoms@^1.0.0, es-object-atoms@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz"
+  integrity sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==
+  dependencies:
+    es-errors "^1.3.0"
+
+es-set-tostringtag@^2.0.3, es-set-tostringtag@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz"
+  integrity sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==
+  dependencies:
+    es-errors "^1.3.0"
+    get-intrinsic "^1.2.6"
+    has-tostringtag "^1.0.2"
+    hasown "^2.0.2"
+
+es-shim-unscopables@^1.0.2, es-shim-unscopables@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz"
+  integrity sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==
+  dependencies:
+    hasown "^2.0.2"
+
+es-to-primitive@^1.3.0:
+  version "1.3.0"
+  resolved "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz"
+  integrity sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==
+  dependencies:
+    is-callable "^1.2.7"
+    is-date-object "^1.0.5"
+    is-symbol "^1.0.4"
+
+esbuild@0.17.19:
+  version "0.17.19"
+  resolved "https://registry.npmjs.org/esbuild/-/esbuild-0.17.19.tgz"
+  integrity sha512-XQ0jAPFkK/u3LcVRcvVHQcTIqD6E2H1fvZMA5dQPSOWb3suUbWbfbRf94pjc0bNzRYLfIrDRQXr7X+LHIm5oHw==
+  optionalDependencies:
+    "@esbuild/android-arm" "0.17.19"
+    "@esbuild/android-arm64" "0.17.19"
+    "@esbuild/android-x64" "0.17.19"
+    "@esbuild/darwin-arm64" "0.17.19"
+    "@esbuild/darwin-x64" "0.17.19"
+    "@esbuild/freebsd-arm64" "0.17.19"
+    "@esbuild/freebsd-x64" "0.17.19"
+    "@esbuild/linux-arm" "0.17.19"
+    "@esbuild/linux-arm64" "0.17.19"
+    "@esbuild/linux-ia32" "0.17.19"
+    "@esbuild/linux-loong64" "0.17.19"
+    "@esbuild/linux-mips64el" "0.17.19"
+    "@esbuild/linux-ppc64" "0.17.19"
+    "@esbuild/linux-riscv64" "0.17.19"
+    "@esbuild/linux-s390x" "0.17.19"
+    "@esbuild/linux-x64" "0.17.19"
+    "@esbuild/netbsd-x64" "0.17.19"
+    "@esbuild/openbsd-x64" "0.17.19"
+    "@esbuild/sunos-x64" "0.17.19"
+    "@esbuild/win32-arm64" "0.17.19"
+    "@esbuild/win32-ia32" "0.17.19"
+    "@esbuild/win32-x64" "0.17.19"
+
+esbuild@0.19.2:
+  version "0.19.2"
+  resolved "https://registry.npmjs.org/esbuild/-/esbuild-0.19.2.tgz"
+  integrity sha512-G6hPax8UbFakEj3hWO0Vs52LQ8k3lnBhxZWomUJDxfz3rZTLqF5k/FCzuNdLx2RbpBiQQF9H9onlDDH1lZsnjg==
+  optionalDependencies:
+    "@esbuild/android-arm" "0.19.2"
+    "@esbuild/android-arm64" "0.19.2"
+    "@esbuild/android-x64" "0.19.2"
+    "@esbuild/darwin-arm64" "0.19.2"
+    "@esbuild/darwin-x64" "0.19.2"
+    "@esbuild/freebsd-arm64" "0.19.2"
+    "@esbuild/freebsd-x64" "0.19.2"
+    "@esbuild/linux-arm" "0.19.2"
+    "@esbuild/linux-arm64" "0.19.2"
+    "@esbuild/linux-ia32" "0.19.2"
+    "@esbuild/linux-loong64" "0.19.2"
+    "@esbuild/linux-mips64el" "0.19.2"
+    "@esbuild/linux-ppc64" "0.19.2"
+    "@esbuild/linux-riscv64" "0.19.2"
+    "@esbuild/linux-s390x" "0.19.2"
+    "@esbuild/linux-x64" "0.19.2"
+    "@esbuild/netbsd-x64" "0.19.2"
+    "@esbuild/openbsd-x64" "0.19.2"
+    "@esbuild/sunos-x64" "0.19.2"
+    "@esbuild/win32-arm64" "0.19.2"
+    "@esbuild/win32-ia32" "0.19.2"
+    "@esbuild/win32-x64" "0.19.2"
+
+escape-html@^1.0.3, escape-html@~1.0.3:
+  version "1.0.3"
+  resolved "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz"
+  integrity sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==
+
+escape-string-regexp@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz"
+  integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==
+
+eslint-config-next@15.1.4:
+  version "15.1.4"
+  resolved "https://registry.npmjs.org/eslint-config-next/-/eslint-config-next-15.1.4.tgz"
+  integrity sha512-u9+7lFmfhKNgGjhQ9tBeyCFsPJyq0SvGioMJBngPC7HXUpR0U+ckEwQR48s7TrRNHra1REm6evGL2ie38agALg==
+  dependencies:
+    "@next/eslint-plugin-next" "15.1.4"
+    "@rushstack/eslint-patch" "^1.10.3"
+    "@typescript-eslint/eslint-plugin" "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"
+    "@typescript-eslint/parser" "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"
+    eslint-import-resolver-node "^0.3.6"
+    eslint-import-resolver-typescript "^3.5.2"
+    eslint-plugin-import "^2.31.0"
+    eslint-plugin-jsx-a11y "^6.10.0"
+    eslint-plugin-react "^7.37.0"
+    eslint-plugin-react-hooks "^5.0.0"
+
+eslint-import-resolver-node@^0.3.6, eslint-import-resolver-node@^0.3.9:
+  version "0.3.9"
+  resolved "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz"
+  integrity sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==
+  dependencies:
+    debug "^3.2.7"
+    is-core-module "^2.13.0"
+    resolve "^1.22.4"
+
+eslint-import-resolver-typescript@^3.5.2:
+  version "3.10.1"
+  resolved "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-3.10.1.tgz"
+  integrity sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==
+  dependencies:
+    "@nolyfill/is-core-module" "1.0.39"
+    debug "^4.4.0"
+    get-tsconfig "^4.10.0"
+    is-bun-module "^2.0.0"
+    stable-hash "^0.0.5"
+    tinyglobby "^0.2.13"
+    unrs-resolver "^1.6.2"
+
+eslint-module-utils@^2.12.0:
+  version "2.12.0"
+  resolved "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.12.0.tgz"
+  integrity sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==
+  dependencies:
+    debug "^3.2.7"
+
+eslint-plugin-import@^2.31.0:
+  version "2.31.0"
+  resolved "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.31.0.tgz"
+  integrity sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==
+  dependencies:
+    "@rtsao/scc" "^1.1.0"
+    array-includes "^3.1.8"
+    array.prototype.findlastindex "^1.2.5"
+    array.prototype.flat "^1.3.2"
+    array.prototype.flatmap "^1.3.2"
+    debug "^3.2.7"
+    doctrine "^2.1.0"
+    eslint-import-resolver-node "^0.3.9"
+    eslint-module-utils "^2.12.0"
+    hasown "^2.0.2"
+    is-core-module "^2.15.1"
+    is-glob "^4.0.3"
+    minimatch "^3.1.2"
+    object.fromentries "^2.0.8"
+    object.groupby "^1.0.3"
+    object.values "^1.2.0"
+    semver "^6.3.1"
+    string.prototype.trimend "^1.0.8"
+    tsconfig-paths "^3.15.0"
+
+eslint-plugin-jsx-a11y@^6.10.0:
+  version "6.10.2"
+  resolved "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.10.2.tgz"
+  integrity sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==
+  dependencies:
+    aria-query "^5.3.2"
+    array-includes "^3.1.8"
+    array.prototype.flatmap "^1.3.2"
+    ast-types-flow "^0.0.8"
+    axe-core "^4.10.0"
+    axobject-query "^4.1.0"
+    damerau-levenshtein "^1.0.8"
+    emoji-regex "^9.2.2"
+    hasown "^2.0.2"
+    jsx-ast-utils "^3.3.5"
+    language-tags "^1.0.9"
+    minimatch "^3.1.2"
+    object.fromentries "^2.0.8"
+    safe-regex-test "^1.0.3"
+    string.prototype.includes "^2.0.1"
+
+eslint-plugin-react-hooks@^5.0.0:
+  version "5.2.0"
+  resolved "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz"
+  integrity sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==
+
+eslint-plugin-react@^7.37.0:
+  version "7.37.5"
+  resolved "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz"
+  integrity sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==
+  dependencies:
+    array-includes "^3.1.8"
+    array.prototype.findlast "^1.2.5"
+    array.prototype.flatmap "^1.3.3"
+    array.prototype.tosorted "^1.1.4"
+    doctrine "^2.1.0"
+    es-iterator-helpers "^1.2.1"
+    estraverse "^5.3.0"
+    hasown "^2.0.2"
+    jsx-ast-utils "^2.4.1 || ^3.0.0"
+    minimatch "^3.1.2"
+    object.entries "^1.1.9"
+    object.fromentries "^2.0.8"
+    object.values "^1.2.1"
+    prop-types "^15.8.1"
+    resolve "^2.0.0-next.5"
+    semver "^6.3.1"
+    string.prototype.matchall "^4.0.12"
+    string.prototype.repeat "^1.0.0"
+
+eslint-scope@^8.3.0:
+  version "8.3.0"
+  resolved "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.3.0.tgz"
+  integrity sha512-pUNxi75F8MJ/GdeKtVLSbYg4ZI34J6C0C7sbL4YOp2exGwen7ZsuBqKzUhXd0qMQ362yET3z+uPwKeg/0C2XCQ==
+  dependencies:
+    esrecurse "^4.3.0"
+    estraverse "^5.2.0"
+
+eslint-visitor-keys@^3.4.3:
+  version "3.4.3"
+  resolved "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz"
+  integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==
+
+eslint-visitor-keys@^4.2.0:
+  version "4.2.0"
+  resolved "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz"
+  integrity sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==
+
+eslint@^9:
+  version "9.28.0"
+  resolved "https://registry.npmjs.org/eslint/-/eslint-9.28.0.tgz"
+  integrity sha512-ocgh41VhRlf9+fVpe7QKzwLj9c92fDiqOj8Y3Sd4/ZmVA4Btx4PlUYPq4pp9JDyupkf1upbEXecxL2mwNV7jPQ==
+  dependencies:
+    "@eslint-community/eslint-utils" "^4.2.0"
+    "@eslint-community/regexpp" "^4.12.1"
+    "@eslint/config-array" "^0.20.0"
+    "@eslint/config-helpers" "^0.2.1"
+    "@eslint/core" "^0.14.0"
+    "@eslint/eslintrc" "^3.3.1"
+    "@eslint/js" "9.28.0"
+    "@eslint/plugin-kit" "^0.3.1"
+    "@humanfs/node" "^0.16.6"
+    "@humanwhocodes/module-importer" "^1.0.1"
+    "@humanwhocodes/retry" "^0.4.2"
+    "@types/estree" "^1.0.6"
+    "@types/json-schema" "^7.0.15"
+    ajv "^6.12.4"
+    chalk "^4.0.0"
+    cross-spawn "^7.0.6"
+    debug "^4.3.2"
+    escape-string-regexp "^4.0.0"
+    eslint-scope "^8.3.0"
+    eslint-visitor-keys "^4.2.0"
+    espree "^10.3.0"
+    esquery "^1.5.0"
+    esutils "^2.0.2"
+    fast-deep-equal "^3.1.3"
+    file-entry-cache "^8.0.0"
+    find-up "^5.0.0"
+    glob-parent "^6.0.2"
+    ignore "^5.2.0"
+    imurmurhash "^0.1.4"
+    is-glob "^4.0.0"
+    json-stable-stringify-without-jsonify "^1.0.1"
+    lodash.merge "^4.6.2"
+    minimatch "^3.1.2"
+    natural-compare "^1.4.0"
+    optionator "^0.9.3"
+
+espree@^10.0.1, espree@^10.3.0:
+  version "10.3.0"
+  resolved "https://registry.npmjs.org/espree/-/espree-10.3.0.tgz"
+  integrity sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==
+  dependencies:
+    acorn "^8.14.0"
+    acorn-jsx "^5.3.2"
+    eslint-visitor-keys "^4.2.0"
+
+esquery@^1.5.0:
+  version "1.6.0"
+  resolved "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz"
+  integrity sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==
+  dependencies:
+    estraverse "^5.1.0"
+
+esrecurse@^4.3.0:
+  version "4.3.0"
+  resolved "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz"
+  integrity sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==
+  dependencies:
+    estraverse "^5.2.0"
+
+estraverse@^5.1.0, estraverse@^5.2.0, estraverse@^5.3.0:
+  version "5.3.0"
+  resolved "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz"
+  integrity sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==
+
+estree-walker@^0.6.1:
+  version "0.6.1"
+  resolved "https://registry.npmjs.org/estree-walker/-/estree-walker-0.6.1.tgz"
+  integrity sha512-SqmZANLWS0mnatqbSfRP5g8OXZC12Fgg1IwNtLsyHDzJizORW4khDfjPqJZsemPWBB2uqykUah5YpQ6epsqC/w==
+
+esutils@^2.0.2:
+  version "2.0.3"
+  resolved "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz"
+  integrity sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==
+
+etag@^1.8.1, etag@~1.8.1:
+  version "1.8.1"
+  resolved "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz"
+  integrity sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==
+
+eventemitter3@^4.0.1:
+  version "4.0.7"
+  resolved "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz"
+  integrity sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==
+
+execa@^5.1.1:
+  version "5.1.1"
+  resolved "https://registry.npmjs.org/execa/-/execa-5.1.1.tgz"
+  integrity sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==
+  dependencies:
+    cross-spawn "^7.0.3"
+    get-stream "^6.0.0"
+    human-signals "^2.1.0"
+    is-stream "^2.0.0"
+    merge-stream "^2.0.0"
+    npm-run-path "^4.0.1"
+    onetime "^5.1.2"
+    signal-exit "^3.0.3"
+    strip-final-newline "^2.0.0"
+
+exit-hook@2.2.1:
+  version "2.2.1"
+  resolved "https://registry.npmjs.org/exit-hook/-/exit-hook-2.2.1.tgz"
+  integrity sha512-eNTPlAD67BmP31LDINZ3U7HSF8l57TxOY2PmBJ1shpCvpnxBF93mWCE8YHBnXs8qiUZJc9WDcWIeC3a2HIAMfw==
+
+express@5.0.1:
+  version "5.0.1"
+  resolved "https://registry.npmjs.org/express/-/express-5.0.1.tgz"
+  integrity sha512-ORF7g6qGnD+YtUG9yx4DFoqCShNMmUKiXuT5oWMHiOvt/4WFbHC6yCwQMTSBMno7AqntNCAzzcnnjowRkTL9eQ==
+  dependencies:
+    accepts "^2.0.0"
+    body-parser "^2.0.1"
+    content-disposition "^1.0.0"
+    content-type "~1.0.4"
+    cookie "0.7.1"
+    cookie-signature "^1.2.1"
+    debug "4.3.6"
+    depd "2.0.0"
+    encodeurl "~2.0.0"
+    escape-html "~1.0.3"
+    etag "~1.8.1"
+    finalhandler "^2.0.0"
+    fresh "2.0.0"
+    http-errors "2.0.0"
+    merge-descriptors "^2.0.0"
+    methods "~1.1.2"
+    mime-types "^3.0.0"
+    on-finished "2.4.1"
+    once "1.4.0"
+    parseurl "~1.3.3"
+    proxy-addr "~2.0.7"
+    qs "6.13.0"
+    range-parser "~1.2.1"
+    router "^2.0.0"
+    safe-buffer "5.2.1"
+    send "^1.1.0"
+    serve-static "^2.1.0"
+    setprototypeof "1.2.0"
+    statuses "2.0.1"
+    type-is "^2.0.0"
+    utils-merge "1.0.1"
+    vary "~1.1.2"
+
+exsolve@^1.0.1:
+  version "1.0.5"
+  resolved "https://registry.npmjs.org/exsolve/-/exsolve-1.0.5.tgz"
+  integrity sha512-pz5dvkYYKQ1AHVrgOzBKWeP4u4FRb3a6DNK2ucr0OoNwYIU4QWsJ+NM36LLzORT+z845MzKHHhpXiUF5nvQoJg==
+
+fast-deep-equal@^3.1.1, fast-deep-equal@^3.1.3:
+  version "3.1.3"
+  resolved "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz"
+  integrity sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==
+
+fast-equals@^5.0.1:
+  version "5.2.2"
+  resolved "https://registry.npmjs.org/fast-equals/-/fast-equals-5.2.2.tgz"
+  integrity sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==
+
+fast-glob@^3.3.2:
+  version "3.3.3"
+  resolved "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz"
+  integrity sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==
+  dependencies:
+    "@nodelib/fs.stat" "^2.0.2"
+    "@nodelib/fs.walk" "^1.2.3"
+    glob-parent "^5.1.2"
+    merge2 "^1.3.0"
+    micromatch "^4.0.8"
+
+fast-glob@3.3.1:
+  version "3.3.1"
+  resolved "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.1.tgz"
+  integrity sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==
+  dependencies:
+    "@nodelib/fs.stat" "^2.0.2"
+    "@nodelib/fs.walk" "^1.2.3"
+    glob-parent "^5.1.2"
+    merge2 "^1.3.0"
+    micromatch "^4.0.4"
+
+fast-json-stable-stringify@^2.0.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz"
+  integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==
+
+fast-levenshtein@^2.0.6:
+  version "2.0.6"
+  resolved "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz"
+  integrity sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==
+
+fast-xml-parser@4.2.5:
+  version "4.2.5"
+  resolved "https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-4.2.5.tgz"
+  integrity sha512-B9/wizE4WngqQftFPmdaMYlXoJlJOYxGQOanC77fq9k8+Z0v5dDSVh+3glErdIROP//s/jgb7ZuxKfB8nVyo0g==
+  dependencies:
+    strnum "^1.0.5"
+
+fast-xml-parser@4.4.1:
+  version "4.4.1"
+  resolved "https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-4.4.1.tgz"
+  integrity sha512-xkjOecfnKGkSsOwtZ5Pz7Us/T6mrbPQrq0nh+aCO5V9nk5NLWmasAHumTKjiPJPWANe+kAZ84Jc8ooJkzZ88Sw==
+  dependencies:
+    strnum "^1.0.5"
+
+fastq@^1.6.0:
+  version "1.19.1"
+  resolved "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz"
+  integrity sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==
+  dependencies:
+    reusify "^1.0.4"
+
+fdir@^6.2.0, fdir@^6.4.4:
+  version "6.4.5"
+  resolved "https://registry.npmjs.org/fdir/-/fdir-6.4.5.tgz"
+  integrity sha512-4BG7puHpVsIYxZUbiUE3RqGloLaSSwzYie5jvasC4LWuBWzZawynvYouhjbQKw2JuIGYdm0DzIxl8iVidKlUEw==
+
+file-entry-cache@^8.0.0:
+  version "8.0.0"
+  resolved "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz"
+  integrity sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==
+  dependencies:
+    flat-cache "^4.0.0"
+
+fill-range@^7.1.1:
+  version "7.1.1"
+  resolved "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz"
+  integrity sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==
+  dependencies:
+    to-regex-range "^5.0.1"
+
+finalhandler@^2.0.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/finalhandler/-/finalhandler-2.1.0.tgz"
+  integrity sha512-/t88Ty3d5JWQbWYgaOGCCYfXRwV1+be02WqYYlL6h0lEiUAMPM8o8qKGO01YIkOHzka2up08wvgYD0mDiI+q3Q==
+  dependencies:
+    debug "^4.4.0"
+    encodeurl "^2.0.0"
+    escape-html "^1.0.3"
+    on-finished "^2.4.1"
+    parseurl "^1.3.3"
+    statuses "^2.0.1"
+
+find-up@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz"
+  integrity sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==
+  dependencies:
+    locate-path "^6.0.0"
+    path-exists "^4.0.0"
+
+flat-cache@^4.0.0:
+  version "4.0.1"
+  resolved "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz"
+  integrity sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==
+  dependencies:
+    flatted "^3.2.9"
+    keyv "^4.5.4"
+
+flatted@^3.2.9:
+  version "3.3.3"
+  resolved "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz"
+  integrity sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==
+
+for-each@^0.3.3, for-each@^0.3.5:
+  version "0.3.5"
+  resolved "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz"
+  integrity sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==
+  dependencies:
+    is-callable "^1.2.7"
+
+foreground-child@^3.1.0:
+  version "3.3.1"
+  resolved "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz"
+  integrity sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==
+  dependencies:
+    cross-spawn "^7.0.6"
+    signal-exit "^4.0.1"
+
+forwarded@0.2.0:
+  version "0.2.0"
+  resolved "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz"
+  integrity sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==
+
+fresh@^2.0.0, fresh@2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/fresh/-/fresh-2.0.0.tgz"
+  integrity sha512-Rx/WycZ60HOaqLKAi6cHRKKI7zxWbJ31MhntmtwMoaTeF7XFH9hhBp8vITaMidfljRQ6eYWCKkaTK+ykVJHP2A==
+
+fs.realpath@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz"
+  integrity sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==
+
+function-bind@^1.1.2:
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz"
+  integrity sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==
+
+function.prototype.name@^1.1.6, function.prototype.name@^1.1.8:
+  version "1.1.8"
+  resolved "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz"
+  integrity sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.3"
+    define-properties "^1.2.1"
+    functions-have-names "^1.2.3"
+    hasown "^2.0.2"
+    is-callable "^1.2.7"
+
+functions-have-names@^1.2.3:
+  version "1.2.3"
+  resolved "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz"
+  integrity sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==
+
+get-intrinsic@^1.2.4, get-intrinsic@^1.2.5, get-intrinsic@^1.2.6, get-intrinsic@^1.2.7, get-intrinsic@^1.3.0:
+  version "1.3.0"
+  resolved "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz"
+  integrity sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==
+  dependencies:
+    call-bind-apply-helpers "^1.0.2"
+    es-define-property "^1.0.1"
+    es-errors "^1.3.0"
+    es-object-atoms "^1.1.1"
+    function-bind "^1.1.2"
+    get-proto "^1.0.1"
+    gopd "^1.2.0"
+    has-symbols "^1.1.0"
+    hasown "^2.0.2"
+    math-intrinsics "^1.1.0"
+
+get-nonce@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/get-nonce/-/get-nonce-1.0.1.tgz"
+  integrity sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==
+
+get-proto@^1.0.0, get-proto@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz"
+  integrity sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==
+  dependencies:
+    dunder-proto "^1.0.1"
+    es-object-atoms "^1.0.0"
+
+get-source@^2.0.12:
+  version "2.0.12"
+  resolved "https://registry.npmjs.org/get-source/-/get-source-2.0.12.tgz"
+  integrity sha512-X5+4+iD+HoSeEED+uwrQ07BOQr0kEDFMVqqpBuI+RaZBpBpHCuXxo70bjar6f0b0u/DQJsJ7ssurpP0V60Az+w==
+  dependencies:
+    data-uri-to-buffer "^2.0.0"
+    source-map "^0.6.1"
+
+get-stream@^6.0.0:
+  version "6.0.1"
+  resolved "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz"
+  integrity sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==
+
+get-symbol-description@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz"
+  integrity sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==
+  dependencies:
+    call-bound "^1.0.3"
+    es-errors "^1.3.0"
+    get-intrinsic "^1.2.6"
+
+get-tsconfig@^4.10.0:
+  version "4.10.1"
+  resolved "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgz"
+  integrity sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==
+  dependencies:
+    resolve-pkg-maps "^1.0.0"
+
+glob-parent@^5.1.2:
+  version "5.1.2"
+  resolved "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz"
+  integrity sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==
+  dependencies:
+    is-glob "^4.0.1"
+
+glob-parent@^6.0.2:
+  version "6.0.2"
+  resolved "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz"
+  integrity sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==
+  dependencies:
+    is-glob "^4.0.3"
+
+glob-parent@~5.1.2:
+  version "5.1.2"
+  resolved "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz"
+  integrity sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==
+  dependencies:
+    is-glob "^4.0.1"
+
+glob-to-regexp@0.4.1:
+  version "0.4.1"
+  resolved "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz"
+  integrity sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==
+
+glob@^10.3.10:
+  version "10.4.5"
+  resolved "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz"
+  integrity sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==
+  dependencies:
+    foreground-child "^3.1.0"
+    jackspeak "^3.1.2"
+    minimatch "^9.0.4"
+    minipass "^7.1.2"
+    package-json-from-dist "^1.0.0"
+    path-scurry "^1.11.1"
+
+glob@^11.0.0:
+  version "11.0.2"
+  resolved "https://registry.npmjs.org/glob/-/glob-11.0.2.tgz"
+  integrity sha512-YT7U7Vye+t5fZ/QMkBFrTJ7ZQxInIUjwyAjVj84CYXqgBdv30MFUPGnBR6sQaVq6Is15wYJUsnzTuWaGRBhBAQ==
+  dependencies:
+    foreground-child "^3.1.0"
+    jackspeak "^4.0.1"
+    minimatch "^10.0.0"
+    minipass "^7.1.2"
+    package-json-from-dist "^1.0.0"
+    path-scurry "^2.0.0"
+
+glob@9.3.5:
+  version "9.3.5"
+  resolved "https://registry.npmjs.org/glob/-/glob-9.3.5.tgz"
+  integrity sha512-e1LleDykUz2Iu+MTYdkSsuWX8lvAjAcs0Xef0lNIu0S2wOAzuTxCJtcd9S3cijlwYF18EsU3rzb8jPVobxDh9Q==
+  dependencies:
+    fs.realpath "^1.0.0"
+    minimatch "^8.0.2"
+    minipass "^4.2.4"
+    path-scurry "^1.6.1"
+
+globals@^14.0.0:
+  version "14.0.0"
+  resolved "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz"
+  integrity sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==
+
+globalthis@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz"
+  integrity sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==
+  dependencies:
+    define-properties "^1.2.1"
+    gopd "^1.0.1"
+
+gopd@^1.0.1, gopd@^1.2.0:
+  version "1.2.0"
+  resolved "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz"
+  integrity sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==
+
+graphemer@^1.4.0:
+  version "1.4.0"
+  resolved "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz"
+  integrity sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==
+
+gzip-size@6.0.0:
+  version "6.0.0"
+  resolved "https://registry.npmjs.org/gzip-size/-/gzip-size-6.0.0.tgz"
+  integrity sha512-ax7ZYomf6jqPTQ4+XCpUGyXKHk5WweS+e05MBO4/y3WJ5RkmPXNKvX+bx1behVILVwr6JSQvZAku021CHPXG3Q==
+  dependencies:
+    duplexer "^0.1.2"
+
+has-bigints@^1.0.2:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz"
+  integrity sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==
+
+has-flag@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz"
+  integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
+
+has-property-descriptors@^1.0.0, has-property-descriptors@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz"
+  integrity sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==
+  dependencies:
+    es-define-property "^1.0.0"
+
+has-proto@^1.2.0:
+  version "1.2.0"
+  resolved "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz"
+  integrity sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==
+  dependencies:
+    dunder-proto "^1.0.0"
+
+has-symbols@^1.0.3, has-symbols@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz"
+  integrity sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==
+
+has-tostringtag@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz"
+  integrity sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==
+  dependencies:
+    has-symbols "^1.0.3"
+
+hasown@^2.0.2:
+  version "2.0.2"
+  resolved "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz"
+  integrity sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==
+  dependencies:
+    function-bind "^1.1.2"
+
+http-errors@^2.0.0, http-errors@2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz"
+  integrity sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==
+  dependencies:
+    depd "2.0.0"
+    inherits "2.0.4"
+    setprototypeof "1.2.0"
+    statuses "2.0.1"
+    toidentifier "1.0.1"
+
+human-signals@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz"
+  integrity sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==
+
+iconv-lite@^0.6.3, iconv-lite@0.6.3:
+  version "0.6.3"
+  resolved "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz"
+  integrity sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==
+  dependencies:
+    safer-buffer ">= 2.1.2 < 3.0.0"
+
+ignore@^5.2.0, ignore@^5.3.0:
+  version "5.3.2"
+  resolved "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz"
+  integrity sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==
+
+ignore@^7.0.0:
+  version "7.0.5"
+  resolved "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz"
+  integrity sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==
+
+import-fresh@^3.2.1:
+  version "3.3.1"
+  resolved "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz"
+  integrity sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==
+  dependencies:
+    parent-module "^1.0.0"
+    resolve-from "^4.0.0"
+
+imurmurhash@^0.1.4:
+  version "0.1.4"
+  resolved "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz"
+  integrity sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==
+
+inherits@2.0.4:
+  version "2.0.4"
+  resolved "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz"
+  integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
+
+input-otp@^1.4.2:
+  version "1.4.2"
+  resolved "https://registry.npmjs.org/input-otp/-/input-otp-1.4.2.tgz"
+  integrity sha512-l3jWwYNvrEa6NTCt7BECfCm48GvwuZzkoeG3gBL2w4CHeOXW3eKFmf9UNYkNfYc3mxMrthMnxjIE07MT0zLBQA==
+
+internal-slot@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz"
+  integrity sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==
+  dependencies:
+    es-errors "^1.3.0"
+    hasown "^2.0.2"
+    side-channel "^1.1.0"
+
+"internmap@1 - 2":
+  version "2.0.3"
+  resolved "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz"
+  integrity sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==
+
+ipaddr.js@1.9.1:
+  version "1.9.1"
+  resolved "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz"
+  integrity sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==
+
+is-array-buffer@^3.0.4, is-array-buffer@^3.0.5:
+  version "3.0.5"
+  resolved "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz"
+  integrity sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.3"
+    get-intrinsic "^1.2.6"
+
+is-arrayish@^0.3.1:
+  version "0.3.2"
+  resolved "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz"
+  integrity sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==
+
+is-async-function@^2.0.0:
+  version "2.1.1"
+  resolved "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz"
+  integrity sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==
+  dependencies:
+    async-function "^1.0.0"
+    call-bound "^1.0.3"
+    get-proto "^1.0.1"
+    has-tostringtag "^1.0.2"
+    safe-regex-test "^1.1.0"
+
+is-bigint@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz"
+  integrity sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==
+  dependencies:
+    has-bigints "^1.0.2"
+
+is-binary-path@~2.1.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz"
+  integrity sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==
+  dependencies:
+    binary-extensions "^2.0.0"
+
+is-boolean-object@^1.2.1:
+  version "1.2.2"
+  resolved "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz"
+  integrity sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==
+  dependencies:
+    call-bound "^1.0.3"
+    has-tostringtag "^1.0.2"
+
+is-bun-module@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/is-bun-module/-/is-bun-module-2.0.0.tgz"
+  integrity sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==
+  dependencies:
+    semver "^7.7.1"
+
+is-callable@^1.2.7:
+  version "1.2.7"
+  resolved "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz"
+  integrity sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==
+
+is-core-module@^2.13.0, is-core-module@^2.15.1, is-core-module@^2.16.0:
+  version "2.16.1"
+  resolved "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz"
+  integrity sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==
+  dependencies:
+    hasown "^2.0.2"
+
+is-data-view@^1.0.1, is-data-view@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz"
+  integrity sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==
+  dependencies:
+    call-bound "^1.0.2"
+    get-intrinsic "^1.2.6"
+    is-typed-array "^1.1.13"
+
+is-date-object@^1.0.5, is-date-object@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz"
+  integrity sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==
+  dependencies:
+    call-bound "^1.0.2"
+    has-tostringtag "^1.0.2"
+
+is-extglob@^2.1.1:
+  version "2.1.1"
+  resolved "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz"
+  integrity sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==
+
+is-finalizationregistry@^1.1.0:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz"
+  integrity sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==
+  dependencies:
+    call-bound "^1.0.3"
+
+is-fullwidth-code-point@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz"
+  integrity sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==
+
+is-generator-function@^1.0.10:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz"
+  integrity sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==
+  dependencies:
+    call-bound "^1.0.3"
+    get-proto "^1.0.0"
+    has-tostringtag "^1.0.2"
+    safe-regex-test "^1.1.0"
+
+is-glob@^4.0.0, is-glob@^4.0.1, is-glob@^4.0.3, is-glob@~4.0.1:
+  version "4.0.3"
+  resolved "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz"
+  integrity sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==
+  dependencies:
+    is-extglob "^2.1.1"
+
+is-map@^2.0.3:
+  version "2.0.3"
+  resolved "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz"
+  integrity sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==
+
+is-negative-zero@^2.0.3:
+  version "2.0.3"
+  resolved "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz"
+  integrity sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==
+
+is-number-object@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz"
+  integrity sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==
+  dependencies:
+    call-bound "^1.0.3"
+    has-tostringtag "^1.0.2"
+
+is-number@^7.0.0:
+  version "7.0.0"
+  resolved "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz"
+  integrity sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==
+
+is-promise@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz"
+  integrity sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==
+
+is-regex@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz"
+  integrity sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==
+  dependencies:
+    call-bound "^1.0.2"
+    gopd "^1.2.0"
+    has-tostringtag "^1.0.2"
+    hasown "^2.0.2"
+
+is-set@^2.0.3:
+  version "2.0.3"
+  resolved "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz"
+  integrity sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==
+
+is-shared-array-buffer@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz"
+  integrity sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==
+  dependencies:
+    call-bound "^1.0.3"
+
+is-stream@^2.0.0:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz"
+  integrity sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==
+
+is-string@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz"
+  integrity sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==
+  dependencies:
+    call-bound "^1.0.3"
+    has-tostringtag "^1.0.2"
+
+is-symbol@^1.0.4, is-symbol@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz"
+  integrity sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==
+  dependencies:
+    call-bound "^1.0.2"
+    has-symbols "^1.1.0"
+    safe-regex-test "^1.1.0"
+
+is-typed-array@^1.1.13, is-typed-array@^1.1.14, is-typed-array@^1.1.15:
+  version "1.1.15"
+  resolved "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz"
+  integrity sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==
+  dependencies:
+    which-typed-array "^1.1.16"
+
+is-weakmap@^2.0.2:
+  version "2.0.2"
+  resolved "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz"
+  integrity sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==
+
+is-weakref@^1.0.2, is-weakref@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz"
+  integrity sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==
+  dependencies:
+    call-bound "^1.0.3"
+
+is-weakset@^2.0.3:
+  version "2.0.4"
+  resolved "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz"
+  integrity sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==
+  dependencies:
+    call-bound "^1.0.3"
+    get-intrinsic "^1.2.6"
+
+isarray@^2.0.5:
+  version "2.0.5"
+  resolved "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz"
+  integrity sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==
+
+isexe@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz"
+  integrity sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==
+
+isexe@^3.1.1:
+  version "3.1.1"
+  resolved "https://registry.npmjs.org/isexe/-/isexe-3.1.1.tgz"
+  integrity sha512-LpB/54B+/2J5hqQ7imZHfdU31OlgQqx7ZicVlkm9kzg9/w8GKLEcFfJl/t7DCEDueOyBAD6zCCwTO6Fzs0NoEQ==
+
+iso-datestring-validator@^2.2.2:
+  version "2.2.2"
+  resolved "https://registry.npmjs.org/iso-datestring-validator/-/iso-datestring-validator-2.2.2.tgz"
+  integrity sha512-yLEMkBbLZTlVQqOnQ4FiMujR6T4DEcCb1xizmvXS+OxuhwcbtynoosRzdMA69zZCShCNAbi+gJ71FxZBBXx1SA==
+
+iterator.prototype@^1.1.4:
+  version "1.1.5"
+  resolved "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz"
+  integrity sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==
+  dependencies:
+    define-data-property "^1.1.4"
+    es-object-atoms "^1.0.0"
+    get-intrinsic "^1.2.6"
+    get-proto "^1.0.0"
+    has-symbols "^1.1.0"
+    set-function-name "^2.0.2"
+
+jackspeak@^3.1.2:
+  version "3.4.3"
+  resolved "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz"
+  integrity sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==
+  dependencies:
+    "@isaacs/cliui" "^8.0.2"
+  optionalDependencies:
+    "@pkgjs/parseargs" "^0.11.0"
+
+jackspeak@^4.0.1:
+  version "4.1.1"
+  resolved "https://registry.npmjs.org/jackspeak/-/jackspeak-4.1.1.tgz"
+  integrity sha512-zptv57P3GpL+O0I7VdMJNBZCu+BPHVQUk55Ft8/QCJjTVxrnJHuVuX/0Bl2A6/+2oyR/ZMEuFKwmzqqZ/U5nPQ==
+  dependencies:
+    "@isaacs/cliui" "^8.0.2"
+
+jiti@^1.21.6:
+  version "1.21.7"
+  resolved "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz"
+  integrity sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==
+
+jose@^5.2.0:
+  version "5.10.0"
+  resolved "https://registry.npmjs.org/jose/-/jose-5.10.0.tgz"
+  integrity sha512-s+3Al/p9g32Iq+oqXxkW//7jk2Vig6FF1CFqzVXoTUXt2qz89YWbL+OwS17NFYEvxC35n0FKeGO2LGYSxeM2Gg==
+
+"js-tokens@^3.0.0 || ^4.0.0":
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz"
+  integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==
+
+js-yaml@^4.1.0:
+  version "4.1.0"
+  resolved "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz"
+  integrity sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==
+  dependencies:
+    argparse "^2.0.1"
+
+json-buffer@3.0.1:
+  version "3.0.1"
+  resolved "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz"
+  integrity sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==
+
+json-schema-traverse@^0.4.1:
+  version "0.4.1"
+  resolved "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz"
+  integrity sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==
+
+json-stable-stringify-without-jsonify@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz"
+  integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
+
+json5@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/json5/-/json5-1.0.2.tgz"
+  integrity sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==
+  dependencies:
+    minimist "^1.2.0"
+
+"jsx-ast-utils@^2.4.1 || ^3.0.0", jsx-ast-utils@^3.3.5:
+  version "3.3.5"
+  resolved "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz"
+  integrity sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==
+  dependencies:
+    array-includes "^3.1.6"
+    array.prototype.flat "^1.3.1"
+    object.assign "^4.1.4"
+    object.values "^1.1.6"
+
+keyv@^4.5.4:
+  version "4.5.4"
+  resolved "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz"
+  integrity sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==
+  dependencies:
+    json-buffer "3.0.1"
+
+language-subtag-registry@^0.3.20:
+  version "0.3.23"
+  resolved "https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.23.tgz"
+  integrity sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==
+
+language-tags@^1.0.9:
+  version "1.0.9"
+  resolved "https://registry.npmjs.org/language-tags/-/language-tags-1.0.9.tgz"
+  integrity sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==
+  dependencies:
+    language-subtag-registry "^0.3.20"
+
+levn@^0.4.1:
+  version "0.4.1"
+  resolved "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz"
+  integrity sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==
+  dependencies:
+    prelude-ls "^1.2.1"
+    type-check "~0.4.0"
+
+lilconfig@^3.0.0, lilconfig@^3.1.3:
+  version "3.1.3"
+  resolved "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz"
+  integrity sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==
+
+lines-and-columns@^1.1.6:
+  version "1.2.4"
+  resolved "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz"
+  integrity sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==
+
+locate-path@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz"
+  integrity sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==
+  dependencies:
+    p-locate "^5.0.0"
+
+lodash.merge@^4.6.2:
+  version "4.6.2"
+  resolved "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz"
+  integrity sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==
+
+lodash@^4.17.21:
+  version "4.17.21"
+  resolved "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz"
+  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
+
+loose-envify@^1.4.0:
+  version "1.4.0"
+  resolved "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz"
+  integrity sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==
+  dependencies:
+    js-tokens "^3.0.0 || ^4.0.0"
+
+lru-cache@^10.2.0:
+  version "10.4.3"
+  resolved "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz"
+  integrity sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==
+
+lru-cache@^11.0.0:
+  version "11.1.0"
+  resolved "https://registry.npmjs.org/lru-cache/-/lru-cache-11.1.0.tgz"
+  integrity sha512-QIXZUBJUx+2zHUdQujWejBkcD9+cs94tLn0+YL8UrCh+D5sCXZ4c7LaEH48pNwRY3MLDgqUFyhlCyjJPf1WP0A==
+
+lucide-react@^0.364.0:
+  version "0.364.0"
+  resolved "https://registry.npmjs.org/lucide-react/-/lucide-react-0.364.0.tgz"
+  integrity sha512-eHfdbJExWtTaZ0tBMGtI7PA/MbqV5wt+o4/yitDce17tadH/75Gq3Tq8jSteb3LhLr0eay/j5YUuN4yXjnI3aw==
+
+magic-string@^0.25.3:
+  version "0.25.9"
+  resolved "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz"
+  integrity sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==
+  dependencies:
+    sourcemap-codec "^1.4.8"
+
+math-intrinsics@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz"
+  integrity sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==
+
+media-typer@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/media-typer/-/media-typer-1.1.0.tgz"
+  integrity sha512-aisnrDP4GNe06UcKFnV5bfMNPBUw4jsLGaWwWfnH3v02GnBuXX2MCVn5RbrWo0j3pczUilYblq7fQ7Nw2t5XKw==
+
+merge-descriptors@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-2.0.0.tgz"
+  integrity sha512-Snk314V5ayFLhp3fkUREub6WtjBfPdCPY1Ln8/8munuLuiYhsABgBVWsozAG+MWMbVEvcdcpbi9R7ww22l9Q3g==
+
+merge-stream@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz"
+  integrity sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==
+
+merge2@^1.3.0:
+  version "1.4.1"
+  resolved "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz"
+  integrity sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==
+
+methods@~1.1.2:
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz"
+  integrity sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==
+
+micromatch@^4.0.4, micromatch@^4.0.8:
+  version "4.0.8"
+  resolved "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz"
+  integrity sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==
+  dependencies:
+    braces "^3.0.3"
+    picomatch "^2.3.1"
+
+mime-db@^1.54.0:
+  version "1.54.0"
+  resolved "https://registry.npmjs.org/mime-db/-/mime-db-1.54.0.tgz"
+  integrity sha512-aU5EJuIN2WDemCcAp2vFBfp/m4EAhWJnUNSSw0ixs7/kXbd6Pg64EmwJkNdFhB8aWt1sH2CTXrLxo/iAGV3oPQ==
+
+mime-types@^3.0.0, mime-types@^3.0.1:
+  version "3.0.1"
+  resolved "https://registry.npmjs.org/mime-types/-/mime-types-3.0.1.tgz"
+  integrity sha512-xRc4oEhT6eaBpU1XF7AjpOFD+xQmXNB5OVKwp4tqCuBpHLS/ZbBDrc07mYTDqVMg6PfxUjjNp85O6Cd2Z/5HWA==
+  dependencies:
+    mime-db "^1.54.0"
+
+mime@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/mime/-/mime-3.0.0.tgz"
+  integrity sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==
+
+mimic-fn@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz"
+  integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==
+
+miniflare@3.20250408.2:
+  version "3.20250408.2"
+  resolved "https://registry.npmjs.org/miniflare/-/miniflare-3.20250408.2.tgz"
+  integrity sha512-uTs7cGWFErgJTKtBdmtctwhuoxniuCQqDT8+xaEiJdEC8d+HsaZVYfZwIX2NuSmdAiHMe7NtbdZYjFMbIXtJsQ==
+  dependencies:
+    "@cspotcode/source-map-support" "0.8.1"
+    acorn "8.14.0"
+    acorn-walk "8.3.2"
+    exit-hook "2.2.1"
+    glob-to-regexp "0.4.1"
+    stoppable "1.1.0"
+    undici "^5.28.5"
+    workerd "1.20250408.0"
+    ws "8.18.0"
+    youch "3.3.4"
+    zod "3.22.3"
+
+minimatch@^10.0.0:
+  version "10.0.1"
+  resolved "https://registry.npmjs.org/minimatch/-/minimatch-10.0.1.tgz"
+  integrity sha512-ethXTt3SGGR+95gudmqJ1eNhRO7eGEGIgYA9vnPatK4/etz2MEVDno5GMCibdMTuBMyElzIlgxMna3K94XDIDQ==
+  dependencies:
+    brace-expansion "^2.0.1"
+
+minimatch@^3.1.2:
+  version "3.1.2"
+  resolved "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz"
+  integrity sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==
+  dependencies:
+    brace-expansion "^1.1.7"
+
+minimatch@^8.0.2:
+  version "8.0.4"
+  resolved "https://registry.npmjs.org/minimatch/-/minimatch-8.0.4.tgz"
+  integrity sha512-W0Wvr9HyFXZRGIDgCicunpQ299OKXs9RgZfaukz4qAW/pJhcpUfupc9c+OObPOFueNy8VSrZgEmDtk6Kh4WzDA==
+  dependencies:
+    brace-expansion "^2.0.1"
+
+minimatch@^9.0.4:
+  version "9.0.5"
+  resolved "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz"
+  integrity sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==
+  dependencies:
+    brace-expansion "^2.0.1"
+
+minimist@^1.2.0, minimist@^1.2.6:
+  version "1.2.8"
+  resolved "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz"
+  integrity sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==
+
+minipass@^4.2.4:
+  version "4.2.8"
+  resolved "https://registry.npmjs.org/minipass/-/minipass-4.2.8.tgz"
+  integrity sha512-fNzuVyifolSLFL4NzpF+wEF4qrgqaaKX0haXPQEdQ7NKAN+WecoKMHV09YcuL/DHxrUsYQOK3MiuDf7Ip2OXfQ==
+
+"minipass@^5.0.0 || ^6.0.2 || ^7.0.0", minipass@^7.1.2:
+  version "7.1.2"
+  resolved "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz"
+  integrity sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==
+
+mkdirp@^3.0.1:
+  version "3.0.1"
+  resolved "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz"
+  integrity sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==
+
+mkdirp@1.0.4:
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz"
+  integrity sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==
+
+mnemonist@0.38.3:
+  version "0.38.3"
+  resolved "https://registry.npmjs.org/mnemonist/-/mnemonist-0.38.3.tgz"
+  integrity sha512-2K9QYubXx/NAjv4VLq1d1Ly8pWNC5L3BrixtdkyTegXWJIqY+zLNDhhX/A+ZwWt70tB1S8H4BE8FLYEFyNoOBw==
+  dependencies:
+    obliterator "^1.6.1"
+
+ms@^2.1.1, ms@^2.1.3:
+  version "2.1.3"
+  resolved "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz"
+  integrity sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==
+
+ms@2.1.2:
+  version "2.1.2"
+  resolved "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz"
+  integrity sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==
+
+multiformats@^9.4.2, multiformats@^9.9.0:
+  version "9.9.0"
+  resolved "https://registry.npmjs.org/multiformats/-/multiformats-9.9.0.tgz"
+  integrity sha512-HoMUjhH9T8DDBNT+6xzkrd9ga/XiBI4xLr58LJACwK6G3HTOPeMz4nB4KJs33L2BelrIJa7P0VuNaVF3hMYfjg==
+
+mustache@^4.2.0:
+  version "4.2.0"
+  resolved "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz"
+  integrity sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==
+
+mz@^2.7.0:
+  version "2.7.0"
+  resolved "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz"
+  integrity sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==
+  dependencies:
+    any-promise "^1.0.0"
+    object-assign "^4.0.1"
+    thenify-all "^1.0.0"
+
+nanoid@^3.3.11, nanoid@^3.3.6:
+  version "3.3.11"
+  resolved "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz"
+  integrity sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==
+
+napi-postinstall@^0.2.2:
+  version "0.2.4"
+  resolved "https://registry.npmjs.org/napi-postinstall/-/napi-postinstall-0.2.4.tgz"
+  integrity sha512-ZEzHJwBhZ8qQSbknHqYcdtQVr8zUgGyM/q6h6qAyhtyVMNrSgDhrC4disf03dYW0e+czXyLnZINnCTEkWy0eJg==
+
+natural-compare@^1.4.0:
+  version "1.4.0"
+  resolved "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz"
+  integrity sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==
+
+negotiator@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/negotiator/-/negotiator-1.0.0.tgz"
+  integrity sha512-8Ofs/AUQh8MaEcrlq5xOX0CQ9ypTF5dl78mjlMNfOK08fzpgTHQRQPBxcPlEtIw0yRpws+Zo/3r+5WRby7u3Gg==
+
+next-themes@^0.4.4:
+  version "0.4.6"
+  resolved "https://registry.npmjs.org/next-themes/-/next-themes-0.4.6.tgz"
+  integrity sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==
+
+next@15.1.4:
+  version "15.1.4"
+  resolved "https://registry.npmjs.org/next/-/next-15.1.4.tgz"
+  integrity sha512-mTaq9dwaSuwwOrcu3ebjDYObekkxRnXpuVL21zotM8qE2W0HBOdVIdg2Li9QjMEZrj73LN96LcWcz62V19FjAg==
+  dependencies:
+    "@next/env" "15.1.4"
+    "@swc/counter" "0.1.3"
+    "@swc/helpers" "0.5.15"
+    busboy "1.6.0"
+    caniuse-lite "^1.0.30001579"
+    postcss "8.4.31"
+    styled-jsx "5.1.6"
+  optionalDependencies:
+    "@next/swc-darwin-arm64" "15.1.4"
+    "@next/swc-darwin-x64" "15.1.4"
+    "@next/swc-linux-arm64-gnu" "15.1.4"
+    "@next/swc-linux-arm64-musl" "15.1.4"
+    "@next/swc-linux-x64-gnu" "15.1.4"
+    "@next/swc-linux-x64-musl" "15.1.4"
+    "@next/swc-win32-arm64-msvc" "15.1.4"
+    "@next/swc-win32-x64-msvc" "15.1.4"
+    sharp "^0.33.5"
+
+normalize-path@^3.0.0, normalize-path@~3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz"
+  integrity sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==
+
+npm-run-path@^4.0.1:
+  version "4.0.1"
+  resolved "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz"
+  integrity sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==
+  dependencies:
+    path-key "^3.0.0"
+
+object-assign@^4.0.1, object-assign@^4.1.1:
+  version "4.1.1"
+  resolved "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz"
+  integrity sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==
+
+object-hash@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz"
+  integrity sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==
+
+object-inspect@^1.13.3, object-inspect@^1.13.4:
+  version "1.13.4"
+  resolved "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz"
+  integrity sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==
+
+object-keys@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz"
+  integrity sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==
+
+object-treeify@1.1.33:
+  version "1.1.33"
+  resolved "https://registry.npmjs.org/object-treeify/-/object-treeify-1.1.33.tgz"
+  integrity sha512-EFVjAYfzWqWsBMRHPMAXLCDIJnpMhdWAqR7xG6M6a2cs6PMFpl/+Z20w9zDW4vkxOFfddegBKq9Rehd0bxWE7A==
+
+object.assign@^4.1.4, object.assign@^4.1.7:
+  version "4.1.7"
+  resolved "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz"
+  integrity sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.3"
+    define-properties "^1.2.1"
+    es-object-atoms "^1.0.0"
+    has-symbols "^1.1.0"
+    object-keys "^1.1.1"
+
+object.entries@^1.1.9:
+  version "1.1.9"
+  resolved "https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz"
+  integrity sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.4"
+    define-properties "^1.2.1"
+    es-object-atoms "^1.1.1"
+
+object.fromentries@^2.0.8:
+  version "2.0.8"
+  resolved "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz"
+  integrity sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==
+  dependencies:
+    call-bind "^1.0.7"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.2"
+    es-object-atoms "^1.0.0"
+
+object.groupby@^1.0.3:
+  version "1.0.3"
+  resolved "https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz"
+  integrity sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==
+  dependencies:
+    call-bind "^1.0.7"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.2"
+
+object.values@^1.1.6, object.values@^1.2.0, object.values@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz"
+  integrity sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.3"
+    define-properties "^1.2.1"
+    es-object-atoms "^1.0.0"
+
+obliterator@^1.6.1:
+  version "1.6.1"
+  resolved "https://registry.npmjs.org/obliterator/-/obliterator-1.6.1.tgz"
+  integrity sha512-9WXswnqINnnhOG/5SLimUlzuU1hFJUc8zkwyD59Sd+dPOMf05PmnYG/d6Q7HZ+KmgkZJa1PxRso6QdM3sTNHig==
+
+ohash@^2.0.10:
+  version "2.0.11"
+  resolved "https://registry.npmjs.org/ohash/-/ohash-2.0.11.tgz"
+  integrity sha512-RdR9FQrFwNBNXAr4GixM8YaRZRJ5PUWbKYbE5eOsrwAjJW0q2REGcf79oYPsLyskQCZG1PLN+S/K1V00joZAoQ==
+
+on-finished@^2.4.1, on-finished@2.4.1:
+  version "2.4.1"
+  resolved "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz"
+  integrity sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==
+  dependencies:
+    ee-first "1.1.1"
+
+once@1.4.0:
+  version "1.4.0"
+  resolved "https://registry.npmjs.org/once/-/once-1.4.0.tgz"
+  integrity sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==
+  dependencies:
+    wrappy "1"
+
+onetime@^5.1.2:
+  version "5.1.2"
+  resolved "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz"
+  integrity sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==
+  dependencies:
+    mimic-fn "^2.1.0"
+
+optionator@^0.9.3:
+  version "0.9.4"
+  resolved "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz"
+  integrity sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==
+  dependencies:
+    deep-is "^0.1.3"
+    fast-levenshtein "^2.0.6"
+    levn "^0.4.1"
+    prelude-ls "^1.2.1"
+    type-check "^0.4.0"
+    word-wrap "^1.2.5"
+
+own-keys@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz"
+  integrity sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==
+  dependencies:
+    get-intrinsic "^1.2.6"
+    object-keys "^1.1.1"
+    safe-push-apply "^1.0.0"
+
+p-limit@^3.0.2:
+  version "3.1.0"
+  resolved "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz"
+  integrity sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==
+  dependencies:
+    yocto-queue "^0.1.0"
+
+p-locate@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz"
+  integrity sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==
+  dependencies:
+    p-limit "^3.0.2"
+
+package-json-from-dist@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz"
+  integrity sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==
+
+parent-module@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz"
+  integrity sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==
+  dependencies:
+    callsites "^3.0.0"
+
+parseurl@^1.3.3, parseurl@~1.3.3:
+  version "1.3.3"
+  resolved "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz"
+  integrity sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==
+
+path-browserify@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz"
+  integrity sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==
+
+path-exists@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz"
+  integrity sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==
+
+path-key@^3.0.0, path-key@^3.1.0:
+  version "3.1.1"
+  resolved "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz"
+  integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
+
+path-parse@^1.0.7:
+  version "1.0.7"
+  resolved "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz"
+  integrity sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==
+
+path-scurry@^1.11.1:
+  version "1.11.1"
+  resolved "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz"
+  integrity sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==
+  dependencies:
+    lru-cache "^10.2.0"
+    minipass "^5.0.0 || ^6.0.2 || ^7.0.0"
+
+path-scurry@^1.6.1:
+  version "1.11.1"
+  resolved "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz"
+  integrity sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==
+  dependencies:
+    lru-cache "^10.2.0"
+    minipass "^5.0.0 || ^6.0.2 || ^7.0.0"
+
+path-scurry@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/path-scurry/-/path-scurry-2.0.0.tgz"
+  integrity sha512-ypGJsmGtdXUOeM5u93TyeIEfEhM6s+ljAhrk5vAvSx8uyY/02OvrZnA0YNGUrPXfpJMgI1ODd3nwz8Npx4O4cg==
+  dependencies:
+    lru-cache "^11.0.0"
+    minipass "^7.1.2"
+
+path-to-regexp@^6.3.0, path-to-regexp@6.3.0:
+  version "6.3.0"
+  resolved "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-6.3.0.tgz"
+  integrity sha512-Yhpw4T9C6hPpgPeA28us07OJeqZ5EzQTkbfwuhsUg0c237RomFoETJgmp2sa3F/41gfLE6G5cqcYwznmeEeOlQ==
+
+path-to-regexp@^8.0.0:
+  version "8.2.0"
+  resolved "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-8.2.0.tgz"
+  integrity sha512-TdrF7fW9Rphjq4RjrW0Kp2AW0Ahwu9sRGTkS6bvDi0SCwZlEZYmcfDbEsTz8RVk0EHIS/Vd1bv3JhG+1xZuAyQ==
+
+pathe@^2.0.3:
+  version "2.0.3"
+  resolved "https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz"
+  integrity sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==
+
+picocolors@^1.0.0, picocolors@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz"
+  integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==
+
+picomatch@^2.0.4:
+  version "2.3.1"
+  resolved "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz"
+  integrity sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==
+
+picomatch@^2.2.1:
+  version "2.3.1"
+  resolved "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz"
+  integrity sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==
+
+picomatch@^2.3.1:
+  version "2.3.1"
+  resolved "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz"
+  integrity sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==
+
+picomatch@^4.0.2:
+  version "4.0.2"
+  resolved "https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz"
+  integrity sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==
+
+pify@^2.3.0:
+  version "2.3.0"
+  resolved "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz"
+  integrity sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==
+
+pirates@^4.0.1:
+  version "4.0.7"
+  resolved "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz"
+  integrity sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==
+
+possible-typed-array-names@^1.0.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz"
+  integrity sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==
+
+postcss-import@^15.1.0:
+  version "15.1.0"
+  resolved "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz"
+  integrity sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==
+  dependencies:
+    postcss-value-parser "^4.0.0"
+    read-cache "^1.0.0"
+    resolve "^1.1.7"
+
+postcss-js@^4.0.1:
+  version "4.0.1"
+  resolved "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz"
+  integrity sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==
+  dependencies:
+    camelcase-css "^2.0.1"
+
+postcss-load-config@^4.0.2:
+  version "4.0.2"
+  resolved "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz"
+  integrity sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==
+  dependencies:
+    lilconfig "^3.0.0"
+    yaml "^2.3.4"
+
+postcss-nested@^6.2.0:
+  version "6.2.0"
+  resolved "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz"
+  integrity sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==
+  dependencies:
+    postcss-selector-parser "^6.1.1"
+
+postcss-selector-parser@^6.1.1, postcss-selector-parser@^6.1.2:
+  version "6.1.2"
+  resolved "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz"
+  integrity sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==
+  dependencies:
+    cssesc "^3.0.0"
+    util-deprecate "^1.0.2"
+
+postcss-value-parser@^4.0.0:
+  version "4.2.0"
+  resolved "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz"
+  integrity sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==
+
+postcss@^8, postcss@^8.4.47:
+  version "8.5.4"
+  resolved "https://registry.npmjs.org/postcss/-/postcss-8.5.4.tgz"
+  integrity sha512-QSa9EBe+uwlGTFmHsPKokv3B/oEMQZxfqW0QqNCyhpa6mB1afzulwn8hihglqAb2pOw+BJgNlmXQ8la2VeHB7w==
+  dependencies:
+    nanoid "^3.3.11"
+    picocolors "^1.1.1"
+    source-map-js "^1.2.1"
+
+postcss@8.4.31:
+  version "8.4.31"
+  resolved "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz"
+  integrity sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==
+  dependencies:
+    nanoid "^3.3.6"
+    picocolors "^1.0.0"
+    source-map-js "^1.0.2"
+
+prelude-ls@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz"
+  integrity sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==
+
+printable-characters@^1.0.42:
+  version "1.0.42"
+  resolved "https://registry.npmjs.org/printable-characters/-/printable-characters-1.0.42.tgz"
+  integrity sha512-dKp+C4iXWK4vVYZmYSd0KBH5F/h1HoZRsbJ82AVKRO3PEo8L4lBS/vLwhVtpwwuYcoIsVY+1JYKR268yn480uQ==
+
+promise.series@^0.2.0:
+  version "0.2.0"
+  resolved "https://registry.npmjs.org/promise.series/-/promise.series-0.2.0.tgz"
+  integrity sha512-VWQJyU2bcDTgZw8kpfBpB/ejZASlCrzwz5f2hjb/zlujOEB4oeiAhHygAWq8ubsX2GVkD4kCU5V2dwOTaCY5EQ==
+
+prop-types@^15.6.2, prop-types@^15.8.1:
+  version "15.8.1"
+  resolved "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz"
+  integrity sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==
+  dependencies:
+    loose-envify "^1.4.0"
+    object-assign "^4.1.1"
+    react-is "^16.13.1"
+
+proxy-addr@~2.0.7:
+  version "2.0.7"
+  resolved "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz"
+  integrity sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==
+  dependencies:
+    forwarded "0.2.0"
+    ipaddr.js "1.9.1"
+
+punycode@^2.1.0:
+  version "2.3.1"
+  resolved "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz"
+  integrity sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==
+
+qs@^6.14.0:
+  version "6.14.0"
+  resolved "https://registry.npmjs.org/qs/-/qs-6.14.0.tgz"
+  integrity sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==
+  dependencies:
+    side-channel "^1.1.0"
+
+qs@6.13.0:
+  version "6.13.0"
+  resolved "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz"
+  integrity sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==
+  dependencies:
+    side-channel "^1.0.6"
+
+queue-microtask@^1.2.2:
+  version "1.2.3"
+  resolved "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz"
+  integrity sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==
+
+range-parser@^1.2.1, range-parser@~1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz"
+  integrity sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==
+
+raw-body@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/raw-body/-/raw-body-3.0.0.tgz"
+  integrity sha512-RmkhL8CAyCRPXCE28MMH0z2PNWQBNk2Q09ZdxM9IOOXwxwZbN+qbWaatPkdkWIKL2ZVDImrN/pK5HTRz2PcS4g==
+  dependencies:
+    bytes "3.1.2"
+    http-errors "2.0.0"
+    iconv-lite "0.6.3"
+    unpipe "1.0.0"
+
+react-day-picker@8.10.1:
+  version "8.10.1"
+  resolved "https://registry.npmjs.org/react-day-picker/-/react-day-picker-8.10.1.tgz"
+  integrity sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==
+
+react-dom@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.npmjs.org/react-dom/-/react-dom-19.0.0.tgz"
+  integrity sha512-4GV5sHFG0e/0AD4X+ySy6UJd3jVl1iNsNHdpad0qhABJ11twS3TTBnseqsKurKcsNqCEFeGL3uLpVChpIO3QfQ==
+  dependencies:
+    scheduler "^0.25.0"
+
+react-hook-form@^7.54.2:
+  version "7.57.0"
+  resolved "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.57.0.tgz"
+  integrity sha512-RbEks3+cbvTP84l/VXGUZ+JMrKOS8ykQCRYdm5aYsxnDquL0vspsyNhGRO7pcH6hsZqWlPOjLye7rJqdtdAmlg==
+
+react-is@^16.13.1:
+  version "16.13.1"
+  resolved "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz"
+  integrity sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==
+
+react-is@^18.3.1:
+  version "18.3.1"
+  resolved "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz"
+  integrity sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==
+
+react-remove-scroll-bar@^2.3.3, react-remove-scroll-bar@^2.3.7:
+  version "2.3.8"
+  resolved "https://registry.npmjs.org/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.8.tgz"
+  integrity sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==
+  dependencies:
+    react-style-singleton "^2.2.2"
+    tslib "^2.0.0"
+
+react-remove-scroll@^2.6.3:
+  version "2.7.1"
+  resolved "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.7.1.tgz"
+  integrity sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==
+  dependencies:
+    react-remove-scroll-bar "^2.3.7"
+    react-style-singleton "^2.2.3"
+    tslib "^2.1.0"
+    use-callback-ref "^1.3.3"
+    use-sidecar "^1.1.3"
+
+react-remove-scroll@2.5.5:
+  version "2.5.5"
+  resolved "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.5.5.tgz"
+  integrity sha512-ImKhrzJJsyXJfBZ4bzu8Bwpka14c/fQt0k+cyFp/PBhTfyDnU5hjOtM4AG/0AMyy8oKzOTR0lDgJIM7pYXI0kw==
+  dependencies:
+    react-remove-scroll-bar "^2.3.3"
+    react-style-singleton "^2.2.1"
+    tslib "^2.1.0"
+    use-callback-ref "^1.3.0"
+    use-sidecar "^1.1.2"
+
+react-resizable-panels@^2.1.7:
+  version "2.1.9"
+  resolved "https://registry.npmjs.org/react-resizable-panels/-/react-resizable-panels-2.1.9.tgz"
+  integrity sha512-z77+X08YDIrgAes4jl8xhnUu1LNIRp4+E7cv4xHmLOxxUPO/ML7PSrE813b90vj7xvQ1lcf7g2uA9GeMZonjhQ==
+
+react-smooth@^4.0.4:
+  version "4.0.4"
+  resolved "https://registry.npmjs.org/react-smooth/-/react-smooth-4.0.4.tgz"
+  integrity sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==
+  dependencies:
+    fast-equals "^5.0.1"
+    prop-types "^15.8.1"
+    react-transition-group "^4.4.5"
+
+react-style-singleton@^2.2.1, react-style-singleton@^2.2.2, react-style-singleton@^2.2.3:
+  version "2.2.3"
+  resolved "https://registry.npmjs.org/react-style-singleton/-/react-style-singleton-2.2.3.tgz"
+  integrity sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==
+  dependencies:
+    get-nonce "^1.0.0"
+    tslib "^2.0.0"
+
+react-transition-group@^4.4.5:
+  version "4.4.5"
+  resolved "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz"
+  integrity sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==
+  dependencies:
+    "@babel/runtime" "^7.5.5"
+    dom-helpers "^5.0.1"
+    loose-envify "^1.4.0"
+    prop-types "^15.6.2"
+
+react@^19.0.0:
+  version "19.0.0"
+  resolved "https://registry.npmjs.org/react/-/react-19.0.0.tgz"
+  integrity sha512-V8AVnmPIICiWpGfm6GLzCR/W5FXLchHop40W4nXBmdlEceh16rCN8O8LNWm5bh5XUX91fh7KpA+W0TgMKmgTpQ==
+
+read-cache@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz"
+  integrity sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==
+  dependencies:
+    pify "^2.3.0"
+
+readdirp@~3.6.0:
+  version "3.6.0"
+  resolved "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz"
+  integrity sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==
+  dependencies:
+    picomatch "^2.2.1"
+
+recharts-scale@^0.4.4:
+  version "0.4.5"
+  resolved "https://registry.npmjs.org/recharts-scale/-/recharts-scale-0.4.5.tgz"
+  integrity sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==
+  dependencies:
+    decimal.js-light "^2.4.1"
+
+recharts@^2.12.4:
+  version "2.15.3"
+  resolved "https://registry.npmjs.org/recharts/-/recharts-2.15.3.tgz"
+  integrity sha512-EdOPzTwcFSuqtvkDoaM5ws/Km1+WTAO2eizL7rqiG0V2UVhTnz0m7J2i0CjVPUCdEkZImaWvXLbZDS2H5t6GFQ==
+  dependencies:
+    clsx "^2.0.0"
+    eventemitter3 "^4.0.1"
+    lodash "^4.17.21"
+    react-is "^18.3.1"
+    react-smooth "^4.0.4"
+    recharts-scale "^0.4.4"
+    tiny-invariant "^1.3.1"
+    victory-vendor "^36.6.8"
+
+reflect.getprototypeof@^1.0.6, reflect.getprototypeof@^1.0.9:
+  version "1.0.10"
+  resolved "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz"
+  integrity sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==
+  dependencies:
+    call-bind "^1.0.8"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.9"
+    es-errors "^1.3.0"
+    es-object-atoms "^1.0.0"
+    get-intrinsic "^1.2.7"
+    get-proto "^1.0.1"
+    which-builtin-type "^1.2.1"
+
+regexp.prototype.flags@^1.5.3, regexp.prototype.flags@^1.5.4:
+  version "1.5.4"
+  resolved "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz"
+  integrity sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==
+  dependencies:
+    call-bind "^1.0.8"
+    define-properties "^1.2.1"
+    es-errors "^1.3.0"
+    get-proto "^1.0.1"
+    gopd "^1.2.0"
+    set-function-name "^2.0.2"
+
+resolve-from@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz"
+  integrity sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==
+
+resolve-pkg-maps@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz"
+  integrity sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==
+
+resolve@^1.1.7, resolve@^1.19.0, resolve@^1.22.4, resolve@^1.22.8:
+  version "1.22.10"
+  resolved "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz"
+  integrity sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==
+  dependencies:
+    is-core-module "^2.16.0"
+    path-parse "^1.0.7"
+    supports-preserve-symlinks-flag "^1.0.0"
+
+resolve@^2.0.0-next.5:
+  version "2.0.0-next.5"
+  resolved "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz"
+  integrity sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==
+  dependencies:
+    is-core-module "^2.13.0"
+    path-parse "^1.0.7"
+    supports-preserve-symlinks-flag "^1.0.0"
+
+reusify@^1.0.4:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz"
+  integrity sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==
+
+rollup-plugin-inject@^3.0.0:
+  version "3.0.2"
+  resolved "https://registry.npmjs.org/rollup-plugin-inject/-/rollup-plugin-inject-3.0.2.tgz"
+  integrity sha512-ptg9PQwzs3orn4jkgXJ74bfs5vYz1NCZlSQMBUA0wKcGp5i5pA1AO3fOUEte8enhGUC+iapTCzEWw2jEFFUO/w==
+  dependencies:
+    estree-walker "^0.6.1"
+    magic-string "^0.25.3"
+    rollup-pluginutils "^2.8.1"
+
+rollup-plugin-node-polyfills@^0.2.1:
+  version "0.2.1"
+  resolved "https://registry.npmjs.org/rollup-plugin-node-polyfills/-/rollup-plugin-node-polyfills-0.2.1.tgz"
+  integrity sha512-4kCrKPTJ6sK4/gLL/U5QzVT8cxJcofO0OU74tnB19F40cmuAKSzH5/siithxlofFEjwvw1YAhPmbvGNA6jEroA==
+  dependencies:
+    rollup-plugin-inject "^3.0.0"
+
+rollup-pluginutils@^2.8.1:
+  version "2.8.2"
+  resolved "https://registry.npmjs.org/rollup-pluginutils/-/rollup-pluginutils-2.8.2.tgz"
+  integrity sha512-EEp9NhnUkwY8aif6bxgovPHMoMoNr2FulJziTndpt5H9RdwC47GSGuII9XxpSdzVGM0GWrNPHV6ie1LTNJPaLQ==
+  dependencies:
+    estree-walker "^0.6.1"
+
+router@^2.0.0:
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/router/-/router-2.2.0.tgz"
+  integrity sha512-nLTrUKm2UyiL7rlhapu/Zl45FwNgkZGaCpZbIHajDYgwlJCOzLSk+cIPAnsEqV955GjILJnKbdQC1nVPz+gAYQ==
+  dependencies:
+    debug "^4.4.0"
+    depd "^2.0.0"
+    is-promise "^4.0.0"
+    parseurl "^1.3.3"
+    path-to-regexp "^8.0.0"
+
+run-parallel@^1.1.9:
+  version "1.2.0"
+  resolved "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz"
+  integrity sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==
+  dependencies:
+    queue-microtask "^1.2.2"
+
+safe-array-concat@^1.1.3:
+  version "1.1.3"
+  resolved "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz"
+  integrity sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.2"
+    get-intrinsic "^1.2.6"
+    has-symbols "^1.1.0"
+    isarray "^2.0.5"
+
+safe-buffer@5.2.1:
+  version "5.2.1"
+  resolved "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz"
+  integrity sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==
+
+safe-push-apply@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz"
+  integrity sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==
+  dependencies:
+    es-errors "^1.3.0"
+    isarray "^2.0.5"
+
+safe-regex-test@^1.0.3, safe-regex-test@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz"
+  integrity sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==
+  dependencies:
+    call-bound "^1.0.2"
+    es-errors "^1.3.0"
+    is-regex "^1.2.1"
+
+"safer-buffer@>= 2.1.2 < 3.0.0":
+  version "2.1.2"
+  resolved "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz"
+  integrity sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==
+
+scheduler@^0.25.0:
+  version "0.25.0"
+  resolved "https://registry.npmjs.org/scheduler/-/scheduler-0.25.0.tgz"
+  integrity sha512-xFVuu11jh+xcO7JOAGJNOXld8/TcEHK/4CituBUeUb5hqxJLj9YuemAEuvm9gQ/+pgXYfbQuqAkiYu+u7YEsNA==
+
+semver@^6.3.1:
+  version "6.3.1"
+  resolved "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz"
+  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==
+
+semver@^7.6.0, semver@^7.6.3, semver@^7.7.1:
+  version "7.7.2"
+  resolved "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz"
+  integrity sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==
+
+send@^1.1.0, send@^1.2.0:
+  version "1.2.0"
+  resolved "https://registry.npmjs.org/send/-/send-1.2.0.tgz"
+  integrity sha512-uaW0WwXKpL9blXE2o0bRhoL2EGXIrZxQ2ZQ4mgcfoBxdFmQold+qWsD2jLrfZ0trjKL6vOw0j//eAwcALFjKSw==
+  dependencies:
+    debug "^4.3.5"
+    encodeurl "^2.0.0"
+    escape-html "^1.0.3"
+    etag "^1.8.1"
+    fresh "^2.0.0"
+    http-errors "^2.0.0"
+    mime-types "^3.0.1"
+    ms "^2.1.3"
+    on-finished "^2.4.1"
+    range-parser "^1.2.1"
+    statuses "^2.0.1"
+
+serve-static@^2.1.0:
+  version "2.2.0"
+  resolved "https://registry.npmjs.org/serve-static/-/serve-static-2.2.0.tgz"
+  integrity sha512-61g9pCh0Vnh7IutZjtLGGpTA355+OPn2TyDv/6ivP2h/AdAVX9azsoxmg2/M6nZeQZNYBEwIcsne1mJd9oQItQ==
+  dependencies:
+    encodeurl "^2.0.0"
+    escape-html "^1.0.3"
+    parseurl "^1.3.3"
+    send "^1.2.0"
+
+set-function-length@^1.2.2:
+  version "1.2.2"
+  resolved "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz"
+  integrity sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==
+  dependencies:
+    define-data-property "^1.1.4"
+    es-errors "^1.3.0"
+    function-bind "^1.1.2"
+    get-intrinsic "^1.2.4"
+    gopd "^1.0.1"
+    has-property-descriptors "^1.0.2"
+
+set-function-name@^2.0.2:
+  version "2.0.2"
+  resolved "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz"
+  integrity sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==
+  dependencies:
+    define-data-property "^1.1.4"
+    es-errors "^1.3.0"
+    functions-have-names "^1.2.3"
+    has-property-descriptors "^1.0.2"
+
+set-proto@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz"
+  integrity sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==
+  dependencies:
+    dunder-proto "^1.0.1"
+    es-errors "^1.3.0"
+    es-object-atoms "^1.0.0"
+
+setprototypeof@1.2.0:
+  version "1.2.0"
+  resolved "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz"
+  integrity sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==
+
+sharp@^0.33.5:
+  version "0.33.5"
+  resolved "https://registry.npmjs.org/sharp/-/sharp-0.33.5.tgz"
+  integrity sha512-haPVm1EkS9pgvHrQ/F3Xy+hgcuMV0Wm9vfIBSiwZ05k+xgb0PkBQpGsAA/oWdDobNaZTH5ppvHtzCFbnSEwHVw==
+  dependencies:
+    color "^4.2.3"
+    detect-libc "^2.0.3"
+    semver "^7.6.3"
+  optionalDependencies:
+    "@img/sharp-darwin-arm64" "0.33.5"
+    "@img/sharp-darwin-x64" "0.33.5"
+    "@img/sharp-libvips-darwin-arm64" "1.0.4"
+    "@img/sharp-libvips-darwin-x64" "1.0.4"
+    "@img/sharp-libvips-linux-arm" "1.0.5"
+    "@img/sharp-libvips-linux-arm64" "1.0.4"
+    "@img/sharp-libvips-linux-s390x" "1.0.4"
+    "@img/sharp-libvips-linux-x64" "1.0.4"
+    "@img/sharp-libvips-linuxmusl-arm64" "1.0.4"
+    "@img/sharp-libvips-linuxmusl-x64" "1.0.4"
+    "@img/sharp-linux-arm" "0.33.5"
+    "@img/sharp-linux-arm64" "0.33.5"
+    "@img/sharp-linux-s390x" "0.33.5"
+    "@img/sharp-linux-x64" "0.33.5"
+    "@img/sharp-linuxmusl-arm64" "0.33.5"
+    "@img/sharp-linuxmusl-x64" "0.33.5"
+    "@img/sharp-wasm32" "0.33.5"
+    "@img/sharp-win32-ia32" "0.33.5"
+    "@img/sharp-win32-x64" "0.33.5"
+
+shebang-command@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz"
+  integrity sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==
+  dependencies:
+    shebang-regex "^3.0.0"
+
+shebang-regex@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz"
+  integrity sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==
+
+side-channel-list@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz"
+  integrity sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==
+  dependencies:
+    es-errors "^1.3.0"
+    object-inspect "^1.13.3"
+
+side-channel-map@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz"
+  integrity sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==
+  dependencies:
+    call-bound "^1.0.2"
+    es-errors "^1.3.0"
+    get-intrinsic "^1.2.5"
+    object-inspect "^1.13.3"
+
+side-channel-weakmap@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz"
+  integrity sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==
+  dependencies:
+    call-bound "^1.0.2"
+    es-errors "^1.3.0"
+    get-intrinsic "^1.2.5"
+    object-inspect "^1.13.3"
+    side-channel-map "^1.0.1"
+
+side-channel@^1.0.6, side-channel@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz"
+  integrity sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==
+  dependencies:
+    es-errors "^1.3.0"
+    object-inspect "^1.13.3"
+    side-channel-list "^1.0.0"
+    side-channel-map "^1.0.1"
+    side-channel-weakmap "^1.0.2"
+
+signal-exit@^3.0.3:
+  version "3.0.7"
+  resolved "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz"
+  integrity sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==
+
+signal-exit@^4.0.1:
+  version "4.1.0"
+  resolved "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz"
+  integrity sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==
+
+simple-swizzle@^0.2.2:
+  version "0.2.2"
+  resolved "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz"
+  integrity sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==
+  dependencies:
+    is-arrayish "^0.3.1"
+
+sonner@^1.7.2:
+  version "1.7.4"
+  resolved "https://registry.npmjs.org/sonner/-/sonner-1.7.4.tgz"
+  integrity sha512-DIS8z4PfJRbIyfVFDVnK9rO3eYDtse4Omcm6bt0oEr5/jtLgysmjuBl1frJ9E/EQZrFmKx2A8m/s5s9CRXIzhw==
+
+source-map-js@^1.0.2, source-map-js@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz"
+  integrity sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==
+
+source-map-support@~0.5.20:
+  version "0.5.21"
+  resolved "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz"
+  integrity sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==
+  dependencies:
+    buffer-from "^1.0.0"
+    source-map "^0.6.0"
+
+source-map@^0.6.0, source-map@^0.6.1:
+  version "0.6.1"
+  resolved "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz"
+  integrity sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==
+
+sourcemap-codec@^1.4.8:
+  version "1.4.8"
+  resolved "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz"
+  integrity sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==
+
+stable-hash@^0.0.5:
+  version "0.0.5"
+  resolved "https://registry.npmjs.org/stable-hash/-/stable-hash-0.0.5.tgz"
+  integrity sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==
+
+stacktracey@^2.1.8:
+  version "2.1.8"
+  resolved "https://registry.npmjs.org/stacktracey/-/stacktracey-2.1.8.tgz"
+  integrity sha512-Kpij9riA+UNg7TnphqjH7/CzctQ/owJGNbFkfEeve4Z4uxT5+JapVLFXcsurIfN34gnTWZNJ/f7NMG0E8JDzTw==
+  dependencies:
+    as-table "^1.0.36"
+    get-source "^2.0.12"
+
+statuses@^2.0.1, statuses@2.0.1:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz"
+  integrity sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==
+
+stop-iteration-iterator@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz"
+  integrity sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==
+  dependencies:
+    es-errors "^1.3.0"
+    internal-slot "^1.1.0"
+
+stoppable@1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/stoppable/-/stoppable-1.1.0.tgz"
+  integrity sha512-KXDYZ9dszj6bzvnEMRYvxgeTHU74QBFL54XKtP3nyMuJ81CFYtABZ3bAzL2EdFUaEwJOBOgENyFj3R7oTzDyyw==
+
+streamsearch@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz"
+  integrity sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==
+
+"string-width-cjs@npm:string-width@^4.2.0":
+  version "4.2.3"
+  resolved "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz"
+  integrity sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==
+  dependencies:
+    emoji-regex "^8.0.0"
+    is-fullwidth-code-point "^3.0.0"
+    strip-ansi "^6.0.1"
+
+string-width@^4.1.0:
+  version "4.2.3"
+  resolved "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz"
+  integrity sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==
+  dependencies:
+    emoji-regex "^8.0.0"
+    is-fullwidth-code-point "^3.0.0"
+    strip-ansi "^6.0.1"
+
+string-width@^5.0.1, string-width@^5.1.2:
+  version "5.1.2"
+  resolved "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz"
+  integrity sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==
+  dependencies:
+    eastasianwidth "^0.2.0"
+    emoji-regex "^9.2.2"
+    strip-ansi "^7.0.1"
+
+string.prototype.includes@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz"
+  integrity sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==
+  dependencies:
+    call-bind "^1.0.7"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.3"
+
+string.prototype.matchall@^4.0.12:
+  version "4.0.12"
+  resolved "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz"
+  integrity sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.3"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.6"
+    es-errors "^1.3.0"
+    es-object-atoms "^1.0.0"
+    get-intrinsic "^1.2.6"
+    gopd "^1.2.0"
+    has-symbols "^1.1.0"
+    internal-slot "^1.1.0"
+    regexp.prototype.flags "^1.5.3"
+    set-function-name "^2.0.2"
+    side-channel "^1.1.0"
+
+string.prototype.repeat@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz"
+  integrity sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==
+  dependencies:
+    define-properties "^1.1.3"
+    es-abstract "^1.17.5"
+
+string.prototype.trim@^1.2.10:
+  version "1.2.10"
+  resolved "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz"
+  integrity sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.2"
+    define-data-property "^1.1.4"
+    define-properties "^1.2.1"
+    es-abstract "^1.23.5"
+    es-object-atoms "^1.0.0"
+    has-property-descriptors "^1.0.2"
+
+string.prototype.trimend@^1.0.8, string.prototype.trimend@^1.0.9:
+  version "1.0.9"
+  resolved "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz"
+  integrity sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==
+  dependencies:
+    call-bind "^1.0.8"
+    call-bound "^1.0.2"
+    define-properties "^1.2.1"
+    es-object-atoms "^1.0.0"
+
+string.prototype.trimstart@^1.0.8:
+  version "1.0.8"
+  resolved "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz"
+  integrity sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==
+  dependencies:
+    call-bind "^1.0.7"
+    define-properties "^1.2.1"
+    es-object-atoms "^1.0.0"
+
+"strip-ansi-cjs@npm:strip-ansi@^6.0.1":
+  version "6.0.1"
+  resolved "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz"
+  integrity sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==
+  dependencies:
+    ansi-regex "^5.0.1"
+
+strip-ansi@^6.0.0, strip-ansi@^6.0.1:
+  version "6.0.1"
+  resolved "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz"
+  integrity sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==
+  dependencies:
+    ansi-regex "^5.0.1"
+
+strip-ansi@^7.0.1:
+  version "7.1.0"
+  resolved "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz"
+  integrity sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==
+  dependencies:
+    ansi-regex "^6.0.1"
+
+strip-bom@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz"
+  integrity sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==
+
+strip-final-newline@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz"
+  integrity sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==
+
+strip-json-comments@^3.1.1:
+  version "3.1.1"
+  resolved "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz"
+  integrity sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==
+
+strnum@^1.0.5:
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/strnum/-/strnum-1.1.2.tgz"
+  integrity sha512-vrN+B7DBIoTTZjnPNewwhx6cBA/H+IS7rfW68n7XxC1y7uoiGQBxaKzqucGUgavX15dJgiGztLJ8vxuEzwqBdA==
+
+styled-jsx@5.1.6:
+  version "5.1.6"
+  resolved "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz"
+  integrity sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==
+  dependencies:
+    client-only "0.0.1"
+
+sucrase@^3.35.0:
+  version "3.35.0"
+  resolved "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz"
+  integrity sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==
+  dependencies:
+    "@jridgewell/gen-mapping" "^0.3.2"
+    commander "^4.0.0"
+    glob "^10.3.10"
+    lines-and-columns "^1.1.6"
+    mz "^2.7.0"
+    pirates "^4.0.1"
+    ts-interface-checker "^0.1.9"
+
+supports-color@^7.1.0:
+  version "7.2.0"
+  resolved "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz"
+  integrity sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==
+  dependencies:
+    has-flag "^4.0.0"
+
+supports-preserve-symlinks-flag@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz"
+  integrity sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==
+
+tailwind-merge@^2.6.0:
+  version "2.6.0"
+  resolved "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-2.6.0.tgz"
+  integrity sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==
+
+tailwindcss-animate@^1.0.7:
+  version "1.0.7"
+  resolved "https://registry.npmjs.org/tailwindcss-animate/-/tailwindcss-animate-1.0.7.tgz"
+  integrity sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==
+
+tailwindcss@^3.4.1:
+  version "3.4.17"
+  resolved "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz"
+  integrity sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==
+  dependencies:
+    "@alloc/quick-lru" "^5.2.0"
+    arg "^5.0.2"
+    chokidar "^3.6.0"
+    didyoumean "^1.2.2"
+    dlv "^1.1.3"
+    fast-glob "^3.3.2"
+    glob-parent "^6.0.2"
+    is-glob "^4.0.3"
+    jiti "^1.21.6"
+    lilconfig "^3.1.3"
+    micromatch "^4.0.8"
+    normalize-path "^3.0.0"
+    object-hash "^3.0.0"
+    picocolors "^1.1.1"
+    postcss "^8.4.47"
+    postcss-import "^15.1.0"
+    postcss-js "^4.0.1"
+    postcss-load-config "^4.0.2"
+    postcss-nested "^6.2.0"
+    postcss-selector-parser "^6.1.2"
+    resolve "^1.22.8"
+    sucrase "^3.35.0"
+
+terser@5.16.9:
+  version "5.16.9"
+  resolved "https://registry.npmjs.org/terser/-/terser-5.16.9.tgz"
+  integrity sha512-HPa/FdTB9XGI2H1/keLFZHxl6WNvAI4YalHGtDQTlMnJcoqSab1UwL4l1hGEhs6/GmLHBZIg/YgB++jcbzoOEg==
+  dependencies:
+    "@jridgewell/source-map" "^0.3.2"
+    acorn "^8.5.0"
+    commander "^2.20.0"
+    source-map-support "~0.5.20"
+
+thenify-all@^1.0.0:
+  version "1.6.0"
+  resolved "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz"
+  integrity sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==
+  dependencies:
+    thenify ">= 3.1.0 < 4"
+
+"thenify@>= 3.1.0 < 4":
+  version "3.3.1"
+  resolved "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz"
+  integrity sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==
+  dependencies:
+    any-promise "^1.0.0"
+
+tiny-invariant@^1.3.1:
+  version "1.3.3"
+  resolved "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz"
+  integrity sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==
+
+tinyglobby@^0.2.13:
+  version "0.2.14"
+  resolved "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz"
+  integrity sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==
+  dependencies:
+    fdir "^6.4.4"
+    picomatch "^4.0.2"
+
+tlds@^1.234.0:
+  version "1.259.0"
+  resolved "https://registry.npmjs.org/tlds/-/tlds-1.259.0.tgz"
+  integrity sha512-AldGGlDP0PNgwppe2quAvuBl18UcjuNtOnDuUkqhd6ipPqrYYBt3aTxK1QTsBVknk97lS2JcafWMghjGWFtunw==
+
+to-regex-range@^5.0.1:
+  version "5.0.1"
+  resolved "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz"
+  integrity sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==
+  dependencies:
+    is-number "^7.0.0"
+
+toidentifier@1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz"
+  integrity sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==
+
+ts-api-utils@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz"
+  integrity sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==
+
+ts-interface-checker@^0.1.9:
+  version "0.1.13"
+  resolved "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz"
+  integrity sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==
+
+ts-morph@^23.0.0:
+  version "23.0.0"
+  resolved "https://registry.npmjs.org/ts-morph/-/ts-morph-23.0.0.tgz"
+  integrity sha512-FcvFx7a9E8TUe6T3ShihXJLiJOiqyafzFKUO4aqIHDUCIvADdGNShcbc2W5PMr3LerXRv7mafvFZ9lRENxJmug==
+  dependencies:
+    "@ts-morph/common" "~0.24.0"
+    code-block-writer "^13.0.1"
+
+tsconfig-paths@^3.15.0:
+  version "3.15.0"
+  resolved "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz"
+  integrity sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==
+  dependencies:
+    "@types/json5" "^0.0.29"
+    json5 "^1.0.2"
+    minimist "^1.2.6"
+    strip-bom "^3.0.0"
+
+tslib@^1.11.1:
+  version "1.14.1"
+  resolved "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz"
+  integrity sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==
+
+tslib@^2.0.0, tslib@^2.1.0, tslib@^2.3.1, tslib@^2.4.0, tslib@^2.5.0, tslib@^2.6.2, tslib@^2.8.0:
+  version "2.8.1"
+  resolved "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz"
+  integrity sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==
+
+turbo-darwin-arm64@2.5.4:
+  version "2.5.4"
+  resolved "https://registry.npmjs.org/turbo-darwin-arm64/-/turbo-darwin-arm64-2.5.4.tgz"
+  integrity sha512-2+Nx6LAyuXw2MdXb7pxqle3MYignLvS7OwtsP9SgtSBaMlnNlxl9BovzqdYAgkUW3AsYiQMJ/wBRb7d+xemM5A==
+
+turbo@^2.3.3:
+  version "2.5.4"
+  resolved "https://registry.npmjs.org/turbo/-/turbo-2.5.4.tgz"
+  integrity sha512-kc8ZibdRcuWUG1pbYSBFWqmIjynlD8Lp7IB6U3vIzvOv9VG+6Sp8bzyeBWE3Oi8XV5KsQrznyRTBPvrf99E4mA==
+  optionalDependencies:
+    turbo-darwin-64 "2.5.4"
+    turbo-darwin-arm64 "2.5.4"
+    turbo-linux-64 "2.5.4"
+    turbo-linux-arm64 "2.5.4"
+    turbo-windows-64 "2.5.4"
+    turbo-windows-arm64 "2.5.4"
+
+type-check@^0.4.0, type-check@~0.4.0:
+  version "0.4.0"
+  resolved "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz"
+  integrity sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==
+  dependencies:
+    prelude-ls "^1.2.1"
+
+type-is@^2.0.0:
+  version "2.0.1"
+  resolved "https://registry.npmjs.org/type-is/-/type-is-2.0.1.tgz"
+  integrity sha512-OZs6gsjF4vMp32qrCbiVSkrFmXtG/AZhY3t0iAMrMBiAZyV9oALtXO8hsrHbMXF9x6L3grlFuwW2oAz7cav+Gw==
+  dependencies:
+    content-type "^1.0.5"
+    media-typer "^1.1.0"
+    mime-types "^3.0.0"
+
+typed-array-buffer@^1.0.3:
+  version "1.0.3"
+  resolved "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz"
+  integrity sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==
+  dependencies:
+    call-bound "^1.0.3"
+    es-errors "^1.3.0"
+    is-typed-array "^1.1.14"
+
+typed-array-byte-length@^1.0.3:
+  version "1.0.3"
+  resolved "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz"
+  integrity sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==
+  dependencies:
+    call-bind "^1.0.8"
+    for-each "^0.3.3"
+    gopd "^1.2.0"
+    has-proto "^1.2.0"
+    is-typed-array "^1.1.14"
+
+typed-array-byte-offset@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz"
+  integrity sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==
+  dependencies:
+    available-typed-arrays "^1.0.7"
+    call-bind "^1.0.8"
+    for-each "^0.3.3"
+    gopd "^1.2.0"
+    has-proto "^1.2.0"
+    is-typed-array "^1.1.15"
+    reflect.getprototypeof "^1.0.9"
+
+typed-array-length@^1.0.7:
+  version "1.0.7"
+  resolved "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz"
+  integrity sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==
+  dependencies:
+    call-bind "^1.0.7"
+    for-each "^0.3.3"
+    gopd "^1.0.1"
+    is-typed-array "^1.1.13"
+    possible-typed-array-names "^1.0.0"
+    reflect.getprototypeof "^1.0.6"
+
+typescript@^5:
+  version "5.8.3"
+  resolved "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz"
+  integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==
+
+ufo@^1.5.4:
+  version "1.6.1"
+  resolved "https://registry.npmjs.org/ufo/-/ufo-1.6.1.tgz"
+  integrity sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==
+
+uint8arrays@3.0.0:
+  version "3.0.0"
+  resolved "https://registry.npmjs.org/uint8arrays/-/uint8arrays-3.0.0.tgz"
+  integrity sha512-HRCx0q6O9Bfbp+HHSfQQKD7wU70+lydKVt4EghkdOvlK/NlrF90z+eXV34mUd48rNvVJXwkrMSPpCATkct8fJA==
+  dependencies:
+    multiformats "^9.4.2"
+
+unbox-primitive@^1.1.0:
+  version "1.1.0"
+  resolved "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz"
+  integrity sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==
+  dependencies:
+    call-bound "^1.0.3"
+    has-bigints "^1.0.2"
+    has-symbols "^1.1.0"
+    which-boxed-primitive "^1.1.1"
+
+undici-types@~6.19.2:
+  version "6.19.8"
+  resolved "https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz"
+  integrity sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==
+
+undici@^5.28.5:
+  version "5.29.0"
+  resolved "https://registry.npmjs.org/undici/-/undici-5.29.0.tgz"
+  integrity sha512-raqeBD6NQK4SkWhQzeYKd1KmIG6dllBOTt55Rmkt4HtI9mwdWtJljnrXjAFUBLTSN67HWrOIZ3EPF4kjUw80Bg==
+  dependencies:
+    "@fastify/busboy" "^2.0.0"
+
+unenv@2.0.0-rc.14:
+  version "2.0.0-rc.14"
+  resolved "https://registry.npmjs.org/unenv/-/unenv-2.0.0-rc.14.tgz"
+  integrity sha512-od496pShMen7nOy5VmVJCnq8rptd45vh6Nx/r2iPbrba6pa6p+tS2ywuIHRZ/OBvSbQZB0kWvpO9XBNVFXHD3Q==
+  dependencies:
+    defu "^6.1.4"
+    exsolve "^1.0.1"
+    ohash "^2.0.10"
+    pathe "^2.0.3"
+    ufo "^1.5.4"
+
+unpipe@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz"
+  integrity sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==
+
+unrs-resolver@^1.6.2:
+  version "1.7.11"
+  resolved "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.7.11.tgz"
+  integrity sha512-OhuAzBImFPjKNgZ2JwHMfGFUA6NSbRegd1+BPjC1Y0E6X9Y/vJ4zKeGmIMqmlYboj6cMNEwKI+xQisrg4J0HaQ==
+  dependencies:
+    napi-postinstall "^0.2.2"
+  optionalDependencies:
+    "@unrs/resolver-binding-darwin-arm64" "1.7.11"
+    "@unrs/resolver-binding-darwin-x64" "1.7.11"
+    "@unrs/resolver-binding-freebsd-x64" "1.7.11"
+    "@unrs/resolver-binding-linux-arm-gnueabihf" "1.7.11"
+    "@unrs/resolver-binding-linux-arm-musleabihf" "1.7.11"
+    "@unrs/resolver-binding-linux-arm64-gnu" "1.7.11"
+    "@unrs/resolver-binding-linux-arm64-musl" "1.7.11"
+    "@unrs/resolver-binding-linux-ppc64-gnu" "1.7.11"
+    "@unrs/resolver-binding-linux-riscv64-gnu" "1.7.11"
+    "@unrs/resolver-binding-linux-riscv64-musl" "1.7.11"
+    "@unrs/resolver-binding-linux-s390x-gnu" "1.7.11"
+    "@unrs/resolver-binding-linux-x64-gnu" "1.7.11"
+    "@unrs/resolver-binding-linux-x64-musl" "1.7.11"
+    "@unrs/resolver-binding-wasm32-wasi" "1.7.11"
+    "@unrs/resolver-binding-win32-arm64-msvc" "1.7.11"
+    "@unrs/resolver-binding-win32-ia32-msvc" "1.7.11"
+    "@unrs/resolver-binding-win32-x64-msvc" "1.7.11"
+
+uri-js@^4.2.2:
+  version "4.4.1"
+  resolved "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz"
+  integrity sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==
+  dependencies:
+    punycode "^2.1.0"
+
+urlpattern-polyfill@^10.0.0:
+  version "10.1.0"
+  resolved "https://registry.npmjs.org/urlpattern-polyfill/-/urlpattern-polyfill-10.1.0.tgz"
+  integrity sha512-IGjKp/o0NL3Bso1PymYURCJxMPNAf/ILOpendP9f5B6e1rTJgdgiOvgfoT8VxCAdY+Wisb9uhGaJJf3yZ2V9nw==
+
+use-callback-ref@^1.3.0, use-callback-ref@^1.3.3:
+  version "1.3.3"
+  resolved "https://registry.npmjs.org/use-callback-ref/-/use-callback-ref-1.3.3.tgz"
+  integrity sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==
+  dependencies:
+    tslib "^2.0.0"
+
+use-sidecar@^1.1.2, use-sidecar@^1.1.3:
+  version "1.1.3"
+  resolved "https://registry.npmjs.org/use-sidecar/-/use-sidecar-1.1.3.tgz"
+  integrity sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==
+  dependencies:
+    detect-node-es "^1.1.0"
+    tslib "^2.0.0"
+
+use-sync-external-store@^1.5.0:
+  version "1.5.0"
+  resolved "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz"
+  integrity sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==
+
+util-deprecate@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz"
+  integrity sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==
+
+utils-merge@1.0.1:
+  version "1.0.1"
+  resolved "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz"
+  integrity sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==
+
+uuid@^9.0.1:
+  version "9.0.1"
+  resolved "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz"
+  integrity sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==
+
+vary@~1.1.2:
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz"
+  integrity sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==
+
+vaul@^1.1.2:
+  version "1.1.2"
+  resolved "https://registry.npmjs.org/vaul/-/vaul-1.1.2.tgz"
+  integrity sha512-ZFkClGpWyI2WUQjdLJ/BaGuV6AVQiJ3uELGk3OYtP+B6yCO7Cmn9vPFXVJkRaGkOJu3m8bQMgtyzNHixULceQA==
+  dependencies:
+    "@radix-ui/react-dialog" "^1.1.1"
+
+victory-vendor@^36.6.8:
+  version "36.9.2"
+  resolved "https://registry.npmjs.org/victory-vendor/-/victory-vendor-36.9.2.tgz"
+  integrity sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==
+  dependencies:
+    "@types/d3-array" "^3.0.3"
+    "@types/d3-ease" "^3.0.0"
+    "@types/d3-interpolate" "^3.0.1"
+    "@types/d3-scale" "^4.0.2"
+    "@types/d3-shape" "^3.1.0"
+    "@types/d3-time" "^3.0.0"
+    "@types/d3-timer" "^3.0.0"
+    d3-array "^3.1.6"
+    d3-ease "^3.0.1"
+    d3-interpolate "^3.0.1"
+    d3-scale "^4.0.2"
+    d3-shape "^3.1.0"
+    d3-time "^3.0.0"
+    d3-timer "^3.0.1"
+
+which-boxed-primitive@^1.1.0, which-boxed-primitive@^1.1.1:
+  version "1.1.1"
+  resolved "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz"
+  integrity sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==
+  dependencies:
+    is-bigint "^1.1.0"
+    is-boolean-object "^1.2.1"
+    is-number-object "^1.1.1"
+    is-string "^1.1.1"
+    is-symbol "^1.1.1"
+
+which-builtin-type@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz"
+  integrity sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==
+  dependencies:
+    call-bound "^1.0.2"
+    function.prototype.name "^1.1.6"
+    has-tostringtag "^1.0.2"
+    is-async-function "^2.0.0"
+    is-date-object "^1.1.0"
+    is-finalizationregistry "^1.1.0"
+    is-generator-function "^1.0.10"
+    is-regex "^1.2.1"
+    is-weakref "^1.0.2"
+    isarray "^2.0.5"
+    which-boxed-primitive "^1.1.0"
+    which-collection "^1.0.2"
+    which-typed-array "^1.1.16"
+
+which-collection@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz"
+  integrity sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==
+  dependencies:
+    is-map "^2.0.3"
+    is-set "^2.0.3"
+    is-weakmap "^2.0.2"
+    is-weakset "^2.0.3"
+
+which-typed-array@^1.1.16, which-typed-array@^1.1.19:
+  version "1.1.19"
+  resolved "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz"
+  integrity sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==
+  dependencies:
+    available-typed-arrays "^1.0.7"
+    call-bind "^1.0.8"
+    call-bound "^1.0.4"
+    for-each "^0.3.5"
+    get-proto "^1.0.1"
+    gopd "^1.2.0"
+    has-tostringtag "^1.0.2"
+
+which@^2.0.1:
+  version "2.0.2"
+  resolved "https://registry.npmjs.org/which/-/which-2.0.2.tgz"
+  integrity sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==
+  dependencies:
+    isexe "^2.0.0"
+
+which@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.npmjs.org/which/-/which-4.0.0.tgz"
+  integrity sha512-GlaYyEb07DPxYCKhKzplCWBJtvxZcZMrL+4UkrTSJHHPyZU4mYYTv3qaOe77H7EODLSSopAUFAc6W8U4yqvscg==
+  dependencies:
+    isexe "^3.1.1"
+
+word-wrap@^1.2.5:
+  version "1.2.5"
+  resolved "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz"
+  integrity sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==
+
+workerd@1.20250408.0:
+  version "1.20250408.0"
+  resolved "https://registry.npmjs.org/workerd/-/workerd-1.20250408.0.tgz"
+  integrity sha512-bBUX+UsvpzAqiWFNeZrlZmDGddiGZdBBbftZJz2wE6iUg/cIAJeVQYTtS/3ahaicguoLBz4nJiDo8luqM9fx1A==
+  optionalDependencies:
+    "@cloudflare/workerd-darwin-64" "1.20250408.0"
+    "@cloudflare/workerd-darwin-arm64" "1.20250408.0"
+    "@cloudflare/workerd-linux-64" "1.20250408.0"
+    "@cloudflare/workerd-linux-arm64" "1.20250408.0"
+    "@cloudflare/workerd-windows-64" "1.20250408.0"
+
+wrangler@^3.63.0:
+  version "3.114.9"
+  resolved "https://registry.npmjs.org/wrangler/-/wrangler-3.114.9.tgz"
+  integrity sha512-1e0gL+rxLF04kM9bW4sxoDGLXpJ1x53Rx1t18JuUm6F67qadKKPISyUAXuBeIQudWrCWEBXaTVnSdLHz0yBXbA==
+  dependencies:
+    "@cloudflare/kv-asset-handler" "0.3.4"
+    "@cloudflare/unenv-preset" "2.0.2"
+    "@esbuild-plugins/node-globals-polyfill" "0.2.3"
+    "@esbuild-plugins/node-modules-polyfill" "0.2.2"
+    blake3-wasm "2.1.5"
+    esbuild "0.17.19"
+    miniflare "3.20250408.2"
+    path-to-regexp "6.3.0"
+    unenv "2.0.0-rc.14"
+    workerd "1.20250408.0"
+  optionalDependencies:
+    fsevents "~2.3.2"
+    sharp "^0.33.5"
+
+"wrap-ansi-cjs@npm:wrap-ansi@^7.0.0":
+  version "7.0.0"
+  resolved "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz"
+  integrity sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==
+  dependencies:
+    ansi-styles "^4.0.0"
+    string-width "^4.1.0"
+    strip-ansi "^6.0.0"
+
+wrap-ansi@^8.1.0:
+  version "8.1.0"
+  resolved "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz"
+  integrity sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==
+  dependencies:
+    ansi-styles "^6.1.0"
+    string-width "^5.0.1"
+    strip-ansi "^7.0.1"
+
+wrappy@1:
+  version "1.0.2"
+  resolved "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz"
+  integrity sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==
+
+ws@8.18.0:
+  version "8.18.0"
+  resolved "https://registry.npmjs.org/ws/-/ws-8.18.0.tgz"
+  integrity sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==
+
+yaml@^2.3.4, yaml@^2.7.0:
+  version "2.8.0"
+  resolved "https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz"
+  integrity sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==
+
+yocto-queue@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz"
+  integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==
+
+youch@3.3.4:
+  version "3.3.4"
+  resolved "https://registry.npmjs.org/youch/-/youch-3.3.4.tgz"
+  integrity sha512-UeVBXie8cA35DS6+nBkls68xaBBXCye0CNznrhszZjTbRVnJKQuNsyLKBTTL4ln1o1rh2PKtv35twV7irj5SEg==
+  dependencies:
+    cookie "^0.7.1"
+    mustache "^4.2.0"
+    stacktracey "^2.1.8"
+
+zod@^3.23.8, zod@^3.24.1:
+  version "3.25.51"
+  resolved "https://registry.npmjs.org/zod/-/zod-3.25.51.tgz"
+  integrity sha512-TQSnBldh+XSGL+opiSIq0575wvDPqu09AqWe1F7JhUMKY+M91/aGlK4MhpVNO7MgYfHcVCB1ffwAUTJzllKJqg==
+
+zod@3.22.3:
+  version "3.22.3"
+  resolved "https://registry.npmjs.org/zod/-/zod-3.22.3.tgz"
+  integrity sha512-EjIevzuJRiRPbVH4mGc8nApb/lVLKVpmUhAaR5R5doKGfAnGJ6Gr3CViAVjP+4FWSxCsybeWQdcgCtbX+7oZug==
